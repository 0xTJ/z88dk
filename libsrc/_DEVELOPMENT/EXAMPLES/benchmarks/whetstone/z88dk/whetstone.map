TAR__clib_malloc_heap_size      = $FFFFFFFF ; L zx_crt
TAR__crt_interrupt_mode         = $FFFFFFFF ; L zx_crt
__clib_malloc_heap_size         = $FFFFFFFF ; L zx_crt
__crt_interrupt_mode            = $FFFFFFFF ; L zx_crt
CLIB_OPT_PRINTF_2               = $0000 ; L zx_crt
DEF__crt_enable_trap            = $0000 ; L zx_crt
IOCTL_RESET                     = $0000 ; G zx_crt
SP1V_DISPORIGX                  = $0000 ; G zx_crt
SP1V_DISPORIGY                  = $0000 ; G zx_crt
STDIO_SEEK_SET                  = $0000 ; G zx_crt
TAR__clib_balloc_table_size     = $0000 ; L zx_crt
TAR__clib_exit_stack_size       = $0000 ; L zx_crt
TAR__clib_fopen_max             = $0000 ; L zx_crt
TAR__clib_open_max              = $0000 ; L zx_crt
TAR__clib_quickexit_stack_size  = $0000 ; L zx_crt
TAR__crt_enable_commandline     = $0000 ; L zx_crt
TAR__crt_enable_nmi             = $0000 ; L zx_crt
TAR__crt_enable_restart         = $0000 ; L zx_crt
TAR__crt_enable_rst             = $0000 ; L zx_crt
TAR__crt_include_preamble       = $0000 ; L zx_crt
TAR__crt_initialize_bss         = $0000 ; L zx_crt
TAR__crt_model                  = $0000 ; L zx_crt
TAR__crt_org_bss                = $0000 ; L zx_crt
TAR__crt_org_data               = $0000 ; L zx_crt
TAR__crt_org_vector_table       = $0000 ; L zx_crt
__BIFROST2_HOLE_SIZE            = $0000 ; G zx_crt
__BIFROSTH_SHIFT_COLUMNS        = $0000 ; G zx_crt
__BIFROSTH_SPRITE_MODE          = $0000 ; G zx_crt
__BSS_END_size                  = $0000 ; G 
__CLIB_OPT_ERROR                = $0000 ; L error_eacces_mc
__CLIB_OPT_ERROR                = $0000 ; L error_ebdfd_zc
__CLIB_OPT_ERROR                = $0000 ; L error_edom_mc
__CLIB_OPT_ERROR                = $0000 ; L error_edom_zc
__CLIB_OPT_ERROR                = $0000 ; L error_einval_zc
__CLIB_OPT_ERROR                = $0000 ; L error_enolck_zc
__CLIB_OPT_ERROR                = $0000 ; L error_enotsup_mc
__CLIB_OPT_ERROR                = $0000 ; L error_enotsup_zc
__CLIB_OPT_ERROR                = $0000 ; L error_erange_zc
__CLIB_OPT_ERROR                = $0000 ; G zx_crt
__CLIB_OPT_FASTCOPY             = $0000 ; L asm_memset
__CLIB_OPT_FASTCOPY             = $0000 ; G zx_crt
__CLIB_OPT_IMATH                = $0000 ; L __mullong_callee
__CLIB_OPT_IMATH                = $0000 ; L l_divu_16_16x8
__CLIB_OPT_IMATH                = $0000 ; L l_divu_32_32x8
__CLIB_OPT_IMATH                = $0000 ; L l_mulu_16_16x16
__CLIB_OPT_IMATH                = $0000 ; L l_mulu_32_32x32
__CLIB_OPT_IMATH                = $0000 ; G zx_crt
__CLIB_OPT_IMATH_SELECT         = $0000 ; L l_lsr_hl
__CLIB_OPT_IMATH_SELECT         = $0000 ; G zx_crt
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm__fflushall_unlocked
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm_vioctl
__CLIB_OPT_MULTITHREAD          = $0000 ; L printf
__CLIB_OPT_MULTITHREAD          = $0000 ; G zx_crt
__CLIB_OPT_NUM2TXT              = $0000 ; L asm_ultoa
__CLIB_OPT_NUM2TXT              = $0000 ; L asm_utoa
__CLIB_OPT_NUM2TXT              = $0000 ; G zx_crt
__CLIB_OPT_NUM2TXT_SELECT       = $0000 ; G zx_crt
__CLIB_OPT_PRINTF_2             = $0000 ; G zx_crt
__CLIB_OPT_SCANF_2              = $0000 ; G zx_crt
__CLIB_OPT_SORT_INSERTION       = $0000 ; G zx_crt
__CLIB_OPT_SORT_QSORT_PIVOT_MID = $0000 ; G zx_crt
__CLIB_OPT_STDIO                = $0000 ; L asm_fflush_unlocked
__CLIB_OPT_STDIO                = $0000 ; G zx_crt
__CLIB_OPT_STRTOD               = $0000 ; G zx_crt
__CLIB_OPT_TXT2NUM_SELECT       = $0000 ; L l_atou
__CLIB_OPT_TXT2NUM_SELECT       = $0000 ; G zx_crt
__CODE_END_size                 = $0000 ; G 
__CPU_INFO                      = $0000 ; G zx_crt
__CRTCFG                        = $0000 ; L zx_crt
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G zx_crt
__IGNORE_head                   = $0000 ; G 
__IGNORE_size                   = $0000 ; G 
__IGNORE_tail                   = $0000 ; G 
__MMAP                          = $0000 ; L zx_crt
__NIRVANAM_HOLE_SIZE            = $0000 ; G zx_crt
__NIRVANAM_OPTIONS              = $0000 ; G zx_crt
__NIRVANAP_HOLE_SIZE            = $0000 ; G zx_crt
__NIRVANAP_OPTIONS              = $0000 ; G zx_crt
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_stdio_size                = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L zx_crt
__clib_exit_stack_size          = $0000 ; L zx_crt
__clib_fopen_max                = $0000 ; G zx_crt
__clib_open_max                 = $0000 ; G zx_crt
__clib_quickexit_stack_size     = $0000 ; L zx_crt
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_common_size          = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_driver_character_output_size = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sccz80_size            = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_user_size                = $0000 ; G 
__code_vector_head              = $0000 ; G 
__code_vector_size              = $0000 ; G 
__code_vector_tail              = $0000 ; G 
__crt_enable_commandline        = $0000 ; L zx_crt
__crt_enable_restart            = $0000 ; L zx_crt
__crt_include_preamble          = $0000 ; L zx_crt
__crt_initialize_bss            = $0000 ; L zx_crt
__crt_model                     = $0000 ; L zx_crt
__crt_org_bss                   = $0000 ; L zx_crt
__crt_org_data                  = $0000 ; L zx_crt
__crt_org_vector_table          = $0000 ; L zx_crt
__data_alloc_balloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_compiler_size            = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__exit_stack_size               = $0000 ; G zx_crt
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G zx_crt
__rodata_clib_size              = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_error_strings_size     = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__size                          = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
__tail                          = $0000 ; G 
thrd_success                    = $0000 ; G zx_crt
DEFINED_CLIB_OPT_PRINTF         = $0001 ; L zx_crt
DEFINED_Z88DK_USES_SDCC         = $0001 ; L zx_crt
DEFINED_startup                 = $0001 ; L zx_crt
STDIO_MSG_PUTC                  = $0001 ; G zx_crt
STDIO_SEEK_CUR                  = $0001 ; L asm_fflush_unlocked
STDIO_SEEK_CUR                  = $0001 ; G zx_crt
TAR__crt_enable_close           = $0001 ; L zx_crt
TAR__crt_enable_eidi            = $0001 ; L zx_crt
Z88DK_USES_SDCC                 = $0001 ; L zx_crt
__BSS_size                      = $0001 ; G 
__CLIB_OPT_ERROR_ENABLED        = $0001 ; G zx_crt
__CLIB_OPT_FASTCOPY_MEMCPY      = $0001 ; G zx_crt
__CLIB_OPT_IMATH_FAST_DIV_UNROLL = $0001 ; G zx_crt
__CLIB_OPT_IMATH_SELECT_FAST_ASR = $0001 ; G zx_crt
__CLIB_OPT_MULTITHREAD_LOCK_HEAPS = $0001 ; G zx_crt
__CLIB_OPT_NUM2TXT_INT_BIN      = $0001 ; G zx_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_BIN = $0001 ; G zx_crt
__CLIB_OPT_PRINTF_2_lld         = $0001 ; G zx_crt
__CLIB_OPT_PRINTF_d             = $0001 ; G zx_crt
__CLIB_OPT_SCANF_2_lld          = $0001 ; G zx_crt
__CLIB_OPT_SCANF_d              = $0001 ; G zx_crt
__CLIB_OPT_SORT                 = $0001 ; G zx_crt
__CLIB_OPT_SORT_QSORT_PIVOT_RAN = $0001 ; G zx_crt
__CLIB_OPT_SORT_SHELL           = $0001 ; G zx_crt
__CLIB_OPT_STDIO_VALID          = $0001 ; G zx_crt
__CLIB_OPT_STRTOD_INF           = $0001 ; G zx_crt
__CLIB_OPT_STRTOD_NAN           = $0001 ; G zx_crt
__CLIB_OPT_TXT2NUM_INT_BIN      = $0001 ; G zx_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_BIN = $0001 ; G zx_crt
__CPU_INFO_ENABLE_SLL           = $0001 ; G zx_crt
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G zx_crt
__NIRVANAM_OPTIONS_WIDE_DRAW    = $0001 ; G zx_crt
__NIRVANAP_OPTIONS_WIDE_DRAW    = $0001 ; G zx_crt
__SDCC                          = $0001 ; L __stdio_nextarg_bc
__SDCC                          = $0001 ; L __stdio_nextarg_de
__SDCC                          = $0001 ; L __stdio_nextarg_hl
__SDCC                          = $0001 ; L __stdio_printf_e
__SDCC                          = $0001 ; L __stdio_printf_f
__SDCC                          = $0001 ; L __stdio_printf_number_tail_long
__SDCC                          = $0001 ; L __stdio_varg
__SDCC                          = $0001 ; L zx_crt
__SDCC_IY                       = $0001 ; L __mullong_callee
__SDCC_IY                       = $0001 ; L __stdio_nextarg_bc
__SDCC_IY                       = $0001 ; L __stdio_nextarg_de
__SDCC_IY                       = $0001 ; L __stdio_nextarg_hl
__SDCC_IY                       = $0001 ; L __stdio_printf_number_tail_long
__SDCC_IY                       = $0001 ; L __stdio_varg
__SDCC_IY                       = $0001 ; L zx_crt
__SOUND_BIT_METHOD              = $0001 ; L asm_bit_beep_raw
__SOUND_BIT_METHOD              = $0001 ; G zx_crt
__SPECTRUM                      = $0001 ; G zx_crt
__SPECTRUM_48                   = $0001 ; G zx_crt
__Z80                           = $0001 ; G zx_crt
__Z80_NMOS                      = $0001 ; G zx_crt
__crt_enable_close              = $0001 ; L zx_crt
__crt_enable_eidi               = $0001 ; L zx_crt
__data_sound_bit_size           = $0001 ; G 
__data_threads_size             = $0001 ; G 
__rodata_error_string_end_size  = $0001 ; G 
mtx_plain                       = $0001 ; G zx_crt
thrd_error                      = $0001 ; G zx_crt
STDIO_MSG_WRIT                  = $0002 ; G zx_crt
STDIO_SEEK_END                  = $0002 ; G zx_crt
__BSS_UNINITIALIZED_size        = $0002 ; G 
__CLIB_OPT_ERROR_VERBOSE        = $0002 ; G zx_crt
__CLIB_OPT_FASTCOPY_MEMSET      = $0002 ; G zx_crt
__CLIB_OPT_IMATH_FAST_DIV_LZEROS = $0002 ; G zx_crt
__CLIB_OPT_IMATH_SELECT_FAST_LSR = $0002 ; G zx_crt
__CLIB_OPT_MULTITHREAD_LOCK_FILES = $0002 ; G zx_crt
__CLIB_OPT_NUM2TXT_INT_OCT      = $0002 ; G zx_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_OCT = $0002 ; G zx_crt
__CLIB_OPT_PRINTF_2_llu         = $0002 ; G zx_crt
__CLIB_OPT_PRINTF_u             = $0002 ; G zx_crt
__CLIB_OPT_SCANF_2_llu          = $0002 ; G zx_crt
__CLIB_OPT_SCANF_u              = $0002 ; G zx_crt
__CLIB_OPT_SORT_QUICK           = $0002 ; G zx_crt
__CLIB_OPT_STRTOD_HEX           = $0002 ; G zx_crt
__CLIB_OPT_TXT2NUM_INT_OCT      = $0002 ; G zx_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_OCT = $0002 ; G zx_crt
__EBADF                         = $0002 ; G zx_crt
__NIRVANAM_OPTIONS_WIDE_SPRITES = $0002 ; G zx_crt
__NIRVANAP_OPTIONS_WIDE_SPRITES = $0002 ; G zx_crt
__SPECTRUM_128                  = $0002 ; G zx_crt
__Z80_CMOS                      = $0002 ; G zx_crt
__bss_error_size                = $0002 ; G 
__bss_stdlib_size               = $0002 ; G 
__data_alloc_malloc_size        = $0002 ; G 
__data_fcntl_size               = $0002 ; G 
__data_fcntl_stdio_heap_tail_size = $0002 ; G 
mtx_recursive                   = $0002 ; G zx_crt
thrd_nomem                      = $0002 ; G zx_crt
CHAR_CTRL_C                     = $0003 ; G zx_crt
DEF__crt_enforce_snames         = $0003 ; L zx_crt
STDIO_MSG_GETC                  = $0003 ; L character_00_input_stdio_msg_read
STDIO_MSG_GETC                  = $0003 ; G zx_crt
__CLIB_OPT_SORT_QSORT_PIVOT     = $0003 ; G zx_crt
__EBDFD                         = $0003 ; G zx_crt
__MAX_FOPEN                     = $0003 ; G zx_crt
__MAX_OPEN                      = $0003 ; G zx_crt
__crt_enforce_snames            = $0003 ; L zx_crt
__fcntl_fdtbl_size              = $0003 ; G zx_crt
CHAR_CTRL_D                     = $0004 ; L zx_01_input_inkey_iterm_msg_getc
CHAR_CTRL_D                     = $0004 ; G zx_crt
STDIO_MSG_EATC                  = $0004 ; G zx_crt
__BIFROST2_ANIM_GROUP           = $0004 ; G zx_crt
__BIFROSTH_ANIM_GROUP           = $0004 ; G zx_crt
__BIFROSTH_ANIM_SPEED           = $0004 ; G zx_crt
__BIFROSTL_ANIM_GROUP           = $0004 ; G zx_crt
__BIFROSTL_ANIM_SPEED           = $0004 ; G zx_crt
__CLIB_OPT_IMATH_FAST_MUL_UNROLL = $0004 ; G zx_crt
__CLIB_OPT_IMATH_SELECT_FAST_LSL = $0004 ; G zx_crt
__CLIB_OPT_MULTITHREAD_LOCK_FLIST = $0004 ; G zx_crt
__CLIB_OPT_NUM2TXT_INT_DEC      = $0004 ; G zx_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_DEC = $0004 ; G zx_crt
__CLIB_OPT_PRINTF_2_llx         = $0004 ; G zx_crt
__CLIB_OPT_PRINTF_x             = $0004 ; G zx_crt
__CLIB_OPT_SCANF_2_llx          = $0004 ; G zx_crt
__CLIB_OPT_SCANF_x              = $0004 ; G zx_crt
__CLIB_OPT_SORT_QSORT_ENABLE_INSERTION = $0004 ; G zx_crt
__CLIB_OPT_TXT2NUM              = $0004 ; G zx_crt
__CLIB_OPT_TXT2NUM_INT_DEC      = $0004 ; G zx_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_DEC = $0004 ; G zx_crt
__EDOM                          = $0004 ; G zx_crt
__SOUND_BIT_TOGGLE_POS          = $0004 ; L asm_bit_beep_raw
__SOUND_BIT_TOGGLE_POS          = $0004 ; G zx_crt
__SPECTRUM_128_P2               = $0004 ; G zx_crt
__code_crt_main_size            = $0004 ; G 
mtx_timed                       = $0004 ; G zx_crt
startup                         = $0004 ; L zx_crt
thrd_busy                       = $0004 ; G zx_crt
STDIO_MSG_READ                  = $0005 ; G zx_crt
__EFBIG                         = $0005 ; G zx_crt
CHAR_CAPS                       = $0006 ; L console_01_input_proc_getc
CHAR_CAPS                       = $0006 ; G zx_crt
STDIO_MSG_SEEK                  = $0006 ; L asm_fflush_unlocked
STDIO_MSG_SEEK                  = $0006 ; G zx_crt
__EINVAL                        = $0006 ; G zx_crt
__code_adt_p_forward_list_size  = $0006 ; G 
__data_fcntl_fdtable_body_size  = $0006 ; G 
__data_fcntl_stdio_heap_head_size = $0006 ; G 
CHAR_BELL                       = $0007 ; L console_01_output_char_oterm_msg_putc
CHAR_BELL                       = $0007 ; G zx_crt
STDIO_MSG_ICTL                  = $0007 ; L asm_vioctl
STDIO_MSG_ICTL                  = $0007 ; G zx_crt
TAR__crt_enable_streams         = $0007 ; L zx_crt
__BIFROST2_TILE_ORDER           = $0007 ; G zx_crt
__BIFROSTH_TILE_ORDER           = $0007 ; G zx_crt
__BIFROSTL_TILE_ORDER           = $0007 ; G zx_crt
__EMFILE                        = $0007 ; G zx_crt
STDIO_MSG_FLSH                  = $0008 ; L asm_fflush_unlocked
STDIO_MSG_FLSH                  = $0008 ; G zx_crt
__CLIB_OPT_IMATH_FAST_MUL_LZEROS = $0008 ; G zx_crt
__CLIB_OPT_MULTITHREAD_LOCK_FDTBL = $0008 ; G zx_crt
__CLIB_OPT_NUM2TXT_INT_HEX      = $0008 ; G zx_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_HEX = $0008 ; G zx_crt
__CLIB_OPT_PRINTF_2_llX         = $0008 ; G zx_crt
__CLIB_OPT_PRINTF_X             = $0008 ; G zx_crt
__CLIB_OPT_SCANF_2_llX          = $0008 ; G zx_crt
__CLIB_OPT_SCANF_X              = $0008 ; G zx_crt
__CLIB_OPT_SORT_QSORT_ENABLE_EQUAL = $0008 ; G zx_crt
__CLIB_OPT_TXT2NUM_INT_HEX      = $0008 ; G zx_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_HEX = $0008 ; G zx_crt
__ENFILE                        = $0008 ; G zx_crt
__SPECTRUM_128_P2A              = $0008 ; G zx_crt
__rodata_stdlib_size            = $0008 ; G 
thrd_timedout                   = $0008 ; G zx_crt
STDIO_MSG_CLOS                  = $0009 ; G zx_crt
__ENOLCK                        = $0009 ; G zx_crt
CHAR_LF                         = $000A ; L character_00_input_stdio_msg_read
CHAR_LF                         = $000A ; L console_01_input_proc_getc
CHAR_LF                         = $000A ; L console_01_output_char_iterm_msg_putc
CHAR_LF                         = $000A ; L console_01_output_char_oterm_msg_putc
CHAR_LF                         = $000A ; L zx_01_input_inkey_iterm_msg_getc
CHAR_LF                         = $000A ; G zx_crt
__ENOMEM                        = $000A ; G zx_crt
__ENOTSUP                       = $000B ; G zx_crt
CHAR_BS                         = $000C ; L console_01_input_proc_getc
CHAR_BS                         = $000C ; G zx_crt
__CLIB_OPT_SORT_QSORT           = $000C ; G zx_crt
__CODE_size                     = $000C ; G 
__EOVERFLOW                     = $000C ; G zx_crt
CHAR_CR                         = $000D ; L console_01_input_proc_getc
CHAR_CR                         = $000D ; L console_01_output_char_oterm_msg_putc
CHAR_CR                         = $000D ; L zx_01_input_inkey_iterm_msg_getc
CHAR_CR                         = $000D ; G zx_crt
__ERANGE                        = $000D ; G zx_crt
__ESTAT                         = $000E ; G zx_crt
__code_crt_return_size          = $000E ; G 
ICHAR_MSG_GETC                  = $000F ; G zx_crt
ITERM_MSG_GETC                  = $000F ; L console_01_input_proc_getc
ITERM_MSG_GETC                  = $000F ; G zx_crt
__CLIB_OPT_IMATH_FAST           = $000F ; G zx_crt
__EAGAIN                        = $000F ; G zx_crt
__EWOULDBLOCK                   = $000F ; G zx_crt
ITERM_MSG_INTERRUPT             = $0010 ; L console_01_input_proc_getc
ITERM_MSG_INTERRUPT             = $0010 ; G zx_crt
__CLIB_OPT_MULTITHREAD_LOCK_FDSTR = $0010 ; G zx_crt
__CLIB_OPT_NUM2TXT_LONG_BIN     = $0010 ; G zx_crt
__CLIB_OPT_PRINTF_2_llo         = $0010 ; G zx_crt
__CLIB_OPT_PRINTF_o             = $0010 ; G zx_crt
__CLIB_OPT_SCANF_2_llo          = $0010 ; G zx_crt
__CLIB_OPT_SCANF_o              = $0010 ; G zx_crt
__CLIB_OPT_TXT2NUM_LONG_BIN     = $0010 ; G zx_crt
__SOUND_BIT_TOGGLE              = $0010 ; L asm_bit_beep_raw
__SOUND_BIT_TOGGLE              = $0010 ; G zx_crt
__SPECTRUM_128_P3               = $0010 ; G zx_crt
ITERM_MSG_PUTC                  = $0011 ; L console_01_input_proc_echo
ITERM_MSG_PUTC                  = $0011 ; G zx_crt
ITERM_MSG_PRINT_CURSOR          = $0012 ; L console_01_input_proc_getc
ITERM_MSG_PRINT_CURSOR          = $0012 ; G zx_crt
__code_l_sdcc_size              = $0012 ; G 
ITERM_MSG_ERASE_CURSOR          = $0013 ; L console_01_input_proc_getc
ITERM_MSG_ERASE_CURSOR          = $0013 ; G zx_crt
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; L console_01_input_proc_getc
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G zx_crt
ITERM_MSG_BS                    = $0015 ; L console_01_input_proc_getc
ITERM_MSG_BS                    = $0015 ; G zx_crt
ITERM_MSG_BS_PWD                = $0016 ; L console_01_input_proc_getc
ITERM_MSG_BS_PWD                = $0016 ; G zx_crt
__BIFROST2_TOTAL_ROWS           = $0016 ; G zx_crt
__NIRVANAM_TOTAL_ROWS           = $0016 ; G zx_crt
ITERM_MSG_READLINE_BEGIN        = $0017 ; L console_01_input_proc_getc
ITERM_MSG_READLINE_BEGIN        = $0017 ; G zx_crt
__NIRVANAP_TOTAL_ROWS           = $0017 ; G zx_crt
__SOUND_BIT_READ_MASK           = $0017 ; L asm_bit_open
__SOUND_BIT_READ_MASK           = $0017 ; G zx_crt
ITERM_MSG_READLINE_END          = $0018 ; L console_01_input_proc_getc
ITERM_MSG_READLINE_END          = $0018 ; G zx_crt
SP1V_DISPHEIGHT                 = $0018 ; G zx_crt
ITERM_MSG_BELL                  = $0019 ; L console_01_input_proc_getc
ITERM_MSG_BELL                  = $0019 ; G zx_crt
__code_ctype_size               = $0019 ; G 
CHAR_CTRL_Z                     = $001A ; G zx_crt
__MESSAGE_ITERM_NEXT__          = $001A ; G zx_crt
CHAR_ESC                        = $001B ; L console_01_input_proc_getc
CHAR_ESC                        = $001B ; G zx_crt
OCHAR_MSG_PUTC_BIN              = $001E ; G zx_crt
OTERM_MSG_PUTC                  = $001E ; G zx_crt
OTERM_MSG_TTY                   = $001F ; L console_01_output_char_oterm_msg_putc
OTERM_MSG_TTY                   = $001F ; G zx_crt
__code_threads_mutex_size       = $001F ; G 
OCHAR_MSG_PUTC                  = $0020 ; G zx_crt
OTERM_MSG_PRINTC                = $0020 ; L console_01_output_char_oterm_msg_putc
OTERM_MSG_PRINTC                = $0020 ; G zx_crt
SP1V_DISPWIDTH                  = $0020 ; G zx_crt
__CLIB_OPT_FASTCOPY_LDIR        = $0020 ; G zx_crt
__CLIB_OPT_NUM2TXT_LONG_OCT     = $0020 ; G zx_crt
__CLIB_OPT_PRINTF_n             = $0020 ; G zx_crt
__CLIB_OPT_SCANF_n              = $0020 ; G zx_crt
__CLIB_OPT_TXT2NUM_LONG_OCT     = $0020 ; G zx_crt
__SPECTRUM_PENTAGON             = $0020 ; G zx_crt
OTERM_MSG_SCROLL                = $0021 ; G zx_crt
OTERM_MSG_CLS                   = $0022 ; G zx_crt
__code_alloc_malloc_size        = $0022 ; G 
OTERM_MSG_PAUSE                 = $0023 ; G zx_crt
OTERM_MSG_BELL                  = $0024 ; L console_01_output_char_oterm_msg_putc
OTERM_MSG_BELL                  = $0024 ; G zx_crt
__code_crt_init_size            = $0024 ; G 
OTERM_MSG_PSCROLL               = $0025 ; G zx_crt
__code_driver_general_size      = $0025 ; G 
__MESSAGE_OTERM_NEXT__          = $0026 ; G zx_crt
CHAR_PASSWORD                   = $002A ; L console_01_input_proc_echo
CHAR_PASSWORD                   = $002A ; L console_01_input_proc_getc
CHAR_PASSWORD                   = $002A ; G zx_crt
CHAR_CURSOR_UC                  = $002D ; L console_01_input_proc_getc
CHAR_CURSOR_UC                  = $002D ; G zx_crt
__MESSAGE_NEXT__                = $002D ; G zx_crt
__ERROR_NEXT                    = $0032 ; G zx_crt
__data_stdio_size               = $0039 ; G 
__code_adt_b_array_size         = $003B ; G 
__SPECTRUM_128_MASK             = $003E ; G zx_crt
__rodata_compiler_size          = $003F ; G 
__CLIB_OPT_FASTCOPY_LDIR_SMC    = $0040 ; G zx_crt
__CLIB_OPT_NUM2TXT_LONG_DEC     = $0040 ; G zx_crt
__CLIB_OPT_PRINTF_2_lli         = $0040 ; G zx_crt
__CLIB_OPT_PRINTF_i             = $0040 ; G zx_crt
__CLIB_OPT_SCANF_2_lli          = $0040 ; G zx_crt
__CLIB_OPT_SCANF_i              = $0040 ; G zx_crt
__CLIB_OPT_TXT2NUM_LONG_DEC     = $0040 ; G zx_crt
__code_error_size               = $0042 ; G 
__code_string_size              = $0045 ; G 
__code_z80_size                 = $004F ; G 
__code_sound_bit_size           = $005A ; G 
CHAR_CURSOR_LC                  = $005F ; L console_01_input_proc_getc
CHAR_CURSOR_LC                  = $005F ; G zx_crt
__code_driver_character_input_size = $006E ; G 
__BIFROST2_STATIC_MIN           = $0080 ; G zx_crt
__BIFROST2_STATIC_OVERLAP       = $0080 ; G zx_crt
__BIFROSTH_STATIC_MIN           = $0080 ; G zx_crt
__BIFROSTH_STATIC_OVERLAP       = $0080 ; G zx_crt
__BIFROSTL_STATIC_MIN           = $0080 ; G zx_crt
__BIFROSTL_STATIC_OVERLAP       = $0080 ; G zx_crt
__CLIB_OPT_FASTCOPY_MEMCPY_SMC  = $0080 ; G zx_crt
__CLIB_OPT_IMATH_FAST_LIA       = $0080 ; G zx_crt
__CLIB_OPT_NUM2TXT_LONG_HEX     = $0080 ; G zx_crt
__CLIB_OPT_PRINTF_p             = $0080 ; G zx_crt
__CLIB_OPT_SCANF_p              = $0080 ; G zx_crt
__CLIB_OPT_TXT2NUM_LONG_HEX     = $0080 ; G zx_crt
__bss_compiler_size             = $0090 ; G 
__code_input_size               = $009B ; G 
__code_fcntl_size               = $009C ; G 
__rodata_input_size             = $00A0 ; G 
__code_l_size                   = $00DD ; G 
__SOUND_BIT_WRITE_MASK          = $00E8 ; L asm_bit_close
__SOUND_BIT_WRITE_MASK          = $00E8 ; G zx_crt
__code_math_size                = $00EA ; G 
__data_fcntl_stdio_heap_body_size = $00F8 ; G 
__SOUND_BIT_PORT                = $00FE ; L asm_bit_beep_raw
__SOUND_BIT_PORT                = $00FE ; G zx_crt
TAR__clib_stdio_heap_size       = $0100 ; L zx_crt
__CLIB_OPT_PRINTF_B             = $0100 ; G zx_crt
__CLIB_OPT_SCANF_B              = $0100 ; G zx_crt
__clib_stdio_heap_size          = $0100 ; L zx_crt
IOCTL_OTERM_CLS                 = $0102 ; G zx_crt
__code_arch_size                = $0109 ; G 
TAR__crt_stack_size             = $0200 ; L zx_crt
__CLIB_OPT_PRINTF_s             = $0200 ; G zx_crt
__CLIB_OPT_SCANF_s              = $0200 ; G zx_crt
__crt_stack_size                = $0200 ; L zx_crt
IOCTL_ITERM_TIE                 = $0201 ; G zx_crt
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G zx_crt
__code_stdlib_size              = $0246 ; G 
__rodata_font_4x8_size          = $0300 ; G 
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G zx_crt
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G zx_crt
__code_driver_terminal_input_size = $0344 ; G 
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G zx_crt
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G zx_crt
__code_driver_terminal_output_size = $039E ; G 
__CLIB_OPT_PRINTF_c             = $0400 ; G zx_crt
__CLIB_OPT_SCANF_c              = $0400 ; G zx_crt
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G zx_crt
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G zx_crt
__code_stdio_size               = $04CE ; G 
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G zx_crt
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G zx_crt
IOCTL_OTERM_GET_OTERM           = $0602 ; G zx_crt
IOCTL_OTERM_SCROLL              = $0702 ; G zx_crt
__Z88DK                         = $07C8 ; G zx_crt
__CLIB_OPT_PRINTF_I             = $0800 ; G zx_crt
__CLIB_OPT_SCANF_I              = $0800 ; G zx_crt
IOCTL_OTERM_FONT                = $0802 ; G zx_crt
__code_fp_math48_size           = $087A ; G 
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G zx_crt
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G zx_crt
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G zx_crt
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G zx_crt
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G zx_crt
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G zx_crt
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G zx_crt
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G zx_crt
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G zx_crt
__CLIB_OPT_PRINTF_ld            = $1000 ; G zx_crt
__CLIB_OPT_SCANF_ld             = $1000 ; G zx_crt
IOCTL_ITERM_SET_DELAY           = $1001 ; G zx_crt
IOCTL_OTERM_FCOLOR              = $1002 ; G zx_crt
IOCTL_ITERM_GET_DELAY           = $1081 ; G zx_crt
IOCTL_ITERM_LASTK               = $1101 ; G zx_crt
IOCTL_OTERM_FMASK               = $1102 ; G zx_crt
IOCTL_OTERM_BCOLOR              = $1202 ; G zx_crt
__code_compiler_size            = $149F ; G 
__CLIB_OPT_PRINTF_lu            = $2000 ; G zx_crt
__CLIB_OPT_SCANF_lu             = $2000 ; G zx_crt
__NIRVANAM_CHAR_TABLE           = $3C00 ; G zx_crt
__NIRVANAP_CHAR_TABLE           = $3C00 ; G zx_crt
__CLIB_OPT_PRINTF_lx            = $4000 ; G zx_crt
__CLIB_OPT_SCANF_lx             = $4000 ; G zx_crt
TAR__crt_org_code               = $8000 ; L zx_crt
__CLIB_OPT_PRINTF_lX            = $8000 ; G zx_crt
__CLIB_OPT_SCANF_lX             = $8000 ; G zx_crt
__CODE_head                     = $8000 ; G 
__Start                         = $8000 ; G zx_crt
__crt_org_code                  = $8000 ; L zx_crt
__Restart                       = $8009 ; L zx_crt
__CODE_tail                     = $800C ; G 
__Restart_2                     = $800C ; L zx_crt
__code_crt_init_head            = $800C ; G 
__code_crt_init_tail            = $8030 ; G 
__code_crt_main_head            = $8030 ; G 
__Exit                          = $8033 ; G zx_crt
__code_crt_exit_head            = $8034 ; G 
__code_crt_exit_tail            = $8034 ; G 
__code_crt_main_tail            = $8034 ; G 
__code_crt_return_head          = $8034 ; G 
__code_adt_b_array_head         = $8042 ; G 
__code_clib_head                = $8042 ; G 
__code_clib_tail                = $8042 ; G 
__code_crt_common_head          = $8042 ; G 
__code_crt_common_tail          = $8042 ; G 
__code_crt_return_tail          = $8042 ; G 
__code_driver_head              = $8042 ; G 
__code_driver_tail              = $8042 ; G 
__code_font_head                = $8042 ; G 
__code_font_tail                = $8042 ; G 
asm_b_array_at                  = $8042 ; G asm_b_array_at
asm_b_array_append              = $804D ; G asm_b_array_append
asm_b_array_push_back           = $804D ; G asm_b_array_push_back
asm0_b_array_append             = $804F ; G asm_b_array_append
room_available                  = $805D ; L asm_b_array_append
__array_at                      = $806D ; G __array_at
__code_adt_b_array_tail         = $807D ; G 
__code_adt_b_vector_head        = $807D ; G 
__code_adt_b_vector_tail        = $807D ; G 
__code_adt_ba_priority_queue_head = $807D ; G 
__code_adt_ba_priority_queue_tail = $807D ; G 
__code_adt_ba_stack_head        = $807D ; G 
__code_adt_ba_stack_tail        = $807D ; G 
__code_adt_bv_priority_queue_head = $807D ; G 
__code_adt_bv_priority_queue_tail = $807D ; G 
__code_adt_bv_stack_head        = $807D ; G 
__code_adt_bv_stack_tail        = $807D ; G 
__code_adt_p_forward_list_head  = $807D ; G 
asm_p_forward_list_front        = $807D ; G asm_p_forward_list_front
asm_p_forward_list_next         = $807D ; G asm_p_forward_list_next
__code_adt_p_forward_list_alt_head = $8083 ; G 
__code_adt_p_forward_list_alt_tail = $8083 ; G 
__code_adt_p_forward_list_tail  = $8083 ; G 
__code_adt_p_list_head          = $8083 ; G 
__code_adt_p_list_tail          = $8083 ; G 
__code_adt_p_queue_head         = $8083 ; G 
__code_adt_p_queue_tail         = $8083 ; G 
__code_adt_p_stack_head         = $8083 ; G 
__code_adt_p_stack_tail         = $8083 ; G 
__code_adt_w_array_head         = $8083 ; G 
__code_adt_w_array_tail         = $8083 ; G 
__code_adt_w_vector_head        = $8083 ; G 
__code_adt_w_vector_tail        = $8083 ; G 
__code_adt_wa_priority_queue_head = $8083 ; G 
__code_adt_wa_priority_queue_tail = $8083 ; G 
__code_adt_wa_stack_head        = $8083 ; G 
__code_adt_wa_stack_tail        = $8083 ; G 
__code_adt_wv_priority_queue_head = $8083 ; G 
__code_adt_wv_priority_queue_tail = $8083 ; G 
__code_adt_wv_stack_head        = $8083 ; G 
__code_adt_wv_stack_tail        = $8083 ; G 
__code_alloc_balloc_head        = $8083 ; G 
__code_alloc_balloc_tail        = $8083 ; G 
__code_alloc_malloc_head        = $8083 ; G 
asm_heap_init                   = $8083 ; G asm_heap_init
__code_alloc_malloc_tail        = $80A5 ; G 
__code_alloc_obstack_head       = $80A5 ; G 
__code_alloc_obstack_tail       = $80A5 ; G 
__code_arch_head                = $80A5 ; G 
asm_zx_cls_wc                   = $80A5 ; G asm_zx_cls_wc
pixel_loop_0                    = $80B3 ; L asm_zx_cls_wc
pixel_loop_1                    = $80B5 ; L asm_zx_cls_wc
attr_loop                       = $80D0 ; L asm_zx_cls_wc
asm_zx_cyx2saddr                = $80E2 ; G asm_zx_cyx2saddr
asm_zx_saddr2aaddr              = $80F1 ; G asm_zx_saddr2aaddr
asm_zx_saddrpdown               = $80FB ; G asm_zx_saddrpdown
asm0_zx_saddrpdown              = $80FC ; G asm_zx_saddrpdown
asm_zx_scroll_wc_up_noexx       = $8111 ; G asm_zx_scroll_wc_up_noexx
asm_zx_scroll_wc_up             = $811E ; G asm_zx_scroll_wc_up
copy_up_loop_0                  = $8156 ; L asm_zx_scroll_wc_up
copy_up_loop_1                  = $816A ; L asm_zx_scroll_wc_up
vacate_loop_0                   = $8189 ; L asm_zx_scroll_wc_up
vacate_loop_1                   = $8198 ; L asm_zx_scroll_wc_up
__code_arch_tail                = $81AE ; G 
__code_bifrost2_head            = $81AE ; G 
__code_bifrost2_tail            = $81AE ; G 
__code_bifrost_h_head           = $81AE ; G 
__code_bifrost_h_tail           = $81AE ; G 
__code_bifrost_l_head           = $81AE ; G 
__code_bifrost_l_tail           = $81AE ; G 
__code_compress_aplib_head      = $81AE ; G 
__code_compress_aplib_tail      = $81AE ; G 
__code_compress_zx7_head        = $81AE ; G 
__code_compress_zx7_tail        = $81AE ; G 
__code_ctype_head               = $81AE ; G 
asm_isdigit                     = $81AE ; G asm_isdigit
asm_tolower                     = $81B5 ; G asm_tolower
asm_toupper                     = $81BE ; G asm_toupper
__code_ctype_tail               = $81C7 ; G 
__code_driver_general_head      = $81C7 ; G 
console_01_input_terminal_fdriver = $81C7 ; G console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = $81C7 ; G console_01_output_terminal_fdriver
device_return_error             = $81CF ; G device_return_error
device_set_error                = $81D6 ; G device_set_error
console_01_input_proc_reset     = $81E3 ; G console_01_input_proc_reset
device_reset_error              = $81E3 ; G device_reset_error
__code_driver_character_input_head = $81EC ; G 
__code_driver_general_tail      = $81EC ; G 
character_00_input_stdio_msg_eatc = $81EC ; G character_00_input_stdio_msg_eatc
console_01_input_stdio_msg_eatc = $81EC ; G console_01_input_stdio_msg_eatc
eatc_loop                       = $81F1 ; L character_00_input_stdio_msg_eatc
eatc_exit                       = $820B ; L character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_read = $820E ; G character_00_input_stdio_msg_read
console_01_input_stdio_msg_read = $820E ; G console_01_input_stdio_msg_read
read_loop                       = $820F ; L character_00_input_stdio_msg_read
read_exit                       = $8225 ; L character_00_input_stdio_msg_read
read_exit_error                 = $822D ; L character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = $8238 ; G character_00_input_stdio_msg_seek
console_01_input_stdio_msg_seek = $8238 ; G console_01_input_stdio_msg_seek
seek_loop                       = $8244 ; L character_00_input_stdio_msg_seek
__code_driver_character_input_tail = $825A ; G 
__code_driver_character_output_head = $825A ; G 
__code_driver_character_output_tail = $825A ; G 
__code_driver_memstream_head    = $825A ; G 
__code_driver_memstream_tail    = $825A ; G 
__code_driver_terminal_input_head = $825A ; G 
zx_01_input_kbd_inkey           = $825A ; G zx_01_input_kbd_inkey
console_01_input_terminal       = $826C ; G console_01_input_terminal
console_01_input_stdio_msg_flsh = $8297 ; G console_01_input_stdio_msg_flsh
zx_01_input_inkey_stdio_msg_flsh = $8297 ; G zx_01_input_inkey_stdio_msg_flsh
console_01_input_proc_getc      = $82AA ; G console_01_input_proc_getc
console_01_input_stdio_msg_getc = $82AA ; G console_01_input_stdio_msg_getc
getc                            = $82B6 ; L console_01_input_proc_getc
char_mode                       = $82BC ; L console_01_input_proc_getc
line_mode                       = $82C6 ; L console_01_input_proc_getc
line_mode_readline              = $82E0 ; L console_01_input_proc_getc
push_loop                       = $8300 ; L console_01_input_proc_getc
put_raw_0                       = $830B ; L console_01_input_proc_getc
line_mode_readline_1            = $8316 ; L console_01_input_proc_getc
readline_loop                   = $8319 ; L console_01_input_proc_getc
cursor_print                    = $832F ; L console_01_input_proc_getc
cursor_print_end                = $8334 ; L console_01_input_proc_getc
cursor_not_pwd                  = $8355 ; L console_01_input_proc_getc
cursor_erase_end                = $8359 ; L console_01_input_proc_getc
bell                            = $8372 ; L console_01_input_proc_getc
not_empty                       = $8379 ; L console_01_input_proc_getc
not_password_mode               = $838C ; L console_01_input_proc_getc
skip_bs                         = $8390 ; L console_01_input_proc_getc
escaped_char                    = $839B ; L console_01_input_proc_getc
put_raw                         = $83B0 ; L console_01_input_proc_getc
readline_done                   = $83C5 ; L console_01_input_proc_getc
readline_error                  = $83C5 ; L console_01_input_proc_getc
interrupt_received              = $83D8 ; L console_01_input_proc_getc
edit_buff_params                = $83DE ; L console_01_input_proc_getc
line_mode_editbuf_1             = $83E6 ; L console_01_input_proc_getc
state_machine_0                 = $83F3 ; L console_01_input_proc_getc
state_machine_1                 = $8403 ; L console_01_input_proc_getc
state_machine_2                 = $8413 ; L console_01_input_proc_getc
not_cr                          = $841E ; L console_01_input_proc_getc
sm_cook                         = $8424 ; L console_01_input_proc_getc
sm_capslock                     = $8435 ; L console_01_input_proc_getc
sm_escape                       = $8444 ; L console_01_input_proc_getc
sm_esc_exit                     = $844E ; L console_01_input_proc_getc
sm_exit                         = $8450 ; L console_01_input_proc_getc
console_01_input_proc_echo      = $8454 ; G console_01_input_proc_echo
console_01_input_proc_oterm     = $8464 ; G console_01_input_proc_echo
cont                            = $8471 ; L console_01_input_proc_echo
console_01_input_stdio_msg_ictl = $847A ; G console_01_input_stdio_msg_ictl
_ictl_messages                  = $8491 ; L console_01_input_stdio_msg_ictl
console_01_input_stdio_msg_ictl_0 = $849E ; G console_01_input_stdio_msg_ictl
_ioctl_getset_editbuf           = $84A7 ; L console_01_input_stdio_msg_ictl
_ioctl_set_editbuf              = $84B3 ; L console_01_input_stdio_msg_ictl
_ioctl_get_editbuf              = $84BE ; L console_01_input_stdio_msg_ictl
_ioctl_editbuf_copy             = $84C1 ; L console_01_input_stdio_msg_ictl
_ioctl_tie                      = $84C8 ; L console_01_input_stdio_msg_ictl
_ioctl_tie_exit                 = $84DC ; L console_01_input_stdio_msg_ictl
zx_01_input_inkey_iterm_msg_getc = $84DE ; G zx_01_input_inkey_iterm_msg_getc
state_1                         = $84E8 ; L zx_01_input_inkey_iterm_msg_getc
state_1t_join                   = $84EB ; L zx_01_input_inkey_iterm_msg_getc
state_2                         = $84F9 ; L zx_01_input_inkey_iterm_msg_getc
state_unknown                   = $84FE ; L zx_01_input_inkey_iterm_msg_getc
state_3                         = $8501 ; L zx_01_input_inkey_iterm_msg_getc
getk_0                          = $8505 ; L zx_01_input_inkey_iterm_msg_getc
getk_1                          = $850B ; L zx_01_input_inkey_iterm_msg_getc
getk_loop                       = $850D ; L zx_01_input_inkey_iterm_msg_getc
debounce                        = $8516 ; L zx_01_input_inkey_iterm_msg_getc
state_1t                        = $8525 ; L zx_01_input_inkey_iterm_msg_getc
key_pressed                     = $8528 ; L zx_01_input_inkey_iterm_msg_getc
exit                            = $853B ; L zx_01_input_inkey_iterm_msg_getc
key_cr                          = $8540 ; L zx_01_input_inkey_iterm_msg_getc
key_lf                          = $8544 ; L zx_01_input_inkey_iterm_msg_getc
zx_01_input_inkey_proc_getk_address = $8548 ; G zx_01_input_inkey_proc_getk_address
zx_01_input_inkey_stdio_msg_ictl = $854E ; G zx_01_input_inkey_stdio_msg_ictl
_ioctl_getset_delay             = $8566 ; L zx_01_input_inkey_stdio_msg_ictl
_ioctl_set_delay                = $8570 ; L zx_01_input_inkey_stdio_msg_ictl
_ioctl_get_delay                = $8585 ; L zx_01_input_inkey_stdio_msg_ictl
__code_driver_terminal_input_tail = $859E ; G 
__code_driver_terminal_output_head = $859E ; G 
zx_01_output_char_64            = $859E ; G zx_01_output_char_64
console_01_output_terminal_char = $85C7 ; G console_01_output_terminal_char
console_01_output_terminal      = $860E ; G console_01_output_terminal
console_01_output_stdio_msg_putc = $862A ; G console_01_output_stdio_msg_putc
putc_loop                       = $862E ; L console_01_output_stdio_msg_putc
console_01_output_stdio_msg_writ = $863E ; G console_01_output_stdio_msg_writ
writ_loop                       = $8640 ; L console_01_output_stdio_msg_writ
writ_end                        = $864E ; L console_01_output_stdio_msg_writ
console_01_output_char_iterm_msg_bs = $8652 ; G console_01_output_char_iterm_msg_bs
console_01_output_char_iterm_msg_putc = $8675 ; G console_01_output_char_iterm_msg_putc
console_01_output_char_iterm_msg_readline_begin = $8687 ; G console_01_output_char_iterm_msg_readline_begin
console_01_output_char_iterm_msg_readline_end = $868C ; G console_01_output_char_iterm_msg_readline_end
console_01_output_char_oterm_msg_putc = $8698 ; G console_01_output_char_oterm_msg_putc
putchar_bell                    = $86A9 ; L console_01_output_char_oterm_msg_putc
cooked                          = $86AD ; L console_01_output_char_oterm_msg_putc
console_01_output_char_oterm_msg_putc_raw = $86B9 ; G console_01_output_char_oterm_msg_putc
crlf_done                       = $86B9 ; L console_01_output_char_oterm_msg_putc
putchar_ok                      = $86BF ; L console_01_output_char_oterm_msg_putc
x_ok                            = $86CE ; L console_01_output_char_oterm_msg_putc
y_ok                            = $86E4 ; L console_01_output_char_oterm_msg_putc
console_01_output_char_proc_linefeed = $86F7 ; G console_01_output_char_proc_linefeed
y_ok_2                          = $870D ; L console_01_output_char_proc_linefeed
console_01_output_char_proc_move_left = $8715 ; G console_01_output_char_proc_move_left
x_is_zero                       = $8722 ; L console_01_output_char_proc_move_left
check_y                         = $8728 ; L console_01_output_char_proc_move_left
console_01_output_char_proc_move_down = $872C ; G console_01_output_char_proc_move_down
console_01_output_char_proc_move_down_check_y = $8731 ; G console_01_output_char_proc_move_down
set_max_y                       = $8733 ; L console_01_output_char_proc_move_down
console_01_output_char_proc_putchar_scroll = $8736 ; G console_01_output_char_proc_putchar_scroll
pause_scroll                    = $874E ; L console_01_output_char_proc_putchar_scroll
scroll_immediate_0              = $8762 ; L console_01_output_char_proc_putchar_scroll
scroll_immediate                = $8765 ; L console_01_output_char_proc_putchar_scroll
scroll_it                       = $876B ; L console_01_output_char_proc_putchar_scroll
page_it                         = $8772 ; L console_01_output_char_proc_putchar_scroll
no_cls                          = $877D ; L console_01_output_char_proc_putchar_scroll
console_01_output_char_proc_reset_scroll_limit = $8783 ; G console_01_output_char_proc_reset_scroll_limit
console_01_output_char_stdio_msg_ictl = $878A ; G console_01_output_char_stdio_msg_ictl
console_01_output_char_stdio_msg_ictl_0 = $8797 ; G console_01_output_char_stdio_msg_ictl
_ioctl_scroll                   = $87AF ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_oterm                = $87B3 ; L console_01_output_char_stdio_msg_ictl
_ioctl_getset_cursor_coord      = $87BA ; L console_01_output_char_stdio_msg_ictl
_ioctl_set_cursor_coord         = $87BE ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_cursor_coord         = $87CA ; L console_01_output_char_stdio_msg_ictl
_ioctl_cls                      = $87DE ; L console_01_output_char_stdio_msg_ictl
_ioctl_getset_window_coord      = $87F0 ; L console_01_output_char_stdio_msg_ictl
_ioctl_set_window_coord         = $87F7 ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_window_coord         = $8800 ; L console_01_output_char_stdio_msg_ictl
_ioctl_getset_window_rect       = $880F ; L console_01_output_char_stdio_msg_ictl
_ioctl_set_window_rect          = $881E ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_window_rect          = $881F ; L console_01_output_char_stdio_msg_ictl
console_01_output_char_proc_putchar_scroll_adjust = $8823 ; G console_01_output_char_proc_putchar_scroll_adjust
screen_cleared                  = $8830 ; L console_01_output_char_proc_putchar_scroll_adjust
store_y                         = $8831 ; L console_01_output_char_proc_putchar_scroll_adjust
zx_01_output_char_32_iterm_msg_bell = $8835 ; G zx_01_output_char_32_iterm_msg_bell
zx_01_output_char_32_oterm_msg_bell = $8848 ; G zx_01_output_char_32_oterm_msg_bell
zx_01_output_char_32_stdio_msg_ictl = $885B ; G zx_01_output_char_32_stdio_msg_ictl
zx_01_output_char_32_stdio_msg_ictl_0 = $8868 ; G zx_01_output_char_32_stdio_msg_ictl
_ioctl_bcolor                   = $887B ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_font                     = $8887 ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_font_ret                 = $8898 ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_fcolor                   = $889A ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_fmask                    = $88A6 ; L zx_01_output_char_32_stdio_msg_ictl
zx_01_output_char_64_oterm_msg_cls = $88B2 ; G zx_01_output_char_64_oterm_msg_cls
zx_01_output_char_64_oterm_msg_printc = $88C8 ; G zx_01_output_char_64_oterm_msg_printc
code_ok                         = $88CF ; L zx_01_output_char_64_oterm_msg_printc
__screen_address                = $88D7 ; L zx_01_output_char_64_oterm_msg_printc
__print_loop                    = $88ED ; L zx_01_output_char_64_oterm_msg_printc
zx_01_output_char_64_oterm_msg_scroll = $890C ; G zx_01_output_char_64_oterm_msg_scroll
zx_01_output_char_64_proc_stack_window_32 = $8926 ; G zx_01_output_char_64_proc_stack_window_32
__code_driver_terminal_output_tail = $893C ; G 
__code_driver_tty_head          = $893C ; G 
__code_driver_tty_tail          = $893C ; G 
__code_error_head               = $893C ; G 
error_ebdfd_zc                  = $893F ; G error_ebdfd_zc
error_edom_zc                   = $893F ; G error_edom_zc
error_einval_zc                 = $893F ; G error_einval_zc
error_enolck_zc                 = $893F ; G error_enolck_zc
error_enotsup_zc                = $893F ; G error_enotsup_zc
error_erange_zc                 = $893F ; G error_erange_zc
errno_zc                        = $8941 ; G errno_zc
__ch_system                     = $894D ; G zx_crt
error_zc                        = $894D ; G error_zc
error_lznc                      = $8953 ; G error_lznc
error_znc                       = $895C ; G error_znc
error_divide_by_zero_mc         = $8965 ; G error_divide_by_zero_mc
error_eacces_mc                 = $8965 ; G error_eacces_mc
error_edom_mc                   = $8965 ; G error_edom_mc
error_enotsup_mc                = $8965 ; G error_enotsup_mc
errno_mc                        = $8967 ; G errno_mc
error_mc                        = $8972 ; G error_mc
error_lzc                       = $8978 ; G error_lzc
__code_error_tail               = $897E ; G 
__code_fcntl_head               = $897E ; G 
asm_vioctl                      = $897E ; G asm_vioctl
critical_section                = $897E ; L asm_vioctl
find_driver_loop                = $898C ; L asm_vioctl
deliver_message                 = $899C ; L asm_vioctl
__bool                          = $89B0 ; L asm_vioctl
__setf                          = $89B7 ; L asm_vioctl
forward_ioctl                   = $89C2 ; L asm_vioctl
__getf                          = $89CB ; L asm_vioctl
asm_vioctl_driver               = $89D6 ; G asm_vioctl
__fcntl_fdchain_descend         = $89F2 ; G __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_2      = $89F9 ; G __fcntl_fdstruct_from_fd_2
__fcntl_fdstruct_from_fd_1      = $8A04 ; G __fcntl_fdstruct_from_fd_1
___fsadd_callee                 = $8A1A ; G ___fsadd_callee
__code_fcntl_tail               = $8A1A ; G 
__code_font_fzx_head            = $8A1A ; G 
__code_font_fzx_tail            = $8A1A ; G 
__code_fp_genmath_head          = $8A1A ; G 
__code_fp_genmath_tail          = $8A1A ; G 
__code_fp_math48_head           = $8A1A ; G 
cm48_sdcciyp_dsadd_callee       = $8A1A ; G cm48_sdcciyp_dsadd_callee
cm48_sdcciyp_dcallee2           = $8A23 ; G cm48_sdcciyp_dcallee2
cm48_sdcciyp_dx2m48             = $8A33 ; G cm48_sdcciyp_d2m48
cm48_sdcciyp_d2m48              = $8A34 ; G cm48_sdcciyp_d2m48
zero                            = $8A3F ; L cm48_sdcciyp_d2m48
___fsdiv_callee                 = $8A48 ; G ___fsdiv_callee
cm48_sdcciyp_dsdiv_callee       = $8A48 ; G cm48_sdcciyp_dsdiv_callee
___fsmul_callee                 = $8A52 ; G ___fsmul_callee
cm48_sdcciyp_dsmul_callee       = $8A52 ; G cm48_sdcciyp_dsmul_callee
___fssub_callee                 = $8A5B ; G ___fssub_callee
cm48_sdcciyp_dssub_callee       = $8A5B ; G cm48_sdcciyp_dssub_callee
cm48_sdcciyp_m482d              = $8A65 ; G cm48_sdcciyp_m482d
zero                            = $8A77 ; L cm48_sdcciyp_m482d
___sint2fs_callee               = $8A7C ; G ___sint2fs_callee
cm48_sdcciyp_sint2ds_callee     = $8A7C ; G cm48_sdcciyp_sint2ds_callee
_atan_fastcall                  = $8A85 ; G atan_fastcall
cm48_sdcciy_atan_fastcall       = $8A85 ; G cm48_sdcciy_atan_fastcall
_cos_fastcall                   = $8A8E ; G cos_fastcall
cm48_sdcciy_cos_fastcall        = $8A8E ; G cm48_sdcciy_cos_fastcall
_exp_fastcall                   = $8A97 ; G exp_fastcall
cm48_sdcciy_exp_fastcall        = $8A97 ; G cm48_sdcciy_exp_fastcall
_log_fastcall                   = $8AA0 ; G log_fastcall
cm48_sdcciy_log_fastcall        = $8AA0 ; G cm48_sdcciy_log_fastcall
_sin_fastcall                   = $8AA9 ; G sin_fastcall
cm48_sdcciy_sin_fastcall        = $8AA9 ; G cm48_sdcciy_sin_fastcall
_sqrt_fastcall                  = $8AB2 ; G sqrt_fastcall
cm48_sdcciy_sqrt_fastcall       = $8AB2 ; G cm48_sdcciy_sqrt_fastcall
am48_double16                   = $8ABB ; G am48_double16
am48_double16u                  = $8ACB ; G am48_double16u
normalize_loop                  = $8AD8 ; L am48_double16u
normalized                      = $8ADF ; L am48_double16u
am48_double8u                   = $8AE8 ; G am48_double8u
am48_double8u_0                 = $8AED ; G am48_double8u
normalize_loop                  = $8AF3 ; L am48_double8u
normalized                      = $8AF8 ; L am48_double8u
am48_derror_znc                 = $8B00 ; G am48_derror_znc
am48_atan                       = $8B08 ; G am48_atan
mm48_atn                        = $8B08 ; G mm48_atn
mm48__atn1                      = $8B1E ; L mm48_atn
mm48__atn2                      = $8B2C ; L mm48_atn
mm48__atn3                      = $8B40 ; L mm48_atn
mm48__atn4                      = $8B46 ; L mm48_atn
mm48__atn5                      = $8B5D ; L mm48_atn
mm48__atn6                      = $8B8A ; L mm48_atn
mm48__atn7                      = $8B98 ; L mm48_atn
mm48__atn8                      = $8BA1 ; L mm48_atn
mm48__arctan                    = $8BA5 ; L mm48_atn
atnk                            = $8BAE ; L mm48_atn
arctk                           = $8BDE ; L mm48_atn
mm48_cmp                        = $8BFC ; G mm48_cmp
mm48__cmp1                      = $8C06 ; L mm48_cmp
mm48__cmp2                      = $8C10 ; G mm48_cmp
am48_cos                        = $8C1A ; G am48_cos
mm48_cos                        = $8C1A ; G mm48_cos
am48_exp                        = $8C28 ; G am48_exp
mm48_exp                        = $8C28 ; G mm48_exp
mm48__exp1                      = $8C4B ; L mm48_exp
mm48__exp3                      = $8C58 ; L mm48_exp
mm48__exp4                      = $8C5E ; L mm48_exp
mm48__exp5                      = $8C62 ; L mm48_exp
mm48__exp6                      = $8C65 ; L mm48_exp
expk                            = $8C73 ; L mm48_exp
am48_derror_erange_pinfc        = $8C9D ; G am48_derror_erange_infc
am48_derror_erange_infc         = $8CA1 ; G am48_derror_erange_infc
am48_derror_erange_minfc        = $8CAA ; G am48_derror_erange_infc
am48_derror_erange_infxc        = $8CB1 ; G am48_derror_erange_infc
am48_dconst_inf                 = $8CB8 ; G am48_dconst_inf
am48_dconst_pinf                = $8CBC ; G am48_dconst_inf
join                            = $8CBF ; L am48_dconst_inf
am48_dconst_minf                = $8CC4 ; G am48_dconst_inf
am48_dfix16                     = $8CC9 ; G am48_dfix16
am48_dfix16_0                   = $8CD4 ; G am48_dfix16
am48_derror_erange_intc         = $8CEB ; G am48_derror_erange_intc
mm48_equal                      = $8CF5 ; G mm48_equal
am48_dadd                       = $8CFD ; G am48_dadd
mm48_fpadd                      = $8CFD ; G mm48_fpadd
mm48__add1                      = $8D03 ; G mm48_fpadd
mm48__add2                      = $8D14 ; L mm48_fpadd
mm48__add3                      = $8D29 ; L mm48_fpadd
mm48__add4                      = $8D34 ; L mm48_fpadd
mm48__add5                      = $8D4A ; L mm48_fpadd
mm48__add6                      = $8D54 ; L mm48_fpadd
mm48__add7                      = $8D57 ; L mm48_fpadd
mm48__addz                      = $8D65 ; L mm48_fpadd
mm48__add8                      = $8D68 ; L mm48_fpadd
mm48__add9                      = $8D69 ; L mm48_fpadd
mm48__add9a                     = $8D6D ; L mm48_fpadd
mm48__add10                     = $8D6E ; G mm48_fpadd
am48_ddiv                       = $8D73 ; G am48_ddiv
mm48_fpdiv                      = $8D73 ; G mm48_fpdiv
mm48__divi1                     = $8D8E ; L mm48_fpdiv
mm48__divi2                     = $8D97 ; L mm48_fpdiv
mm48__divi3                     = $8DAA ; L mm48_fpdiv
mm48__divi4                     = $8DB6 ; L mm48_fpdiv
mm48__divi5                     = $8DBF ; L mm48_fpdiv
mm48__divi6                     = $8DCC ; L mm48_fpdiv
am48_derror_edom_pinfc          = $8DD5 ; G am48_derror_edom_infc
am48_derror_edom_infc           = $8DD9 ; G am48_derror_edom_infc
am48_derror_edom_minfc          = $8DE2 ; G am48_derror_edom_infc
am48_dmul                       = $8DE8 ; G am48_dmul
mm48_fpmul                      = $8DE8 ; G mm48_fpmul
mm48__mul1                      = $8E03 ; L mm48_fpmul
mm48__mul2                      = $8E0A ; L mm48_fpmul
mm48__mul3                      = $8E12 ; L mm48_fpmul
mm48__mul4                      = $8E2E ; L mm48_fpmul
mm48__mul5                      = $8E31 ; G mm48_fpmul
mm48__mul5a                     = $8E32 ; G mm48_fpmul
am48_dsub                       = $8E49 ; G am48_dsub
mm48_fpsub                      = $8E49 ; G mm48_fpsub
mm48__sub1                      = $8E4F ; G mm48_fpsub
am48_dneg                       = $8E5B ; G am48_dneg
mm48_frac                       = $8E61 ; G mm48_frac
mm48_int                        = $8E72 ; G mm48_int
mm48__int1                      = $8E86 ; L mm48_int
mm48__int2                      = $8EA7 ; L mm48_int
am48_log                        = $8EAA ; G am48_log
mm48_ln                         = $8EAA ; G mm48_ln
mm48__ln1                       = $8EF6 ; L mm48_ln
lnk                             = $8F0D ; L mm48_ln
mm48_negate                     = $8F31 ; G mm48_negate
am48_sin                        = $8F39 ; G am48_sin
mm48_sin                        = $8F39 ; G mm48_sin
mm48__sinc                      = $8F3C ; G mm48_sin
mm48__sin1a                     = $8F52 ; L mm48_sin
mm48__sin2                      = $8F5A ; L mm48_sin
mm48__sin3                      = $8F64 ; L mm48_sin
mm48__sin4                      = $8F6F ; L mm48_sin
mm48__sin7a                     = $8FAB ; L mm48_sin
mm48__sin7                      = $8FB6 ; L mm48_sin
sink                            = $8FBA ; L mm48_sin
mm48_mod                        = $8FD8 ; G mm48_mod
am48_sqrt                       = $8FE2 ; G am48_sqrt
mm48_sqr                        = $8FE2 ; G mm48_sqr
mm48__sqr1                      = $8FFF ; L mm48_sqr
am48_derror_edom_zc             = $901D ; G am48_derror_edom_zc
mm48__ac1                       = $9026 ; G mm48__ac1
mm48__ac1_3                     = $9030 ; G mm48__ac1_3
mm48__acln2                     = $9039 ; G mm48__acln2
mm48__acpi                      = $9043 ; G mm48__acpi
mm48__acsqr2_2                  = $904D ; G mm48__acsqr2_2
mm48__addac                     = $9057 ; G mm48__addac
mm48__aac1                      = $905A ; L mm48__addac
mm48__calcs                     = $9071 ; G mm48__calcs
mm48__calc1                     = $9075 ; L mm48__calcs
mm48__cmpac                     = $908F ; G mm48__cmpac
mm48__comser                    = $90A8 ; G mm48__comser
mm48__expsgn                    = $90BD ; G mm48__expsgn
mm48__exps3                     = $90C3 ; L mm48__expsgn
mm48__retzero                   = $90C7 ; G mm48__expsgn
mm48__exps1                     = $90CC ; L mm48__expsgn
mm48__exps2                     = $90D0 ; L mm48__expsgn
mm48__getncix                   = $90E7 ; G mm48__getncix
mm48__getcix                    = $90EC ; G mm48__getncix
mm48__sleft                     = $90FF ; G mm48__sleft
mm48__left                      = $9100 ; G mm48__sleft
mm48__sright                    = $910B ; G mm48__sright
mm48__right                     = $910C ; G mm48__sright
mm48__subac                     = $9117 ; G mm48__subac
mm48__sac1                      = $911A ; L mm48__subac
mm48__zero                      = $9131 ; G mm48__zero
am48_dconst_0                   = $9132 ; G am48_dconst_0
mm48__zero_no                   = $9132 ; G mm48__zero
cm48_sdcciyp_dload              = $913A ; G cm48_sdcciyp_dload
dload                           = $913A ; G dload
am48_fpclassify                 = $9145 ; G am48_fpclassify
asm_fpclassify                  = $9145 ; G asm_fpclassify
zero                            = $914D ; L am48_fpclassify
__dtoa_base10                   = $914F ; G __dtoa_base10
am48__dtoa_base10               = $914F ; G am48__dtoa_base10
no_correction                   = $9170 ; L am48__dtoa_base10
align_digit                     = $9183 ; L am48__dtoa_base10
digit_loop                      = $918C ; L am48__dtoa_base10
rotation_done                   = $9194 ; L am48__dtoa_base10
__dtoa_digits                   = $9198 ; G __dtoa_digits
am48__dtoa_digits               = $9198 ; G am48__dtoa_digits
am48_dmul10a                    = $91D4 ; G am48_dmul10a
mm48_mul10                      = $91D4 ; G mm48_mul10
mm48__m10a                      = $91FA ; L mm48_mul10
am48_dmulpow10                  = $9203 ; G am48_dmulpow10
mm48_tenf                       = $9203 ; G mm48_tenf
mm48__tf1                       = $920A ; L mm48_tenf
mm48__tf2                       = $921A ; L mm48_tenf
mm48__tf3                       = $9231 ; L mm48_tenf
mm48__tf4                       = $923E ; L mm48_tenf
mm48__tenf_range                = $9246 ; L mm48_tenf
con10                           = $924F ; L mm48_tenf
__dtoa_sgnabs                   = $928B ; G __dtoa_sgnabs
am48__dtoa_sgnabs               = $928B ; G am48__dtoa_sgnabs
__code_fp_math48_tail           = $9294 ; G 
__code_input_head               = $9294 ; G 
asm_in_inkey                    = $9294 ; G asm_in_inkey
row_loop                        = $92A7 ; L asm_in_inkey
keyhit_0                        = $92C0 ; L asm_in_inkey
keyhit_1                        = $92D6 ; L asm_in_inkey
check_caps                      = $92E8 ; L asm_in_inkey
check_sym                       = $92F3 ; L asm_in_inkey
ascii                           = $92FE ; L asm_in_inkey
rowtable                        = $9301 ; L asm_in_inkey
asm_in_wait_key                 = $9321 ; G asm_in_wait_key
zx_01_output_char_32_oterm_msg_pause = $9321 ; G zx_01_output_char_32_oterm_msg_pause
asm_in_test_key                 = $9327 ; G asm_in_test_key
__code_input_tail               = $932F ; G 
__code_inttypes_head            = $932F ; G 
__code_inttypes_tail            = $932F ; G 
__code_l_head                   = $932F ; G 
l_jpix                          = $932F ; G l_jpix
__thread_block_timeout          = $9332 ; G zx_crt
__thread_context_switch         = $9332 ; G zx_crt
__thread_unblock                = $9332 ; G zx_crt
l_ret                           = $9332 ; G l_ret
l_setmem_hl                     = $9353 ; G l_setmem_hl
l_atou                          = $9354 ; G l_atou
l_small_atou                    = $9354 ; G l_small_atou
loop                            = $9359 ; L l_small_atou
overflow                        = $9379 ; L l_small_atou
l_neg_hl                        = $937C ; G l_neg_hl
l_utod_hl                       = $9384 ; G l_utod_hl
l_lsr_hl                        = $938B ; G l_lsr_hl
l_small_lsr_hl                  = $938B ; G l_small_lsr_hl
shift_loop                      = $9394 ; L l_small_lsr_hl
l_addu_hl_de                    = $939B ; G l_addu_hl_de
l_maxu_bc_hl                    = $93A1 ; G l_maxu_bc_hl
bc_larger                       = $93A9 ; L l_maxu_bc_hl
l_neg_dehl                      = $93AC ; G l_neg_dehl
l_addu_hl_bc                    = $93BE ; G l_addu_hl_bc
l_num2char                      = $93C4 ; G l_num2char
alpha                           = $93CB ; L l_num2char
l_valid_base                    = $93CE ; G l_valid_base
l_inc_sp                        = $93E3 ; G l_inc_sp
l_jphl                          = $93E4 ; G l_jphl
l_offset_ix_de                  = $93E5 ; G l_offset_ix_de
asm_b_array_clear               = $93EC ; G asm_b_array_clear
l_zeroword_hl                   = $93EE ; G l_zeroword_hl
l_ltu_bc_hl                     = $93F5 ; G l_ltu_bc_hl
l_decu_dehl                     = $93FB ; G l_decu_dehl
msw                             = $9401 ; L l_decu_dehl
limit                           = $9407 ; L l_decu_dehl
__code_l_sccz80_head            = $940C ; G 
__code_l_sccz80_tail            = $940C ; G 
__code_l_sdcc_head              = $940C ; G 
__code_l_tail                   = $940C ; G 
__mulint_callee                 = $940C ; G __mulint_callee
__mullong_callee                = $9413 ; G __mullong_callee
__code_l_sdcc_tail              = $941E ; G 
__code_locale_head              = $941E ; G 
__code_locale_tail              = $941E ; G 
__code_math_head                = $941E ; G 
l_mulu_16_16x16                 = $941E ; G l_mulu_16_16x16
l_small_mul_16_16x16            = $941E ; G l_small_mul_16_16x16
eight_bit_0                     = $942C ; L l_small_mul_16_16x16
eight_bit_1                     = $942D ; L l_small_mul_16_16x16
l_small_mul_16_16x8             = $942D ; G l_small_mul_16_16x16
rejoin                          = $9430 ; L l_small_mul_16_16x16
loop_0                          = $9433 ; L l_small_mul_16_16x16
loop_1                          = $943A ; L l_small_mul_16_16x16
l_mulu_32_32x32                 = $943E ; G l_mulu_32_32x32
l_small_mul_32_32x32            = $943E ; G l_small_mul_32_32x32
l0_small_mul_32_32x32           = $944C ; G l_small_mul_32_32x32
loop_0                          = $944F ; L l_small_mul_32_32x32
loop_1                          = $945E ; L l_small_mul_32_32x32
l_divu_32_32x8                  = $946E ; G l_divu_32_32x8
l0_divu_32_32x8                 = $946F ; G l_divu_32_32x8
l_small_divu_32_32x32           = $9481 ; G l_small_divu_32_32x32
l0_small_divu_32_32x32          = $9487 ; G l_small_divu_32_32x32
l1_small_divu_32_32x32          = $9495 ; G l_small_divu_32_32x32
loop_0                          = $9498 ; L l_small_divu_32_32x32
loop_1                          = $94B4 ; L l_small_divu_32_32x32
divide_zero                     = $94C9 ; L l_small_divu_32_32x32
l_small_divu_16_16x16           = $94CE ; G l_small_divu_16_16x16
l0_small_divu_16_16x16          = $94D2 ; G l_small_divu_16_16x16
divisor_sixteen_bit             = $94D6 ; L l_small_divu_16_16x16
loop_16_0                       = $94DC ; L l_small_divu_16_16x16
loop_16_1                       = $94E4 ; L l_small_divu_16_16x16
l_divu_16_16x8                  = $94EE ; G l_divu_16_16x8
l_small_divu_16_16x8            = $94EE ; G l_small_divu_16_16x16
l0_divu_16_16x8                 = $94F2 ; G l_divu_16_16x8
l0_small_divu_16_16x8           = $94F2 ; G l_small_divu_16_16x16
loop_8_0                        = $94F6 ; L l_small_divu_16_16x16
loop_8_2                        = $94FD ; L l_small_divu_16_16x16
loop_8_1                        = $94FF ; L l_small_divu_16_16x16
divide_zero                     = $9504 ; L l_small_divu_16_16x16
__code_math_tail                = $9508 ; G 
__code_network_head             = $9508 ; G 
__code_network_tail             = $9508 ; G 
__code_nirvanam_head            = $9508 ; G 
__code_nirvanam_tail            = $9508 ; G 
__code_nirvanap_head            = $9508 ; G 
__code_nirvanap_tail            = $9508 ; G 
__code_setjmp_head              = $9508 ; G 
__code_setjmp_tail              = $9508 ; G 
__code_sound_bit_head           = $9508 ; G 
asm_bit_beep_raw_di             = $9508 ; G asm_bit_beep_raw_di
asm_bit_beep_raw                = $9511 ; G asm_bit_beep_raw
beeper                          = $9515 ; L asm_bit_beep_raw
beixp3                          = $9529 ; L asm_bit_beep_raw
behllp                          = $952E ; L asm_bit_beep_raw
be_again                        = $954A ; L asm_bit_beep_raw
be_end                          = $954E ; L asm_bit_beep_raw
asm_bit_close                   = $9551 ; G asm_bit_close
asm_bit_open                    = $955C ; G asm_bit_open
__code_sound_bit_tail           = $9562 ; G 
__code_stdio_head               = $9562 ; G 
asm1_vfprintf_unlocked          = $9562 ; G zx_crt
asm_vfprintf_unlocked           = $9562 ; G zx_crt
asm0_vfprintf_unlocked          = $9566 ; G zx_crt
format_loop_printf              = $9571 ; L zx_crt
__format_loop_printf            = $9573 ; L zx_crt
format_end_printf               = $9595 ; L zx_crt
flag_chars_printf               = $95A2 ; L zx_crt
interpret_printf                = $95AC ; L zx_crt
flags_printf                    = $95AF ; L zx_crt
flags_id_printf                 = $95B6 ; L zx_crt
width_printf                    = $95C0 ; L zx_crt
width_positive_printf           = $95D6 ; L zx_crt
flag_found_printf               = $95DB ; L zx_crt
width_from_format_printf        = $95E0 ; L zx_crt
precision_printf                = $95ED ; L zx_crt
precision_positive_printf       = $9611 ; L zx_crt
precision_from_format_printf    = $9616 ; L zx_crt
end_precision_printf            = $9621 ; L zx_crt
length_modifier_printf          = $9623 ; L zx_crt
converter_specifier_printf      = $9626 ; L zx_crt
common_spec_printf              = $9638 ; L zx_crt
unrecognized_printf             = $9640 ; L zx_crt
long_spec_printf                = $9649 ; L zx_crt
printf_return_is_4              = $9653 ; L zx_crt
printf_return_is_2              = $9658 ; L zx_crt
printf_invoke_flags             = $965B ; L zx_crt
skip_00_printf                  = $9663 ; L zx_crt
skip_11_printf                  = $966B ; L zx_crt
printf_invoke                   = $9670 ; L zx_crt
match_con_printf                = $9690 ; L zx_crt
match_ret_printf                = $969C ; L zx_crt
rcon_tbl_printf                 = $96A4 ; L zx_crt
fcon_tbl_printf                 = $96A9 ; L zx_crt
lcon_tbl_printf                 = $96B2 ; L zx_crt
printf_return_4                 = $96B7 ; L zx_crt
_return_join_4_printf           = $96B8 ; L zx_crt
printf_return_2                 = $96BC ; L zx_crt
_return_join_2_printf           = $96BD ; L zx_crt
error_format_precision_printf   = $96CB ; L zx_crt
error_format_width_printf       = $96CC ; L zx_crt
error_stream_printf             = $96CF ; L zx_crt
__error_stream_printf           = $96D2 ; L zx_crt
error_printf_converter_printf   = $96E0 ; L zx_crt
_printf                         = $96E5 ; G printf
_printf_unlocked                = $96E5 ; G printf_unlocked
asm_printf_unlocked             = $96E5 ; G asm_printf_unlocked
asm_vprintf_unlocked            = $96ED ; G asm_vprintf_unlocked
__stdio_length_modifier         = $96F4 ; G __stdio_length_modifier
lm_loop                         = $96FA ; L __stdio_length_modifier
lm_found                        = $9704 ; L __stdio_length_modifier
lm_double                       = $970D ; L __stdio_length_modifier
lm_chars                        = $9716 ; L __stdio_length_modifier
__stdio_nextarg_de              = $9722 ; G __stdio_nextarg_de
__stdio_varg_2                  = $9727 ; G __stdio_varg
__stdio_verify_output           = $972E ; G __stdio_verify_output
errors                          = $974B ; L __stdio_verify_output
asm_fflush_unlocked             = $9753 ; G asm_fflush_unlocked
asm0_fflush_unlocked            = $975A ; G asm_fflush_unlocked
asm1_fflush_unlocked            = $975A ; G asm_fflush_unlocked
last_was_read                   = $9767 ; L asm_fflush_unlocked
forward_flush                   = $9784 ; L asm_fflush_unlocked
last_was_write                  = $9784 ; L asm_fflush_unlocked
asm__fflushall_unlocked         = $978F ; G asm__fflushall_unlocked
file_loop                       = $9792 ; L asm__fflushall_unlocked
__stdio_printf_d                = $97A0 ; G __stdio_printf_d
__stdio_printf_e                = $97A6 ; G __stdio_printf_e
prec_defined                    = $97C6 ; L __stdio_printf_e
__stdio_printf_f                = $97CC ; G __stdio_printf_f
prec_defined                    = $97EC ; L __stdio_printf_f
__stdio_printf_float_tail       = $97F2 ; G __stdio_printf_float_tail
padding                         = $9809 ; L __stdio_printf_float_tail
print_float                     = $9812 ; L __stdio_printf_float_tail
justification                   = $9842 ; L __stdio_printf_float_tail
left_justify_zero_pad           = $9850 ; L __stdio_printf_float_tail
prefix_0                        = $9855 ; L __stdio_printf_float_tail
prefix_1                        = $9861 ; L __stdio_printf_float_tail
prefix_2                        = $9863 ; L __stdio_printf_float_tail
internal_zeroes                 = $9871 ; L __stdio_printf_float_tail
prefix_x                        = $9879 ; L __stdio_printf_float_tail
left_justify                    = $9886 ; L __stdio_printf_float_tail
right_justify                   = $988F ; L __stdio_printf_float_tail
right_justify_join              = $9894 ; L __stdio_printf_float_tail
stack_restore                   = $9899 ; L __stdio_printf_float_tail
float_max_s                     = $98A1 ; L __stdio_printf_float_tail
__stdio_printf_ld               = $98A9 ; G __stdio_printf_ld
float_max_s_end                 = $98A9 ; L __stdio_printf_float_tail
__stdio_printf_number_tail_int  = $98AF ; G __stdio_printf_number_tail_int
__stdio_printf_number_tail_uint = $98C3 ; G __stdio_printf_number_tail_int
signed_join                     = $98CA ; L __stdio_printf_number_tail_int
__stdio_nextarg_hl              = $98D7 ; G __stdio_nextarg_hl
__stdio_printf_number_tail_zero = $98DC ; G __stdio_printf_number_tail
__stdio_printf_number_tail      = $98E9 ; G __stdio_printf_number_tail
internal_required               = $98FD ; L __stdio_printf_number_tail
no_sign                         = $9905 ; L __stdio_printf_number_tail
no_base_indicator               = $9913 ; L __stdio_printf_number_tail
external_required               = $991B ; L __stdio_printf_number_tail
number_zero                     = $991C ; L __stdio_printf_number_tail
spacing_ok                      = $992C ; L __stdio_printf_number_tail
right_justify                   = $9933 ; L __stdio_printf_number_tail
out_internal                    = $993B ; L __stdio_printf_number_tail
hex_base                        = $995B ; L __stdio_printf_number_tail
octal_base                      = $9966 ; L __stdio_printf_number_tail
no_base_indicator_2             = $9967 ; L __stdio_printf_number_tail
no_prefix_chars                 = $9974 ; L __stdio_printf_number_tail
stream_error                    = $9979 ; L __stdio_printf_number_tail
num_is_zero                     = $998E ; L __stdio_printf_number_tail
left_justify                    = $9992 ; L __stdio_printf_number_tail
__stdio_printf_number_tail_long = $999C ; G __stdio_printf_number_tail_long
__stdio_printf_number_tail_ulong = $99B6 ; G __stdio_printf_number_tail_long
signed_join                     = $99C3 ; L __stdio_printf_number_tail_long
zero                            = $99DB ; L __stdio_printf_number_tail_long
__stdio_printf_sign             = $99DF ; G __stdio_printf_sign
__stdio_printf_sign_0           = $99E2 ; G __stdio_printf_sign
not_negative                    = $99E9 ; L __stdio_printf_sign
not_plus                        = $99F0 ; L __stdio_printf_sign
__stdio_printf_padding_precision_hl = $99F6 ; G __stdio_send_output
__stdio_printf_padding_precision = $99F8 ; G __stdio_send_output
__stdio_printf_padding_precision_bc = $99F8 ; G __stdio_send_output
__stdio_printf_padding_width_hl = $99FC ; G __stdio_send_output
__stdio_printf_padding_width    = $99FE ; G __stdio_send_output
__stdio_printf_padding_width_bc = $99FE ; G __stdio_send_output
__stdio_send_output_chars       = $9A00 ; G __stdio_send_output
__stdio_send_output_buffer      = $9A07 ; G __stdio_send_output
__stdio_send_output             = $9A0C ; G __stdio_send_output
exit                            = $9A1C ; L __stdio_send_output
error_detected                  = $9A21 ; L __stdio_send_output
__stdio_nextarg_bc              = $9A2B ; G __stdio_nextarg_bc
__code_stdio_tail               = $9A30 ; G 
__code_stdlib_head              = $9A30 ; G 
asm_ultoa                       = $9A30 ; G asm_ultoa
asm0_ultoa                      = $9A37 ; G asm_ultoa
asm1_ultoa                      = $9A3D ; G asm_ultoa
compute_lp                      = $9A3F ; L asm_ultoa
write_lp                        = $9A52 ; L asm_ultoa
asm_utoa                        = $9A59 ; G asm_utoa
asm0_utoa                       = $9A5E ; G asm_utoa
asm1_utoa                       = $9A64 ; G asm_utoa
compute_lp                      = $9A6B ; L asm_utoa
write_lp                        = $9A7D ; L asm_utoa
__dtoa__                        = $9A84 ; G __dtoa__
normal_form                     = $9A93 ; L __dtoa__
__dtoa_join                     = $9A9D ; G __dtoa__
integer_digits                  = $9AA2 ; L __dtoa__
fraction_begin                  = $9AB0 ; L __dtoa__
fraction_digits                 = $9AB3 ; L __dtoa__
round                           = $9AC0 ; L __dtoa__
__dtoa_prune                    = $9AC3 ; G __dtoa__
fraction_only                   = $9AC9 ; L __dtoa__
precision_less                  = $9AE3 ; L __dtoa__
__dtoa_adjust_prec              = $9AE8 ; G __dtoa_adjust_prec
__dtoa_count                    = $9AED ; G __dtoa_count
padding                         = $9AF7 ; L __dtoa_count
__dtoa_postamble                = $9B07 ; G __dtoa_postamble
length                          = $9B11 ; L __dtoa_postamble
__dtoa_preamble                 = $9B17 ; G __dtoa_preamble
check_prec                      = $9B21 ; L __dtoa_preamble
init_buffer                     = $9B25 ; L __dtoa_preamble
__dtoa_print                    = $9B3B ; G __dtoa_print
integer_part                    = $9B46 ; L __dtoa_print
iz_zeroes                       = $9B58 ; L __dtoa_print
fz_zeroes                       = $9B69 ; L __dtoa_print
fraction_part                   = $9B71 ; L __dtoa_print
tz_zeroes                       = $9B7F ; L __dtoa_print
zero_terminate                  = $9B87 ; L __dtoa_print
tze_zeroes                      = $9B8E ; L __dtoa_print
special_form                    = $9B97 ; L __dtoa_print
__dtoa_print_zeroes             = $9B9C ; G __dtoa_print_zeroes
__dtoa_remove_zeroes            = $9BA4 ; G __dtoa_remove_zeroes
loop_zeroes                     = $9BBB ; L __dtoa_remove_zeroes
__dtoa_round                    = $9BCA ; G __dtoa_round
loop_round                      = $9BD0 ; L __dtoa_round
__dtoa_special_form             = $9BE0 ; G __dtoa_special_form
string                          = $9BEC ; L __dtoa_special_form
zero                            = $9BF3 ; L __dtoa_special_form
__dtoe__                        = $9BFF ; G __dtoe__
normal_form                     = $9C0E ; L __dtoe__
__dtoe_join                     = $9C1B ; G __dtoe__
round                           = $9C30 ; L __dtoe__
prune                           = $9C46 ; L __dtoe__
exponent_plus                   = $9C57 ; L __dtoe__
skip_100                        = $9C61 ; L __dtoe__
__dtoa_exp_digit                = $9C6E ; G __dtoa_exp_digit
__code_stdlib_tail              = $9C76 ; G 
__code_string_head              = $9C76 ; G 
asm_strchrnul                   = $9C76 ; G asm_strchrnul
loop                            = $9C76 ; L asm_strchrnul
asm_strcpy                      = $9C80 ; G asm_strcpy
loop                            = $9C82 ; L asm_strcpy
asm__memlwr                     = $9C8A ; G asm__memlwr
loop                            = $9C8E ; L asm__memlwr
asm__memupr                     = $9C9A ; G asm__memupr
loop                            = $9C9E ; L asm__memupr
asm_memset                      = $9CAA ; G asm_memset
__code_string_tail              = $9CBB ; G 
__code_temp_sp1_head            = $9CBB ; G 
__code_temp_sp1_tail            = $9CBB ; G 
__code_threads_head             = $9CBB ; G 
__code_threads_mutex_head       = $9CBB ; G 
__code_threads_tail             = $9CBB ; G 
asm_mtx_init                    = $9CBB ; G asm_mtx_init
unknown_type                    = $9CD5 ; L asm_mtx_init
__code_threads_mutex_tail       = $9CDA ; G 
__code_z80_head                 = $9CDA ; G 
asm_z80_delay_ms                = $9CDA ; G asm_z80_delay_ms
ms_loop                         = $9CDC ; L asm_z80_delay_ms
last_ms                         = $9CE9 ; L asm_z80_delay_ms
asm_z80_delay_tstate            = $9CEF ; G asm_z80_delay_tstate
loop                            = $9CF6 ; L asm_z80_delay_tstate
g0                              = $9D04 ; L asm_z80_delay_tstate
g1                              = $9D05 ; L asm_z80_delay_tstate
b0                              = $9D09 ; L asm_z80_delay_tstate
b1                              = $9D0E ; L asm_z80_delay_tstate
asm_z80_pop_ei                  = $9D11 ; G asm_z80_pop_ei
asm0_z80_pop_ei                 = $9D16 ; G asm_z80_pop_ei
ei_state                        = $9D1A ; L asm_z80_pop_ei
di_state                        = $9D1C ; L asm_z80_pop_ei
asm_z80_push_di                 = $9D1E ; G asm_z80_push_di
continue                        = $9D22 ; L asm_z80_push_di
__code_compiler_head            = $9D29 ; G 
__code_lib_head                 = $9D29 ; G 
__code_lib_tail                 = $9D29 ; G 
__code_z80_tail                 = $9D29 ; G 
_main                           = $9D29 ; G whetstone_c
TIMER_START                     = $9D46 ; L whetstone_c
l_main_00102                    = $9D7F ; L whetstone_c
l_main_00316                    = $9DFE ; L whetstone_c
l_main_00145                    = $9E9F ; L whetstone_c
l_main_00318                    = $9EB8 ; L whetstone_c
l_main_00103                    = $9FF6 ; L whetstone_c
l_main_00105                    = $A046 ; L whetstone_c
l_main_00148                    = $A080 ; L whetstone_c
l_main_00322                    = $A099 ; L whetstone_c
l_main_00106                    = $A2DE ; L whetstone_c
l_main_00108                    = $A36A ; L whetstone_c
l_main_00151                    = $A374 ; L whetstone_c
l_main_00326                    = $A38D ; L whetstone_c
l_main_00109                    = $A3AA ; L whetstone_c
l_main_00111                    = $A436 ; L whetstone_c
l_main_00154                    = $A443 ; L whetstone_c
l_main_00330                    = $A45C ; L whetstone_c
l_main_00113                    = $A473 ; L whetstone_c
l_main_00114                    = $A479 ; L whetstone_c
l_main_00333                    = $A488 ; L whetstone_c
l_main_00116                    = $A493 ; L whetstone_c
l_main_00117                    = $A499 ; L whetstone_c
l_main_00119                    = $A4B0 ; L whetstone_c
l_main_00155                    = $A4B6 ; L whetstone_c
l_main_00121                    = $A4CA ; L whetstone_c
l_main_00123                    = $A519 ; L whetstone_c
l_main_00157                    = $A535 ; L whetstone_c
l_main_00337                    = $A54E ; L whetstone_c
l_main_00124                    = $A638 ; L whetstone_c
l_main_00126                    = $A6F5 ; L whetstone_c
l_main_00160                    = $A717 ; L whetstone_c
l_main_00341                    = $A730 ; L whetstone_c
l_main_00127                    = $A8E5 ; L whetstone_c
l_main_00129                    = $A954 ; L whetstone_c
l_main_00163                    = $A982 ; L whetstone_c
l_main_00345                    = $A99B ; L whetstone_c
l_main_00130                    = $A9CC ; L whetstone_c
l_main_00132                    = $AA3B ; L whetstone_c
l_main_00166                    = $AA7B ; L whetstone_c
l_main_00349                    = $AA94 ; L whetstone_c
l_main_00133                    = $AAAC ; L whetstone_c
l_main_00135                    = $AB69 ; L whetstone_c
l_main_00169                    = $AB7F ; L whetstone_c
l_main_00353                    = $AB98 ; L whetstone_c
l_main_00136                    = $ABE3 ; L whetstone_c
l_main_00138                    = $AC52 ; L whetstone_c
l_main_00172                    = $AC68 ; L whetstone_c
l_main_00357                    = $AC81 ; L whetstone_c
l_main_00139                    = $ACBC ; L whetstone_c
l_main_00141                    = $AD2B ; L whetstone_c
l_main_00361                    = $AD33 ; L whetstone_c
l_main_00362                    = $AD44 ; L whetstone_c
TIMER_STOP                      = $AD47 ; L whetstone_c
_PA                             = $AD4F ; G whetstone_c
l_PA_00101                      = $AD62 ; L whetstone_c
l_PA_00110                      = $AFF3 ; L whetstone_c
_P0                             = $B008 ; G whetstone_c
_P3                             = $B092 ; G whetstone_c
_POUT                           = $B14F ; G whetstone_c
__code_compiler_tail            = $B1C8 ; G 
__code_user_head                = $B1C8 ; G 
__code_user_tail                = $B1C8 ; G 
__rodata_clib_head              = $B1C8 ; G 
__rodata_clib_tail              = $B1C8 ; G 
__rodata_driver_head            = $B1C8 ; G 
__rodata_driver_tail            = $B1C8 ; G 
__rodata_error_string_end_head  = $B1C8 ; G 
__rodata_error_strings_head     = $B1C8 ; G 
__rodata_error_strings_tail     = $B1C8 ; G 
__rodata_font_head              = $B1C8 ; G 
__rodata_font_tail              = $B1C8 ; G 
CRT_FONT                        = $B1C9 ; G zx_crt
__rodata_error_string_end_tail  = $B1C9 ; G 
__rodata_fcntl_head             = $B1C9 ; G 
__rodata_fcntl_tail             = $B1C9 ; G 
__rodata_font_4x8_head          = $B1C9 ; G 
_font_4x8_default               = $B1C9 ; G _font_4x8_default
__rodata_font_4x8_tail          = $B4C9 ; G 
__rodata_font_8x8_head          = $B4C9 ; G 
__rodata_font_8x8_tail          = $B4C9 ; G 
__rodata_font_fzx_head          = $B4C9 ; G 
__rodata_font_fzx_tail          = $B4C9 ; G 
__rodata_input_head             = $B4C9 ; G 
in_key_translation_table        = $B4C9 ; G in_key_translation_table
__dtoa_inf_s                    = $B569 ; G __dtoa_inf_s
__rodata_input_tail             = $B569 ; G 
__rodata_sound_bit_head         = $B569 ; G 
__rodata_sound_bit_tail         = $B569 ; G 
__rodata_stdio_head             = $B569 ; G 
__rodata_stdio_tail             = $B569 ; G 
__rodata_stdlib_head            = $B569 ; G 
__dtoa_nan_s                    = $B56D ; G __dtoa_nan_s
___str_0                        = $B571 ; L whetstone_c
__rodata_compiler_head          = $B571 ; G 
__rodata_lib_head               = $B571 ; G 
__rodata_lib_tail               = $B571 ; G 
__rodata_stdlib_tail            = $B571 ; G 
__CODE_END_head                 = $B5B0 ; G 
__CODE_END_tail                 = $B5B0 ; G 
__DATA_head                     = $B5B0 ; G 
__rodata_compiler_tail          = $B5B0 ; G 
__rodata_user_head              = $B5B0 ; G 
__rodata_user_tail              = $B5B0 ; G 
__DATA_tail                     = $B5B1 ; G 
__data_alloc_balloc_head        = $B5B1 ; G 
__data_alloc_balloc_tail        = $B5B1 ; G 
__data_alloc_malloc_head        = $B5B1 ; G 
__data_clib_head                = $B5B1 ; G 
__data_clib_tail                = $B5B1 ; G 
__data_driver_head              = $B5B1 ; G 
__data_driver_tail              = $B5B1 ; G 
__data_font_head                = $B5B1 ; G 
__data_font_tail                = $B5B1 ; G 
__malloc_heap                   = $B5B1 ; G zx_crt
__smc_clib_head                 = $B5B1 ; G 
__smc_clib_tail                 = $B5B1 ; G 
__smc_compiler_head             = $B5B1 ; G 
__smc_compiler_tail             = $B5B1 ; G 
__smc_driver_head               = $B5B1 ; G 
__smc_driver_tail               = $B5B1 ; G 
__smc_fcntl_head                = $B5B1 ; G 
__smc_fcntl_tail                = $B5B1 ; G 
__smc_font_head                 = $B5B1 ; G 
__smc_font_tail                 = $B5B1 ; G 
__smc_l_head                    = $B5B1 ; G 
__smc_l_tail                    = $B5B1 ; G 
__smc_lib_head                  = $B5B1 ; G 
__smc_lib_tail                  = $B5B1 ; G 
__smc_sound_bit_head            = $B5B1 ; G 
__smc_sound_bit_tail            = $B5B1 ; G 
__smc_user_head                 = $B5B1 ; G 
__smc_user_tail                 = $B5B1 ; G 
__data_alloc_malloc_tail        = $B5B3 ; G 
__data_fcntl_head               = $B5B3 ; G 
__stdio_heap                    = $B5B3 ; G zx_crt
__data_fcntl_stdio_heap_head_head = $B5B5 ; G 
__data_fcntl_tail               = $B5B5 ; G 
__stdio_block                   = $B5B5 ; L zx_crt
__data_fcntl_stdio_heap_body_head = $B5BB ; G 
__data_fcntl_stdio_heap_head_tail = $B5BB ; G 
__i_fcntl_heap_0                = $B5BB ; L zx_crt
__i_fcntl_fdstruct_0            = $B5C1 ; L zx_crt
__edit_buffer_0                 = $B5E4 ; L zx_crt
__i_fcntl_heap_1                = $B624 ; L zx_crt
__i_fcntl_fdstruct_1            = $B62A ; L zx_crt
__i_fcntl_fdstruct_2            = $B62A ; L zx_crt
__i_fcntl_heap_2                = $B647 ; L zx_crt
__data_fcntl_stdio_heap_body_tail = $B6B3 ; G 
__data_fcntl_stdio_heap_tail_head = $B6B3 ; G 
__i_fcntl_heap_3                = $B6B3 ; L zx_crt
__data_fcntl_fdtable_body_head  = $B6B5 ; G 
__data_fcntl_stdio_heap_tail_tail = $B6B5 ; G 
__fcntl_fdtbl                   = $B6B5 ; G zx_crt
__data_fcntl_fdtable_body_tail  = $B6BB ; G 
__data_sound_bit_head           = $B6BB ; G 
__sound_bit_state               = $B6BB ; G __sound_bit_state
__data_sound_bit_tail           = $B6BC ; G 
__data_stdio_head               = $B6BC ; G 
_stdin                          = $B6BC ; G zx_crt
__i_stdio_file_0                = $B6BE ; L zx_crt
_stdout                         = $B6CD ; G zx_crt
__i_stdio_file_1                = $B6CF ; L zx_crt
_stderr                         = $B6DE ; G zx_crt
__i_stdio_file_2                = $B6E0 ; L zx_crt
__stdio_open_file_list          = $B6EF ; G zx_crt
__stdio_closed_file_list        = $B6F1 ; G zx_crt
__data_stdio_tail               = $B6F5 ; G 
__data_stdlib_head              = $B6F5 ; G 
__data_stdlib_tail              = $B6F5 ; G 
__data_threads_head             = $B6F5 ; G 
__thrd_id                       = $B6F5 ; G zx_crt
__BSS_head                      = $B6F6 ; G 
__DATA_END_head                 = $B6F6 ; G 
__DATA_END_tail                 = $B6F6 ; G 
__data_compiler_head            = $B6F6 ; G 
__data_compiler_tail            = $B6F6 ; G 
__data_lib_head                 = $B6F6 ; G 
__data_lib_tail                 = $B6F6 ; G 
__data_threads_tail             = $B6F6 ; G 
__data_user_head                = $B6F6 ; G 
__data_user_tail                = $B6F6 ; G 
__BSS_UNINITIALIZED_head        = $B6F7 ; G 
__BSS_tail                      = $B6F7 ; G 
__sp_or_ret                     = $B6F7 ; L zx_crt
__BSS_UNINITIALIZED_tail        = $B6F9 ; G 
__bss_alloc_balloc_head         = $B6F9 ; G 
__bss_alloc_balloc_tail         = $B6F9 ; G 
__bss_alloc_malloc_head         = $B6F9 ; G 
__bss_alloc_malloc_tail         = $B6F9 ; G 
__bss_arch_head                 = $B6F9 ; G 
__bss_arch_tail                 = $B6F9 ; G 
__bss_clib_head                 = $B6F9 ; G 
__bss_clib_tail                 = $B6F9 ; G 
__bss_compress_aplib_head       = $B6F9 ; G 
__bss_compress_aplib_tail       = $B6F9 ; G 
__bss_driver_head               = $B6F9 ; G 
__bss_driver_tail               = $B6F9 ; G 
__bss_error_head                = $B6F9 ; G 
__bss_font_head                 = $B6F9 ; G 
__bss_font_tail                 = $B6F9 ; G 
_errno                          = $B6F9 ; G _errno
__bss_error_tail                = $B6FB ; G 
__bss_fcntl_head                = $B6FB ; G 
__bss_fcntl_tail                = $B6FB ; G 
__bss_input_head                = $B6FB ; G 
__bss_input_tail                = $B6FB ; G 
__bss_sound_bit_head            = $B6FB ; G 
__bss_sound_bit_tail            = $B6FB ; G 
__bss_stdio_head                = $B6FB ; G 
__bss_stdio_tail                = $B6FB ; G 
__bss_stdlib_head               = $B6FB ; G 
__exit_stack                    = $B6FB ; G zx_crt
__quickexit_stack               = $B6FC ; G zx_crt
_T                              = $B6FD ; G whetstone_c
__bss_compiler_head             = $B6FD ; G 
__bss_lib_head                  = $B6FD ; G 
__bss_lib_tail                  = $B6FD ; G 
__bss_stdlib_tail               = $B6FD ; G 
__bss_string_head               = $B6FD ; G 
__bss_string_tail               = $B6FD ; G 
_T1                             = $B701 ; G whetstone_c
_T2                             = $B705 ; G whetstone_c
_E1                             = $B709 ; G whetstone_c
_J                              = $B71D ; G whetstone_c
_K                              = $B71F ; G whetstone_c
_L                              = $B721 ; G whetstone_c
_main_I_1_569                   = $B723 ; L whetstone_c
_main_N1_1_569                  = $B727 ; L whetstone_c
_main_N2_1_569                  = $B72B ; L whetstone_c
_main_N3_1_569                  = $B72F ; L whetstone_c
_main_N4_1_569                  = $B733 ; L whetstone_c
_main_N6_1_569                  = $B737 ; L whetstone_c
_main_N7_1_569                  = $B73B ; L whetstone_c
_main_N8_1_569                  = $B73F ; L whetstone_c
_main_N9_1_569                  = $B743 ; L whetstone_c
_main_N10_1_569                 = $B747 ; L whetstone_c
_main_N11_1_569                 = $B74B ; L whetstone_c
_main_X1_1_569                  = $B74F ; L whetstone_c
_main_X2_1_569                  = $B753 ; L whetstone_c
_main_X3_1_569                  = $B757 ; L whetstone_c
_main_X4_1_569                  = $B75B ; L whetstone_c
_main_X_1_569                   = $B75F ; L whetstone_c
_main_Y_1_569                   = $B763 ; L whetstone_c
_main_Z_1_569                   = $B767 ; L whetstone_c
_main_LOOP_1_569                = $B76B ; L whetstone_c
_main_II_1_569                  = $B76F ; L whetstone_c
_main_JJ_1_569                  = $B771 ; L whetstone_c
_main_loopstart_1_569           = $B773 ; L whetstone_c
_main_startsec_1_569            = $B777 ; L whetstone_c
_main_finisec_1_569             = $B77B ; L whetstone_c
_main_KIPS_1_569                = $B77F ; L whetstone_c
_main_continuous_1_569          = $B783 ; L whetstone_c
_P3_X1_1_595                    = $B785 ; L whetstone_c
_P3_Y1_1_595                    = $B789 ; L whetstone_c
__BSS_END_head                  = $B78D ; G 
__BSS_END_tail                  = $B78D ; G 
__bss_compiler_tail             = $B78D ; G 
__bss_user_head                 = $B78D ; G 
__bss_user_tail                 = $B78D ; G 
__NIRVANAM_TILE_IMAGES          = $BB80 ; G zx_crt
__NIRVANAP_TILE_IMAGES          = $BB80 ; G zx_crt
__BIFROSTH_TILE_IMAGES          = $BD74 ; G zx_crt
__BIFROSTL_TILE_IMAGES          = $BD74 ; G zx_crt
__BIFROST2_TILE_IMAGES          = $BF68 ; G zx_crt
IOCTL_ITERM_CAPS                = $C009 ; G zx_crt
IOCTL_ITERM_COOK                = $C011 ; G zx_crt
IOCTL_OTERM_CRLF                = $C012 ; G zx_crt
IOCTL_OCHAR_CRLF                = $C014 ; G zx_crt
IOCTL_ITERM_LINE                = $C021 ; G zx_crt
IOCTL_OTERM_COOK                = $C022 ; G zx_crt
IOCTL_ITERM_PASS                = $C041 ; G zx_crt
IOCTL_OTERM_PAUSE               = $C042 ; G zx_crt
IOCTL_ITERM_ECHO                = $C081 ; G zx_crt
IOCTL_OTERM_PAGE                = $C082 ; G zx_crt
IOCTL_ITERM_CRLF                = $C101 ; G zx_crt
IOCTL_OTERM_BELL                = $C102 ; G zx_crt
IOCTL_ICHAR_CRLF                = $C103 ; G zx_crt
IOCTL_ITERM_CURS                = $C201 ; G zx_crt
IOCTL_OTERM_SIGNAL              = $C202 ; G zx_crt
SP1V_UPDATELISTH                = $D1ED ; G zx_crt
SP1V_UPDATELISTT                = $D1EF ; G zx_crt
SP1V_PIXELBUFFER                = $D1F7 ; G zx_crt
SP1V_ATTRBUFFER                 = $D1FF ; G zx_crt
SP1V_UPDATEARRAY                = $D200 ; G zx_crt
__NIRVANAM_WIDE_IMAGES          = $D2F0 ; G zx_crt
__NIRVANAP_WIDE_IMAGES          = $D2F0 ; G zx_crt
IOCTL_OTERM_CLEAR               = $E002 ; G zx_crt
SP1V_ROTTBL                     = $F000 ; G zx_crt
SP1V_TILEARRAY                  = $F000 ; G zx_crt
_NIRVANAP_HOLE                  = $FB06 ; G zx_crt
__NIRVANAP_HOLE                 = $FB06 ; G zx_crt
_BIFROST2_HOLE                  = $FD47 ; G zx_crt
__BIFROST2_HOLE                 = $FD47 ; G zx_crt
_NIRVANAM_HOLE                  = $FDE2 ; G zx_crt
__NIRVANAM_HOLE                 = $FDE2 ; G zx_crt
__BIFROST2_TILE_MAP             = $FF01 ; G zx_crt
__BIFROSTH_TILE_MAP             = $FF01 ; G zx_crt
__BIFROSTL_TILE_MAP             = $FF01 ; G zx_crt
TAR__register_sp                = $FF58 ; L zx_crt
__register_sp                   = $FF58 ; L zx_crt
__CLIB_OPT_PRINTF_lo            = $10000 ; G zx_crt
__CLIB_OPT_SCANF_lo             = $10000 ; G zx_crt
__CLIB_OPT_PRINTF_ln            = $20000 ; G zx_crt
__CLIB_OPT_SCANF_ln             = $20000 ; G zx_crt
TAR__crt_on_exit                = $30002 ; L zx_crt
__crt_on_exit                   = $30002 ; L zx_crt
__CLIB_OPT_PRINTF_li            = $40000 ; G zx_crt
__CLIB_OPT_SCANF_li             = $40000 ; G zx_crt
__CLIB_OPT_PRINTF_lp            = $80000 ; G zx_crt
__CLIB_OPT_SCANF_lp             = $80000 ; G zx_crt
__CLIB_OPT_PRINTF_lB            = $100000 ; G zx_crt
__CLIB_OPT_SCANF_lB             = $100000 ; G zx_crt
__CLIB_OPT_SCANF_BRACKET        = $200000 ; G zx_crt
__CLIB_OPT_PRINTF               = $2FF6FF ; G zx_crt
__CLIB_OPT_SCANF                = $2FF6FF ; G zx_crt
__CPU_CLOCK                     = $3567E0 ; L asm_z80_delay_ms
__CPU_CLOCK                     = $3567E0 ; L zx_01_output_char_32_iterm_msg_bell
__CPU_CLOCK                     = $3567E0 ; L zx_01_output_char_32_oterm_msg_bell
__CPU_CLOCK                     = $3567E0 ; G zx_crt
__CLIB_OPT_PRINTF_a             = $400000 ; G zx_crt
__CLIB_OPT_SCANF_a              = $400000 ; G zx_crt
__CLIB_OPT_PRINTF_A             = $800000 ; G zx_crt
__CLIB_OPT_SCANF_A              = $800000 ; G zx_crt
__CLIB_OPT_PRINTF_e             = $1000000 ; G zx_crt
__CLIB_OPT_SCANF_e              = $1000000 ; G zx_crt
__CLIB_OPT_PRINTF_E             = $2000000 ; G zx_crt
__CLIB_OPT_SCANF_E              = $2000000 ; G zx_crt
__CLIB_OPT_PRINTF_f             = $4000000 ; G zx_crt
__CLIB_OPT_SCANF_f              = $4000000 ; G zx_crt
CLIB_OPT_PRINTF                 = $5001001 ; L zx_crt
__CLIB_OPT_PRINTF_F             = $8000000 ; G zx_crt
__CLIB_OPT_SCANF_F              = $8000000 ; G zx_crt
__CLIB_OPT_PRINTF_g             = $10000000 ; G zx_crt
__CLIB_OPT_SCANF_g              = $10000000 ; G zx_crt
__CLIB_OPT_PRINTF_G             = $20000000 ; G zx_crt
__CLIB_OPT_SCANF_G              = $20000000 ; G zx_crt
