TAR__clib_malloc_heap_size      = $FFFFFFFF ; L z80_crt
TAR__crt_interrupt_mode         = $FFFFFFFF ; L z80_crt
__clib_malloc_heap_size         = $FFFFFFFF ; L z80_crt
__crt_interrupt_mode            = $FFFFFFFF ; L z80_crt
DEF__crt_enable_trap            = $0000 ; L z80_crt
IOCTL_RESET                     = $0000 ; G z80_crt
STDIO_SEEK_SET                  = $0000 ; G z80_crt
TAR__clib_balloc_table_size     = $0000 ; L z80_crt
TAR__clib_exit_stack_size       = $0000 ; L z80_crt
TAR__clib_fopen_max             = $0000 ; L z80_crt
TAR__clib_open_max              = $0000 ; L z80_crt
TAR__clib_quickexit_stack_size  = $0000 ; L z80_crt
TAR__crt_enable_commandline     = $0000 ; L z80_crt
TAR__crt_enable_nmi             = $0000 ; L z80_crt
TAR__crt_enable_restart         = $0000 ; L z80_crt
TAR__crt_enable_rst             = $0000 ; L z80_crt
TAR__crt_enable_streams         = $0000 ; L z80_crt
TAR__crt_include_preamble       = $0000 ; L z80_crt
TAR__crt_initialize_bss         = $0000 ; L z80_crt
TAR__crt_model                  = $0000 ; L z80_crt
TAR__crt_org_bss                = $0000 ; L z80_crt
TAR__crt_org_code               = $0000 ; L z80_crt
TAR__crt_org_data               = $0000 ; L z80_crt
TAR__crt_org_vector_table       = $0000 ; L z80_crt
TAR__register_sp                = $0000 ; L z80_crt
__BSS_END_size                  = $0000 ; G 
__BSS_UNINITIALIZED_size        = $0000 ; G 
__CLIB_OPT_ERROR                = $0000 ; L error_edom_zc
__CLIB_OPT_ERROR                = $0000 ; L error_enolck_zc
__CLIB_OPT_ERROR                = $0000 ; L error_erange_zc
__CLIB_OPT_ERROR                = $0000 ; G z80_crt
__CLIB_OPT_FASTCOPY             = $0000 ; G z80_crt
__CLIB_OPT_IMATH                = $0000 ; L __mullong_callee
__CLIB_OPT_IMATH                = $0000 ; L l_mulu_16_16x16
__CLIB_OPT_IMATH                = $0000 ; L l_mulu_32_32x32
__CLIB_OPT_IMATH                = $0000 ; G z80_crt
__CLIB_OPT_IMATH_SELECT         = $0000 ; L l_lsr_hl
__CLIB_OPT_IMATH_SELECT         = $0000 ; G z80_crt
__CLIB_OPT_MULTITHREAD          = $0000 ; G z80_crt
__CLIB_OPT_NUM2TXT              = $0000 ; G z80_crt
__CLIB_OPT_NUM2TXT_SELECT       = $0000 ; G z80_crt
__CLIB_OPT_PRINTF_2             = $0000 ; G z80_crt
__CLIB_OPT_SCANF_2              = $0000 ; G z80_crt
__CLIB_OPT_SORT_INSERTION       = $0000 ; G z80_crt
__CLIB_OPT_SORT_QSORT_PIVOT_MID = $0000 ; G z80_crt
__CLIB_OPT_STDIO                = $0000 ; G z80_crt
__CLIB_OPT_STRTOD               = $0000 ; G z80_crt
__CLIB_OPT_TXT2NUM_SELECT       = $0000 ; G z80_crt
__CODE_END_size                 = $0000 ; G 
__CODE_head                     = $0000 ; G 
__CPU_INFO                      = $0000 ; G z80_crt
__CRTCFG                        = $0000 ; L z80_crt
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G z80_crt
__IGNORE_head                   = $0000 ; G 
__IGNORE_size                   = $0000 ; G 
__IGNORE_tail                   = $0000 ; G 
__MAX_FOPEN                     = $0000 ; G z80_crt
__MAX_OPEN                      = $0000 ; G z80_crt
__MMAP                          = $0000 ; L z80_crt
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L z80_crt
__clib_exit_stack_size          = $0000 ; L z80_crt
__clib_fopen_max                = $0000 ; G z80_crt
__clib_open_max                 = $0000 ; G z80_crt
__clib_quickexit_stack_size     = $0000 ; L z80_crt
__code_adt_b_array_size         = $0000 ; G 
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_forward_list_size  = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_arch_size                = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_common_size          = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_ctype_size               = $0000 ; G 
__code_driver_character_input_size = $0000 ; G 
__code_driver_character_output_size = $0000 ; G 
__code_driver_general_size      = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_terminal_input_size = $0000 ; G 
__code_driver_terminal_output_size = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_fcntl_size               = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_input_size               = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sccz80_size            = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_sound_bit_size           = $0000 ; G 
__code_stdio_size               = $0000 ; G 
__code_stdlib_size              = $0000 ; G 
__code_string_size              = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_user_size                = $0000 ; G 
__code_vector_head              = $0000 ; G 
__code_vector_size              = $0000 ; G 
__code_vector_tail              = $0000 ; G 
__code_z80_size                 = $0000 ; G 
__crt_enable_commandline        = $0000 ; L z80_crt
__crt_enable_nmi                = $0000 ; L z80_crt
__crt_enable_restart            = $0000 ; L z80_crt
__crt_enable_rst                = $0000 ; L z80_crt
__crt_include_preamble          = $0000 ; L z80_crt
__crt_initialize_bss            = $0000 ; L z80_crt
__crt_model                     = $0000 ; L z80_crt
__crt_org_bss                   = $0000 ; L z80_crt
__crt_org_code                  = $0000 ; L z80_crt
__crt_org_data                  = $0000 ; L z80_crt
__crt_org_vector_table          = $0000 ; L z80_crt
__data_alloc_balloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_compiler_size            = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_fcntl_fdtable_body_size  = $0000 ; G 
__data_fcntl_stdio_heap_body_size = $0000 ; G 
__data_fcntl_stdio_heap_head_size = $0000 ; G 
__data_fcntl_stdio_heap_tail_size = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_sound_bit_size           = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__exit_stack_size               = $0000 ; G z80_crt
__fcntl_fdtbl                   = $0000 ; G z80_crt
__fcntl_fdtbl_size              = $0000 ; G z80_crt
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G z80_crt
__register_sp                   = $0000 ; L z80_crt
__rodata_clib_size              = $0000 ; G 
__rodata_compiler_size          = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_error_strings_size     = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_4x8_size          = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_input_size             = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_stdlib_size            = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__size                          = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
__tail                          = $0000 ; G 
startup                         = $0000 ; L z80_crt
thrd_success                    = $0000 ; G z80_crt
DEFINED_Z88DK_USES_SDCC         = $0001 ; L z80_crt
DEFINED_startup                 = $0001 ; L z80_crt
STDIO_MSG_PUTC                  = $0001 ; G z80_crt
STDIO_SEEK_CUR                  = $0001 ; G z80_crt
TAR__crt_enable_close           = $0001 ; L z80_crt
Z88DK_USES_SDCC                 = $0001 ; L z80_crt
__BSS_size                      = $0001 ; G 
__CLIB_OPT_ERROR_ENABLED        = $0001 ; G z80_crt
__CLIB_OPT_FASTCOPY_MEMCPY      = $0001 ; G z80_crt
__CLIB_OPT_IMATH_FAST_DIV_UNROLL = $0001 ; G z80_crt
__CLIB_OPT_IMATH_SELECT_FAST_ASR = $0001 ; G z80_crt
__CLIB_OPT_MULTITHREAD_LOCK_HEAPS = $0001 ; G z80_crt
__CLIB_OPT_NUM2TXT_INT_BIN      = $0001 ; G z80_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_BIN = $0001 ; G z80_crt
__CLIB_OPT_PRINTF_2_lld         = $0001 ; G z80_crt
__CLIB_OPT_PRINTF_d             = $0001 ; G z80_crt
__CLIB_OPT_SCANF_2_lld          = $0001 ; G z80_crt
__CLIB_OPT_SCANF_d              = $0001 ; G z80_crt
__CLIB_OPT_SORT                 = $0001 ; G z80_crt
__CLIB_OPT_SORT_QSORT_PIVOT_RAN = $0001 ; G z80_crt
__CLIB_OPT_SORT_SHELL           = $0001 ; G z80_crt
__CLIB_OPT_STDIO_VALID          = $0001 ; G z80_crt
__CLIB_OPT_STRTOD_INF           = $0001 ; G z80_crt
__CLIB_OPT_STRTOD_NAN           = $0001 ; G z80_crt
__CLIB_OPT_TXT2NUM_INT_BIN      = $0001 ; G z80_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_BIN = $0001 ; G z80_crt
__CPU_INFO_ENABLE_SLL           = $0001 ; G z80_crt
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G z80_crt
__EMBEDDED_Z80                  = $0001 ; G z80_crt
__SDCC                          = $0001 ; L z80_crt
__SDCC_IY                       = $0001 ; L __mullong_callee
__SDCC_IY                       = $0001 ; L z80_crt
__Z80                           = $0001 ; G z80_crt
__Z80_NMOS                      = $0001 ; G z80_crt
__crt_enable_close              = $0001 ; L z80_crt
__data_threads_size             = $0001 ; G 
__page_zero_present             = $0001 ; L z80_crt
__rodata_error_string_end_size  = $0001 ; G 
mtx_plain                       = $0001 ; G z80_crt
thrd_error                      = $0001 ; G z80_crt
STDIO_MSG_WRIT                  = $0002 ; G z80_crt
STDIO_SEEK_END                  = $0002 ; G z80_crt
__CLIB_OPT_ERROR_VERBOSE        = $0002 ; G z80_crt
__CLIB_OPT_FASTCOPY_MEMSET      = $0002 ; G z80_crt
__CLIB_OPT_IMATH_FAST_DIV_LZEROS = $0002 ; G z80_crt
__CLIB_OPT_IMATH_SELECT_FAST_LSR = $0002 ; G z80_crt
__CLIB_OPT_MULTITHREAD_LOCK_FILES = $0002 ; G z80_crt
__CLIB_OPT_NUM2TXT_INT_OCT      = $0002 ; G z80_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_OCT = $0002 ; G z80_crt
__CLIB_OPT_PRINTF_2_llu         = $0002 ; G z80_crt
__CLIB_OPT_PRINTF_u             = $0002 ; G z80_crt
__CLIB_OPT_SCANF_2_llu          = $0002 ; G z80_crt
__CLIB_OPT_SCANF_u              = $0002 ; G z80_crt
__CLIB_OPT_SORT_QUICK           = $0002 ; G z80_crt
__CLIB_OPT_STRTOD_HEX           = $0002 ; G z80_crt
__CLIB_OPT_TXT2NUM_INT_OCT      = $0002 ; G z80_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_OCT = $0002 ; G z80_crt
__EBADF                         = $0002 ; G z80_crt
__Z80_CMOS                      = $0002 ; G z80_crt
__bss_error_size                = $0002 ; G 
__bss_stdio_size                = $0002 ; G 
__bss_stdlib_size               = $0002 ; G 
__data_alloc_malloc_size        = $0002 ; G 
__data_fcntl_size               = $0002 ; G 
mtx_recursive                   = $0002 ; G z80_crt
thrd_nomem                      = $0002 ; G z80_crt
CHAR_CTRL_C                     = $0003 ; G z80_crt
DEF__crt_enforce_snames         = $0003 ; L z80_crt
STDIO_MSG_GETC                  = $0003 ; G z80_crt
__CLIB_OPT_SORT_QSORT_PIVOT     = $0003 ; G z80_crt
__EBDFD                         = $0003 ; G z80_crt
__crt_enforce_snames            = $0003 ; L z80_crt
CHAR_CTRL_D                     = $0004 ; G z80_crt
STDIO_MSG_EATC                  = $0004 ; G z80_crt
__CLIB_OPT_IMATH_FAST_MUL_UNROLL = $0004 ; G z80_crt
__CLIB_OPT_IMATH_SELECT_FAST_LSL = $0004 ; G z80_crt
__CLIB_OPT_MULTITHREAD_LOCK_FLIST = $0004 ; G z80_crt
__CLIB_OPT_NUM2TXT_INT_DEC      = $0004 ; G z80_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_DEC = $0004 ; G z80_crt
__CLIB_OPT_PRINTF_2_llx         = $0004 ; G z80_crt
__CLIB_OPT_PRINTF_x             = $0004 ; G z80_crt
__CLIB_OPT_SCANF_2_llx          = $0004 ; G z80_crt
__CLIB_OPT_SCANF_x              = $0004 ; G z80_crt
__CLIB_OPT_SORT_QSORT_ENABLE_INSERTION = $0004 ; G z80_crt
__CLIB_OPT_TXT2NUM              = $0004 ; G z80_crt
__CLIB_OPT_TXT2NUM_INT_DEC      = $0004 ; G z80_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_DEC = $0004 ; G z80_crt
__EDOM                          = $0004 ; G z80_crt
__data_stdio_size               = $0004 ; G 
mtx_timed                       = $0004 ; G z80_crt
thrd_busy                       = $0004 ; G z80_crt
STDIO_MSG_READ                  = $0005 ; G z80_crt
__EFBIG                         = $0005 ; G z80_crt
__code_crt_main_size            = $0005 ; G 
__code_crt_return_size          = $0005 ; G 
CHAR_CAPS                       = $0006 ; G z80_crt
STDIO_MSG_SEEK                  = $0006 ; G z80_crt
__EINVAL                        = $0006 ; G z80_crt
CHAR_BELL                       = $0007 ; G z80_crt
STDIO_MSG_ICTL                  = $0007 ; G z80_crt
__EMFILE                        = $0007 ; G z80_crt
STDIO_MSG_FLSH                  = $0008 ; G z80_crt
__CLIB_OPT_IMATH_FAST_MUL_LZEROS = $0008 ; G z80_crt
__CLIB_OPT_MULTITHREAD_LOCK_FDTBL = $0008 ; G z80_crt
__CLIB_OPT_NUM2TXT_INT_HEX      = $0008 ; G z80_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_HEX = $0008 ; G z80_crt
__CLIB_OPT_PRINTF_2_llX         = $0008 ; G z80_crt
__CLIB_OPT_PRINTF_X             = $0008 ; G z80_crt
__CLIB_OPT_SCANF_2_llX          = $0008 ; G z80_crt
__CLIB_OPT_SCANF_X              = $0008 ; G z80_crt
__CLIB_OPT_SORT_QSORT_ENABLE_EQUAL = $0008 ; G z80_crt
__CLIB_OPT_TXT2NUM_INT_HEX      = $0008 ; G z80_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_HEX = $0008 ; G z80_crt
__ENFILE                        = $0008 ; G z80_crt
thrd_timedout                   = $0008 ; G z80_crt
STDIO_MSG_CLOS                  = $0009 ; G z80_crt
__ENOLCK                        = $0009 ; G z80_crt
CHAR_LF                         = $000A ; G z80_crt
__ENOMEM                        = $000A ; G z80_crt
__ENOTSUP                       = $000B ; G z80_crt
CHAR_BS                         = $000C ; G z80_crt
__CLIB_OPT_SORT_QSORT           = $000C ; G z80_crt
__EOVERFLOW                     = $000C ; G z80_crt
CHAR_CR                         = $000D ; G z80_crt
__ERANGE                        = $000D ; G z80_crt
__ESTAT                         = $000E ; G z80_crt
ICHAR_MSG_GETC                  = $000F ; G z80_crt
ITERM_MSG_GETC                  = $000F ; G z80_crt
__CLIB_OPT_IMATH_FAST           = $000F ; G z80_crt
__EAGAIN                        = $000F ; G z80_crt
__EWOULDBLOCK                   = $000F ; G z80_crt
ITERM_MSG_INTERRUPT             = $0010 ; G z80_crt
__CLIB_OPT_MULTITHREAD_LOCK_FDSTR = $0010 ; G z80_crt
__CLIB_OPT_NUM2TXT_LONG_BIN     = $0010 ; G z80_crt
__CLIB_OPT_PRINTF_2_llo         = $0010 ; G z80_crt
__CLIB_OPT_PRINTF_o             = $0010 ; G z80_crt
__CLIB_OPT_SCANF_2_llo          = $0010 ; G z80_crt
__CLIB_OPT_SCANF_o              = $0010 ; G z80_crt
__CLIB_OPT_TXT2NUM_LONG_BIN     = $0010 ; G z80_crt
ITERM_MSG_PUTC                  = $0011 ; G z80_crt
ITERM_MSG_PRINT_CURSOR          = $0012 ; G z80_crt
__code_l_sdcc_size              = $0012 ; G 
ITERM_MSG_ERASE_CURSOR          = $0013 ; G z80_crt
TAR__crt_enable_eidi            = $0013 ; L z80_crt
__crt_enable_eidi               = $0013 ; L z80_crt
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G z80_crt
ITERM_MSG_BS                    = $0015 ; G z80_crt
ITERM_MSG_BS_PWD                = $0016 ; G z80_crt
ITERM_MSG_READLINE_BEGIN        = $0017 ; G z80_crt
ITERM_MSG_READLINE_END          = $0018 ; G z80_crt
__code_l_size                   = $0018 ; G 
ITERM_MSG_BELL                  = $0019 ; G z80_crt
CHAR_CTRL_Z                     = $001A ; G z80_crt
__MESSAGE_ITERM_NEXT__          = $001A ; G z80_crt
CHAR_ESC                        = $001B ; G z80_crt
l_dec_de                        = $001C ; G z80_crt
OCHAR_MSG_PUTC_BIN              = $001E ; G z80_crt
OTERM_MSG_PUTC                  = $001E ; G z80_crt
OTERM_MSG_TTY                   = $001F ; G z80_crt
__code_threads_mutex_size       = $001F ; G 
OCHAR_MSG_PUTC                  = $0020 ; G z80_crt
OTERM_MSG_PRINTC                = $0020 ; G z80_crt
__CLIB_OPT_FASTCOPY_LDIR        = $0020 ; G z80_crt
__CLIB_OPT_NUM2TXT_LONG_OCT     = $0020 ; G z80_crt
__CLIB_OPT_PRINTF_n             = $0020 ; G z80_crt
__CLIB_OPT_SCANF_n              = $0020 ; G z80_crt
__CLIB_OPT_TXT2NUM_LONG_OCT     = $0020 ; G z80_crt
OTERM_MSG_SCROLL                = $0021 ; G z80_crt
OTERM_MSG_CLS                   = $0022 ; G z80_crt
__code_alloc_malloc_size        = $0022 ; G 
OTERM_MSG_PAUSE                 = $0023 ; G z80_crt
OTERM_MSG_BELL                  = $0024 ; G z80_crt
l_dec_bc                        = $0024 ; G z80_crt
OTERM_MSG_PSCROLL               = $0025 ; G z80_crt
__MESSAGE_OTERM_NEXT__          = $0026 ; G z80_crt
__code_error_size               = $0026 ; G 
__code_crt_init_size            = $0028 ; G 
CHAR_PASSWORD                   = $002A ; G z80_crt
__thread_block_timeout          = $002C ; G z80_crt
__thread_context_switch         = $002C ; G z80_crt
__thread_unblock                = $002C ; G z80_crt
l_ret                           = $002C ; G z80_crt
CHAR_CURSOR_UC                  = $002D ; G z80_crt
__MESSAGE_NEXT__                = $002D ; G z80_crt
l_jpix                          = $0031 ; G z80_crt
__ERROR_NEXT                    = $0032 ; G z80_crt
l_jphl                          = $0032 ; G z80_crt
l_jpiy                          = $0033 ; G z80_crt
__CLIB_OPT_FASTCOPY_LDIR_SMC    = $0040 ; G z80_crt
__CLIB_OPT_NUM2TXT_LONG_DEC     = $0040 ; G z80_crt
__CLIB_OPT_PRINTF_2_lli         = $0040 ; G z80_crt
__CLIB_OPT_PRINTF_i             = $0040 ; G z80_crt
__CLIB_OPT_SCANF_2_lli          = $0040 ; G z80_crt
__CLIB_OPT_SCANF_i              = $0040 ; G z80_crt
__CLIB_OPT_TXT2NUM_LONG_DEC     = $0040 ; G z80_crt
__code_math_size                = $0050 ; G 
l_setmem_hl                     = $005B ; G z80_crt
CHAR_CURSOR_LC                  = $005F ; G z80_crt
l_inc_hl                        = $0064 ; G z80_crt
__Start                         = $0068 ; G z80_crt
__Restart                       = $0069 ; L z80_crt
__CODE_size                     = $006C ; G 
__CODE_tail                     = $006C ; G 
__Restart_2                     = $006C ; L z80_crt
__code_crt_init_head            = $006C ; G 
TAR__clib_stdio_heap_size       = $0080 ; L z80_crt
__CLIB_OPT_FASTCOPY_MEMCPY_SMC  = $0080 ; G z80_crt
__CLIB_OPT_IMATH_FAST_LIA       = $0080 ; G z80_crt
__CLIB_OPT_NUM2TXT_LONG_HEX     = $0080 ; G z80_crt
__CLIB_OPT_PRINTF_p             = $0080 ; G z80_crt
__CLIB_OPT_SCANF_p              = $0080 ; G z80_crt
__CLIB_OPT_TXT2NUM_LONG_HEX     = $0080 ; G z80_crt
__bss_fcntl_size                = $0080 ; G 
__clib_stdio_heap_size          = $0080 ; L z80_crt
__bss_compiler_size             = $0090 ; G 
__code_crt_init_tail            = $0094 ; G 
__code_crt_main_head            = $0094 ; G 
__Exit                          = $0098 ; G z80_crt
__code_crt_exit_head            = $0099 ; G 
__code_crt_exit_tail            = $0099 ; G 
__code_crt_main_tail            = $0099 ; G 
__code_crt_return_head          = $0099 ; G 
__code_adt_b_array_head         = $009E ; G 
__code_adt_b_array_tail         = $009E ; G 
__code_adt_b_vector_head        = $009E ; G 
__code_adt_b_vector_tail        = $009E ; G 
__code_adt_ba_priority_queue_head = $009E ; G 
__code_adt_ba_priority_queue_tail = $009E ; G 
__code_adt_ba_stack_head        = $009E ; G 
__code_adt_ba_stack_tail        = $009E ; G 
__code_adt_bv_priority_queue_head = $009E ; G 
__code_adt_bv_priority_queue_tail = $009E ; G 
__code_adt_bv_stack_head        = $009E ; G 
__code_adt_bv_stack_tail        = $009E ; G 
__code_adt_p_forward_list_alt_head = $009E ; G 
__code_adt_p_forward_list_alt_tail = $009E ; G 
__code_adt_p_forward_list_head  = $009E ; G 
__code_adt_p_forward_list_tail  = $009E ; G 
__code_adt_p_list_head          = $009E ; G 
__code_adt_p_list_tail          = $009E ; G 
__code_adt_p_queue_head         = $009E ; G 
__code_adt_p_queue_tail         = $009E ; G 
__code_adt_p_stack_head         = $009E ; G 
__code_adt_p_stack_tail         = $009E ; G 
__code_adt_w_array_head         = $009E ; G 
__code_adt_w_array_tail         = $009E ; G 
__code_adt_w_vector_head        = $009E ; G 
__code_adt_w_vector_tail        = $009E ; G 
__code_adt_wa_priority_queue_head = $009E ; G 
__code_adt_wa_priority_queue_tail = $009E ; G 
__code_adt_wa_stack_head        = $009E ; G 
__code_adt_wa_stack_tail        = $009E ; G 
__code_adt_wv_priority_queue_head = $009E ; G 
__code_adt_wv_priority_queue_tail = $009E ; G 
__code_adt_wv_stack_head        = $009E ; G 
__code_adt_wv_stack_tail        = $009E ; G 
__code_alloc_balloc_head        = $009E ; G 
__code_alloc_balloc_tail        = $009E ; G 
__code_alloc_malloc_head        = $009E ; G 
__code_clib_head                = $009E ; G 
__code_clib_tail                = $009E ; G 
__code_crt_common_head          = $009E ; G 
__code_crt_common_tail          = $009E ; G 
__code_crt_return_tail          = $009E ; G 
__code_driver_head              = $009E ; G 
__code_driver_tail              = $009E ; G 
__code_font_head                = $009E ; G 
__code_font_tail                = $009E ; G 
asm_heap_init                   = $009E ; G asm_heap_init
__code_alloc_malloc_tail        = $00C0 ; G 
__code_alloc_obstack_head       = $00C0 ; G 
__code_alloc_obstack_tail       = $00C0 ; G 
__code_arch_head                = $00C0 ; G 
__code_arch_tail                = $00C0 ; G 
__code_bifrost2_head            = $00C0 ; G 
__code_bifrost2_tail            = $00C0 ; G 
__code_bifrost_h_head           = $00C0 ; G 
__code_bifrost_h_tail           = $00C0 ; G 
__code_bifrost_l_head           = $00C0 ; G 
__code_bifrost_l_tail           = $00C0 ; G 
__code_compress_aplib_head      = $00C0 ; G 
__code_compress_aplib_tail      = $00C0 ; G 
__code_compress_zx7_head        = $00C0 ; G 
__code_compress_zx7_tail        = $00C0 ; G 
__code_ctype_head               = $00C0 ; G 
__code_ctype_tail               = $00C0 ; G 
__code_driver_character_input_head = $00C0 ; G 
__code_driver_character_input_tail = $00C0 ; G 
__code_driver_character_output_head = $00C0 ; G 
__code_driver_character_output_tail = $00C0 ; G 
__code_driver_general_head      = $00C0 ; G 
__code_driver_general_tail      = $00C0 ; G 
__code_driver_memstream_head    = $00C0 ; G 
__code_driver_memstream_tail    = $00C0 ; G 
__code_driver_terminal_input_head = $00C0 ; G 
__code_driver_terminal_input_tail = $00C0 ; G 
__code_driver_terminal_output_head = $00C0 ; G 
__code_driver_terminal_output_tail = $00C0 ; G 
__code_driver_tty_head          = $00C0 ; G 
__code_driver_tty_tail          = $00C0 ; G 
__code_error_head               = $00C0 ; G 
error_edom_zc                   = $00C3 ; G error_edom_zc
error_enolck_zc                 = $00C3 ; G error_enolck_zc
error_erange_zc                 = $00C3 ; G error_erange_zc
errno_zc                        = $00C5 ; G errno_zc
__ch_system                     = $00D1 ; G z80_crt
error_zc                        = $00D1 ; G error_zc
error_lznc                      = $00D7 ; G error_lznc
error_znc                       = $00E0 ; G error_znc
___fsadd_callee                 = $00E6 ; G ___fsadd_callee
__code_error_tail               = $00E6 ; G 
__code_fcntl_head               = $00E6 ; G 
__code_fcntl_tail               = $00E6 ; G 
__code_font_fzx_head            = $00E6 ; G 
__code_font_fzx_tail            = $00E6 ; G 
__code_fp_genmath_head          = $00E6 ; G 
__code_fp_genmath_tail          = $00E6 ; G 
__code_fp_math48_head           = $00E6 ; G 
cm48_sdcciyp_dsadd_callee       = $00E6 ; G cm48_sdcciyp_dsadd_callee
cm48_sdcciyp_dcallee2           = $00EF ; G cm48_sdcciyp_dcallee2
cm48_sdcciyp_dx2m48             = $00FF ; G cm48_sdcciyp_d2m48
__CLIB_OPT_PRINTF_B             = $0100 ; G z80_crt
__CLIB_OPT_SCANF_B              = $0100 ; G z80_crt
cm48_sdcciyp_d2m48              = $0100 ; G cm48_sdcciyp_d2m48
IOCTL_OTERM_CLS                 = $0102 ; G z80_crt
zero                            = $010B ; L cm48_sdcciyp_d2m48
___fsdiv_callee                 = $0114 ; G ___fsdiv_callee
cm48_sdcciyp_dsdiv_callee       = $0114 ; G cm48_sdcciyp_dsdiv_callee
___fsmul_callee                 = $011E ; G ___fsmul_callee
cm48_sdcciyp_dsmul_callee       = $011E ; G cm48_sdcciyp_dsmul_callee
___fssub_callee                 = $0127 ; G ___fssub_callee
cm48_sdcciyp_dssub_callee       = $0127 ; G cm48_sdcciyp_dssub_callee
cm48_sdcciyp_m482d              = $0131 ; G cm48_sdcciyp_m482d
zero                            = $0143 ; L cm48_sdcciyp_m482d
___sint2fs_callee               = $0148 ; G ___sint2fs_callee
cm48_sdcciyp_sint2ds_callee     = $0148 ; G cm48_sdcciyp_sint2ds_callee
_atan_fastcall                  = $0151 ; G atan_fastcall
cm48_sdcciy_atan_fastcall       = $0151 ; G cm48_sdcciy_atan_fastcall
_cos_fastcall                   = $015A ; G cos_fastcall
cm48_sdcciy_cos_fastcall        = $015A ; G cm48_sdcciy_cos_fastcall
_exp_fastcall                   = $0163 ; G exp_fastcall
cm48_sdcciy_exp_fastcall        = $0163 ; G cm48_sdcciy_exp_fastcall
_log_fastcall                   = $016C ; G log_fastcall
cm48_sdcciy_log_fastcall        = $016C ; G cm48_sdcciy_log_fastcall
_sin_fastcall                   = $0175 ; G sin_fastcall
cm48_sdcciy_sin_fastcall        = $0175 ; G cm48_sdcciy_sin_fastcall
_sqrt_fastcall                  = $017E ; G sqrt_fastcall
cm48_sdcciy_sqrt_fastcall       = $017E ; G cm48_sdcciy_sqrt_fastcall
am48_double16                   = $0187 ; G am48_double16
am48_double16u                  = $0197 ; G am48_double16u
normalize_loop                  = $01A4 ; L am48_double16u
normalized                      = $01AB ; L am48_double16u
am48_double8u                   = $01B4 ; G am48_double8u
am48_double8u_0                 = $01B9 ; G am48_double8u
normalize_loop                  = $01BF ; L am48_double8u
normalized                      = $01C4 ; L am48_double8u
am48_derror_znc                 = $01CC ; G am48_derror_znc
am48_atan                       = $01D4 ; G am48_atan
mm48_atn                        = $01D4 ; G mm48_atn
mm48__atn1                      = $01EA ; L mm48_atn
mm48__atn2                      = $01F8 ; L mm48_atn
TAR__crt_stack_size             = $0200 ; L z80_crt
__CLIB_OPT_PRINTF_s             = $0200 ; G z80_crt
__CLIB_OPT_SCANF_s              = $0200 ; G z80_crt
__crt_stack_size                = $0200 ; L z80_crt
IOCTL_ITERM_TIE                 = $0201 ; G z80_crt
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G z80_crt
mm48__atn3                      = $020C ; L mm48_atn
mm48__atn4                      = $0212 ; L mm48_atn
mm48__atn5                      = $0229 ; L mm48_atn
mm48__atn6                      = $0256 ; L mm48_atn
mm48__atn7                      = $0264 ; L mm48_atn
mm48__atn8                      = $026D ; L mm48_atn
mm48__arctan                    = $0271 ; L mm48_atn
atnk                            = $027A ; L mm48_atn
arctk                           = $02AA ; L mm48_atn
mm48_cmp                        = $02C8 ; G mm48_cmp
mm48__cmp1                      = $02D2 ; L mm48_cmp
mm48__cmp2                      = $02DC ; G mm48_cmp
am48_cos                        = $02E6 ; G am48_cos
mm48_cos                        = $02E6 ; G mm48_cos
am48_exp                        = $02F4 ; G am48_exp
mm48_exp                        = $02F4 ; G mm48_exp
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G z80_crt
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G z80_crt
mm48__exp1                      = $0317 ; L mm48_exp
mm48__exp3                      = $0324 ; L mm48_exp
mm48__exp4                      = $032A ; L mm48_exp
mm48__exp5                      = $032E ; L mm48_exp
mm48__exp6                      = $0331 ; L mm48_exp
expk                            = $033F ; L mm48_exp
am48_derror_erange_pinfc        = $0369 ; G am48_derror_erange_infc
am48_derror_erange_infc         = $036D ; G am48_derror_erange_infc
am48_derror_erange_minfc        = $0376 ; G am48_derror_erange_infc
am48_derror_erange_infxc        = $037D ; G am48_derror_erange_infc
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G z80_crt
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G z80_crt
am48_dconst_inf                 = $0384 ; G am48_dconst_inf
am48_dconst_pinf                = $0388 ; G am48_dconst_inf
join                            = $038B ; L am48_dconst_inf
am48_dconst_minf                = $0390 ; G am48_dconst_inf
am48_dfix16                     = $0395 ; G am48_dfix16
am48_dfix16_0                   = $03A0 ; G am48_dfix16
am48_derror_erange_intc         = $03B7 ; G am48_derror_erange_intc
mm48_equal                      = $03C1 ; G mm48_equal
am48_dadd                       = $03C9 ; G am48_dadd
mm48_fpadd                      = $03C9 ; G mm48_fpadd
mm48__add1                      = $03CF ; G mm48_fpadd
mm48__add2                      = $03E0 ; L mm48_fpadd
mm48__add3                      = $03F5 ; L mm48_fpadd
__CLIB_OPT_PRINTF_c             = $0400 ; G z80_crt
__CLIB_OPT_SCANF_c              = $0400 ; G z80_crt
mm48__add4                      = $0400 ; L mm48_fpadd
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G z80_crt
mm48__add5                      = $0416 ; L mm48_fpadd
mm48__add6                      = $0420 ; L mm48_fpadd
mm48__add7                      = $0423 ; L mm48_fpadd
mm48__addz                      = $0431 ; L mm48_fpadd
mm48__add8                      = $0434 ; L mm48_fpadd
mm48__add9                      = $0435 ; L mm48_fpadd
mm48__add9a                     = $0439 ; L mm48_fpadd
mm48__add10                     = $043A ; G mm48_fpadd
am48_ddiv                       = $043F ; G am48_ddiv
mm48_fpdiv                      = $043F ; G mm48_fpdiv
mm48__divi1                     = $045A ; L mm48_fpdiv
mm48__divi2                     = $0463 ; L mm48_fpdiv
mm48__divi3                     = $0476 ; L mm48_fpdiv
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G z80_crt
mm48__divi4                     = $0482 ; L mm48_fpdiv
mm48__divi5                     = $048B ; L mm48_fpdiv
mm48__divi6                     = $0498 ; L mm48_fpdiv
am48_derror_edom_pinfc          = $04A1 ; G am48_derror_edom_infc
am48_derror_edom_infc           = $04A5 ; G am48_derror_edom_infc
am48_derror_edom_minfc          = $04AE ; G am48_derror_edom_infc
am48_dmul                       = $04B4 ; G am48_dmul
mm48_fpmul                      = $04B4 ; G mm48_fpmul
mm48__mul1                      = $04CF ; L mm48_fpmul
mm48__mul2                      = $04D6 ; L mm48_fpmul
mm48__mul3                      = $04DE ; L mm48_fpmul
mm48__mul4                      = $04FA ; L mm48_fpmul
mm48__mul5                      = $04FD ; G mm48_fpmul
mm48__mul5a                     = $04FE ; G mm48_fpmul
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G z80_crt
am48_dsub                       = $0515 ; G am48_dsub
mm48_fpsub                      = $0515 ; G mm48_fpsub
mm48__sub1                      = $051B ; G mm48_fpsub
am48_dneg                       = $0527 ; G am48_dneg
mm48_frac                       = $052D ; G mm48_frac
mm48_int                        = $053E ; G mm48_int
mm48__int1                      = $0552 ; L mm48_int
mm48__int2                      = $0573 ; L mm48_int
am48_log                        = $0576 ; G am48_log
mm48_ln                         = $0576 ; G mm48_ln
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G z80_crt
mm48__ln1                       = $05C2 ; L mm48_ln
lnk                             = $05D9 ; L mm48_ln
mm48_negate                     = $05FD ; G mm48_negate
IOCTL_OTERM_GET_OTERM           = $0602 ; G z80_crt
am48_sin                        = $0605 ; G am48_sin
mm48_sin                        = $0605 ; G mm48_sin
mm48__sinc                      = $0608 ; G mm48_sin
mm48__sin1a                     = $061E ; L mm48_sin
mm48__sin2                      = $0626 ; L mm48_sin
mm48__sin3                      = $0630 ; L mm48_sin
mm48__sin4                      = $063B ; L mm48_sin
mm48__sin7a                     = $0677 ; L mm48_sin
mm48__sin7                      = $0682 ; L mm48_sin
sink                            = $0686 ; L mm48_sin
mm48_mod                        = $06A4 ; G mm48_mod
am48_sqrt                       = $06AE ; G am48_sqrt
mm48_sqr                        = $06AE ; G mm48_sqr
mm48__sqr1                      = $06CB ; L mm48_sqr
am48_derror_edom_zc             = $06E9 ; G am48_derror_edom_zc
mm48__ac1                       = $06F2 ; G mm48__ac1
mm48__ac1_3                     = $06FC ; G mm48__ac1_3
IOCTL_OTERM_SCROLL              = $0702 ; G z80_crt
mm48__acln2                     = $0705 ; G mm48__acln2
mm48__acpi                      = $070F ; G mm48__acpi
mm48__acsqr2_2                  = $0719 ; G mm48__acsqr2_2
__code_fp_math48_size           = $0720 ; G 
mm48__addac                     = $0723 ; G mm48__addac
mm48__aac1                      = $0726 ; L mm48__addac
mm48__calcs                     = $073D ; G mm48__calcs
mm48__calc1                     = $0741 ; L mm48__calcs
mm48__cmpac                     = $075B ; G mm48__cmpac
mm48__comser                    = $0774 ; G mm48__comser
mm48__expsgn                    = $0789 ; G mm48__expsgn
mm48__exps3                     = $078F ; L mm48__expsgn
mm48__retzero                   = $0793 ; G mm48__expsgn
mm48__exps1                     = $0798 ; L mm48__expsgn
mm48__exps2                     = $079C ; L mm48__expsgn
mm48__getncix                   = $07B3 ; G mm48__getncix
mm48__getcix                    = $07B8 ; G mm48__getncix
__Z88DK                         = $07C8 ; G z80_crt
mm48__sleft                     = $07CB ; G mm48__sleft
mm48__left                      = $07CC ; G mm48__sleft
mm48__sright                    = $07D7 ; G mm48__sright
mm48__right                     = $07D8 ; G mm48__sright
mm48__subac                     = $07E3 ; G mm48__subac
mm48__sac1                      = $07E6 ; L mm48__subac
mm48__zero                      = $07FD ; G mm48__zero
am48_dconst_0                   = $07FE ; G am48_dconst_0
mm48__zero_no                   = $07FE ; G mm48__zero
__CLIB_OPT_PRINTF_I             = $0800 ; G z80_crt
__CLIB_OPT_SCANF_I              = $0800 ; G z80_crt
IOCTL_OTERM_FONT                = $0802 ; G z80_crt
__code_fp_math48_tail           = $0806 ; G 
__code_input_head               = $0806 ; G 
__code_input_tail               = $0806 ; G 
__code_inttypes_head            = $0806 ; G 
__code_inttypes_tail            = $0806 ; G 
__code_l_head                   = $0806 ; G 
l_neg_hl                        = $0806 ; G l_neg_hl
l_lsr_hl                        = $080E ; G l_lsr_hl
l_small_lsr_hl                  = $080E ; G l_small_lsr_hl
shift_loop                      = $0817 ; L l_small_lsr_hl
__code_l_sccz80_head            = $081E ; G 
__code_l_sccz80_tail            = $081E ; G 
__code_l_sdcc_head              = $081E ; G 
__code_l_tail                   = $081E ; G 
__mulint_callee                 = $081E ; G __mulint_callee
__mullong_callee                = $0825 ; G __mullong_callee
__code_l_sdcc_tail              = $0830 ; G 
__code_locale_head              = $0830 ; G 
__code_locale_tail              = $0830 ; G 
__code_math_head                = $0830 ; G 
l_mulu_16_16x16                 = $0830 ; G l_mulu_16_16x16
l_small_mul_16_16x16            = $0830 ; G l_small_mul_16_16x16
eight_bit_0                     = $083E ; L l_small_mul_16_16x16
eight_bit_1                     = $083F ; L l_small_mul_16_16x16
l_small_mul_16_16x8             = $083F ; G l_small_mul_16_16x16
rejoin                          = $0842 ; L l_small_mul_16_16x16
loop_0                          = $0845 ; L l_small_mul_16_16x16
loop_1                          = $084C ; L l_small_mul_16_16x16
l_mulu_32_32x32                 = $0850 ; G l_mulu_32_32x32
l_small_mul_32_32x32            = $0850 ; G l_small_mul_32_32x32
l0_small_mul_32_32x32           = $085E ; G l_small_mul_32_32x32
loop_0                          = $0861 ; L l_small_mul_32_32x32
loop_1                          = $0870 ; L l_small_mul_32_32x32
__code_math_tail                = $0880 ; G 
__code_network_head             = $0880 ; G 
__code_network_tail             = $0880 ; G 
__code_nirvanam_head            = $0880 ; G 
__code_nirvanam_tail            = $0880 ; G 
__code_nirvanap_head            = $0880 ; G 
__code_nirvanap_tail            = $0880 ; G 
__code_setjmp_head              = $0880 ; G 
__code_setjmp_tail              = $0880 ; G 
__code_sound_bit_head           = $0880 ; G 
__code_sound_bit_tail           = $0880 ; G 
__code_stdio_head               = $0880 ; G 
__code_stdio_tail               = $0880 ; G 
__code_stdlib_head              = $0880 ; G 
__code_stdlib_tail              = $0880 ; G 
__code_string_head              = $0880 ; G 
__code_string_tail              = $0880 ; G 
__code_temp_sp1_head            = $0880 ; G 
__code_temp_sp1_tail            = $0880 ; G 
__code_threads_head             = $0880 ; G 
__code_threads_mutex_head       = $0880 ; G 
__code_threads_tail             = $0880 ; G 
asm_mtx_init                    = $0880 ; G asm_mtx_init
unknown_type                    = $089A ; L asm_mtx_init
__code_compiler_head            = $089F ; G 
__code_lib_head                 = $089F ; G 
__code_lib_tail                 = $089F ; G 
__code_threads_mutex_tail       = $089F ; G 
__code_z80_head                 = $089F ; G 
__code_z80_tail                 = $089F ; G 
_main                           = $089F ; G whetstone_c
TIMER_START                     = $08BC ; L whetstone_c
l_main_00102                    = $08F5 ; L whetstone_c
l_main_00256                    = $0974 ; L whetstone_c
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G z80_crt
l_main_00125                    = $0A15 ; L whetstone_c
l_main_00258                    = $0A2E ; L whetstone_c
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G z80_crt
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G z80_crt
l_main_00103                    = $0B6C ; L whetstone_c
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G z80_crt
l_main_00128                    = $0BA6 ; L whetstone_c
l_main_00260                    = $0BBF ; L whetstone_c
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G z80_crt
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G z80_crt
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G z80_crt
l_main_00104                    = $0E04 ; L whetstone_c
l_main_00131                    = $0E0E ; L whetstone_c
l_main_00262                    = $0E27 ; L whetstone_c
l_main_00105                    = $0E44 ; L whetstone_c
l_main_00134                    = $0E51 ; L whetstone_c
l_main_00264                    = $0E6A ; L whetstone_c
l_main_00107                    = $0E81 ; L whetstone_c
l_main_00108                    = $0E87 ; L whetstone_c
l_main_00267                    = $0E96 ; L whetstone_c
l_main_00110                    = $0EA1 ; L whetstone_c
l_main_00111                    = $0EA7 ; L whetstone_c
l_main_00113                    = $0EBE ; L whetstone_c
l_main_00135                    = $0EC4 ; L whetstone_c
l_main_00115                    = $0ED8 ; L whetstone_c
l_main_00137                    = $0EF4 ; L whetstone_c
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G z80_crt
l_main_00269                    = $0F0D ; L whetstone_c
__code_compiler_size            = $0F27 ; G 
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G z80_crt
l_main_00116                    = $0FE5 ; L whetstone_c
__CLIB_OPT_PRINTF_ld            = $1000 ; G z80_crt
__CLIB_OPT_SCANF_ld             = $1000 ; G z80_crt
l_main_00140                    = $1007 ; L whetstone_c
l_main_00271                    = $1020 ; L whetstone_c
l_main_00117                    = $11D5 ; L whetstone_c
l_main_00143                    = $1203 ; L whetstone_c
l_main_00273                    = $121C ; L whetstone_c
l_main_00118                    = $124D ; L whetstone_c
l_main_00146                    = $128D ; L whetstone_c
l_main_00275                    = $12A6 ; L whetstone_c
l_main_00119                    = $12BE ; L whetstone_c
l_main_00149                    = $12D4 ; L whetstone_c
l_main_00277                    = $12ED ; L whetstone_c
l_main_00120                    = $1338 ; L whetstone_c
l_main_00152                    = $134E ; L whetstone_c
l_main_00279                    = $1367 ; L whetstone_c
l_main_00121                    = $13A2 ; L whetstone_c
l_main_00281                    = $13AA ; L whetstone_c
l_main_00282                    = $13BB ; L whetstone_c
TIMER_STOP                      = $13BE ; L whetstone_c
_PA                             = $13C6 ; G whetstone_c
l_PA_00101                      = $13D9 ; L whetstone_c
l_PA_00110                      = $166A ; L whetstone_c
_P0                             = $167F ; G whetstone_c
_P3                             = $1709 ; G whetstone_c
__code_compiler_tail            = $17C6 ; G 
__code_user_head                = $17C6 ; G 
__code_user_tail                = $17C6 ; G 
__rodata_clib_head              = $17C6 ; G 
__rodata_clib_tail              = $17C6 ; G 
__rodata_driver_head            = $17C6 ; G 
__rodata_driver_tail            = $17C6 ; G 
__rodata_error_string_end_head  = $17C6 ; G 
__rodata_error_strings_head     = $17C6 ; G 
__rodata_error_strings_tail     = $17C6 ; G 
__rodata_font_head              = $17C6 ; G 
__rodata_font_tail              = $17C6 ; G 
__CODE_END_head                 = $17C7 ; G 
__CODE_END_tail                 = $17C7 ; G 
__DATA_head                     = $17C7 ; G 
__rodata_compiler_head          = $17C7 ; G 
__rodata_compiler_tail          = $17C7 ; G 
__rodata_error_string_end_tail  = $17C7 ; G 
__rodata_fcntl_head             = $17C7 ; G 
__rodata_fcntl_tail             = $17C7 ; G 
__rodata_font_4x8_head          = $17C7 ; G 
__rodata_font_4x8_tail          = $17C7 ; G 
__rodata_font_8x8_head          = $17C7 ; G 
__rodata_font_8x8_tail          = $17C7 ; G 
__rodata_font_fzx_head          = $17C7 ; G 
__rodata_font_fzx_tail          = $17C7 ; G 
__rodata_input_head             = $17C7 ; G 
__rodata_input_tail             = $17C7 ; G 
__rodata_lib_head               = $17C7 ; G 
__rodata_lib_tail               = $17C7 ; G 
__rodata_sound_bit_head         = $17C7 ; G 
__rodata_sound_bit_tail         = $17C7 ; G 
__rodata_stdio_head             = $17C7 ; G 
__rodata_stdio_tail             = $17C7 ; G 
__rodata_stdlib_head            = $17C7 ; G 
__rodata_stdlib_tail            = $17C7 ; G 
__rodata_user_head              = $17C7 ; G 
__rodata_user_tail              = $17C7 ; G 
__DATA_tail                     = $17C8 ; G 
__data_alloc_balloc_head        = $17C8 ; G 
__data_alloc_balloc_tail        = $17C8 ; G 
__data_alloc_malloc_head        = $17C8 ; G 
__data_clib_head                = $17C8 ; G 
__data_clib_tail                = $17C8 ; G 
__data_driver_head              = $17C8 ; G 
__data_driver_tail              = $17C8 ; G 
__data_font_head                = $17C8 ; G 
__data_font_tail                = $17C8 ; G 
__malloc_heap                   = $17C8 ; G z80_crt
__smc_clib_head                 = $17C8 ; G 
__smc_clib_tail                 = $17C8 ; G 
__smc_compiler_head             = $17C8 ; G 
__smc_compiler_tail             = $17C8 ; G 
__smc_driver_head               = $17C8 ; G 
__smc_driver_tail               = $17C8 ; G 
__smc_fcntl_head                = $17C8 ; G 
__smc_fcntl_tail                = $17C8 ; G 
__smc_font_head                 = $17C8 ; G 
__smc_font_tail                 = $17C8 ; G 
__smc_l_head                    = $17C8 ; G 
__smc_l_tail                    = $17C8 ; G 
__smc_lib_head                  = $17C8 ; G 
__smc_lib_tail                  = $17C8 ; G 
__smc_sound_bit_head            = $17C8 ; G 
__smc_sound_bit_tail            = $17C8 ; G 
__smc_user_head                 = $17C8 ; G 
__smc_user_tail                 = $17C8 ; G 
__data_alloc_malloc_tail        = $17CA ; G 
__data_fcntl_head               = $17CA ; G 
__stdio_heap                    = $17CA ; G z80_crt
__data_fcntl_fdtable_body_head  = $17CC ; G 
__data_fcntl_fdtable_body_tail  = $17CC ; G 
__data_fcntl_stdio_heap_body_head = $17CC ; G 
__data_fcntl_stdio_heap_body_tail = $17CC ; G 
__data_fcntl_stdio_heap_head_head = $17CC ; G 
__data_fcntl_stdio_heap_head_tail = $17CC ; G 
__data_fcntl_stdio_heap_tail_head = $17CC ; G 
__data_fcntl_stdio_heap_tail_tail = $17CC ; G 
__data_fcntl_tail               = $17CC ; G 
__data_sound_bit_head           = $17CC ; G 
__data_sound_bit_tail           = $17CC ; G 
__data_stdio_head               = $17CC ; G 
__stdio_closed_file_list        = $17CC ; G z80_crt
__data_stdio_tail               = $17D0 ; G 
__data_stdlib_head              = $17D0 ; G 
__data_stdlib_tail              = $17D0 ; G 
__data_threads_head             = $17D0 ; G 
__thrd_id                       = $17D0 ; G z80_crt
__BSS_head                      = $17D1 ; G 
__DATA_END_head                 = $17D1 ; G 
__DATA_END_tail                 = $17D1 ; G 
__data_compiler_head            = $17D1 ; G 
__data_compiler_tail            = $17D1 ; G 
__data_lib_head                 = $17D1 ; G 
__data_lib_tail                 = $17D1 ; G 
__data_threads_tail             = $17D1 ; G 
__data_user_head                = $17D1 ; G 
__data_user_tail                = $17D1 ; G 
__BSS_UNINITIALIZED_head        = $17D2 ; G 
__BSS_UNINITIALIZED_tail        = $17D2 ; G 
__BSS_tail                      = $17D2 ; G 
__bss_alloc_balloc_head         = $17D2 ; G 
__bss_alloc_balloc_tail         = $17D2 ; G 
__bss_alloc_malloc_head         = $17D2 ; G 
__bss_alloc_malloc_tail         = $17D2 ; G 
__bss_arch_head                 = $17D2 ; G 
__bss_arch_tail                 = $17D2 ; G 
__bss_clib_head                 = $17D2 ; G 
__bss_clib_tail                 = $17D2 ; G 
__bss_compress_aplib_head       = $17D2 ; G 
__bss_compress_aplib_tail       = $17D2 ; G 
__bss_driver_head               = $17D2 ; G 
__bss_driver_tail               = $17D2 ; G 
__bss_error_head                = $17D2 ; G 
__bss_font_head                 = $17D2 ; G 
__bss_font_tail                 = $17D2 ; G 
_errno                          = $17D2 ; G _errno
__bss_error_tail                = $17D4 ; G 
__bss_fcntl_head                = $17D4 ; G 
__stdio_block                   = $17D4 ; G z80_crt
__bss_fcntl_tail                = $1854 ; G 
__bss_input_head                = $1854 ; G 
__bss_input_tail                = $1854 ; G 
__bss_sound_bit_head            = $1854 ; G 
__bss_sound_bit_tail            = $1854 ; G 
__bss_stdio_head                = $1854 ; G 
__stdio_open_file_list          = $1854 ; G z80_crt
__bss_stdio_tail                = $1856 ; G 
__bss_stdlib_head               = $1856 ; G 
__exit_stack                    = $1856 ; G z80_crt
__quickexit_stack               = $1857 ; G z80_crt
_T                              = $1858 ; G whetstone_c
__bss_compiler_head             = $1858 ; G 
__bss_lib_head                  = $1858 ; G 
__bss_lib_tail                  = $1858 ; G 
__bss_stdlib_tail               = $1858 ; G 
__bss_string_head               = $1858 ; G 
__bss_string_tail               = $1858 ; G 
_T1                             = $185C ; G whetstone_c
_T2                             = $1860 ; G whetstone_c
_E1                             = $1864 ; G whetstone_c
_J                              = $1878 ; G whetstone_c
_K                              = $187A ; G whetstone_c
_L                              = $187C ; G whetstone_c
_main_I_1_569                   = $187E ; L whetstone_c
_main_N1_1_569                  = $1882 ; L whetstone_c
_main_N2_1_569                  = $1886 ; L whetstone_c
_main_N3_1_569                  = $188A ; L whetstone_c
_main_N4_1_569                  = $188E ; L whetstone_c
_main_N6_1_569                  = $1892 ; L whetstone_c
_main_N7_1_569                  = $1896 ; L whetstone_c
_main_N8_1_569                  = $189A ; L whetstone_c
_main_N9_1_569                  = $189E ; L whetstone_c
_main_N10_1_569                 = $18A2 ; L whetstone_c
_main_N11_1_569                 = $18A6 ; L whetstone_c
_main_X1_1_569                  = $18AA ; L whetstone_c
_main_X2_1_569                  = $18AE ; L whetstone_c
_main_X3_1_569                  = $18B2 ; L whetstone_c
_main_X4_1_569                  = $18B6 ; L whetstone_c
_main_X_1_569                   = $18BA ; L whetstone_c
_main_Y_1_569                   = $18BE ; L whetstone_c
_main_Z_1_569                   = $18C2 ; L whetstone_c
_main_LOOP_1_569                = $18C6 ; L whetstone_c
_main_II_1_569                  = $18CA ; L whetstone_c
_main_JJ_1_569                  = $18CC ; L whetstone_c
_main_loopstart_1_569           = $18CE ; L whetstone_c
_main_startsec_1_569            = $18D2 ; L whetstone_c
_main_finisec_1_569             = $18D6 ; L whetstone_c
_main_KIPS_1_569                = $18DA ; L whetstone_c
_main_continuous_1_569          = $18DE ; L whetstone_c
_P3_X1_1_595                    = $18E0 ; L whetstone_c
_P3_Y1_1_595                    = $18E4 ; L whetstone_c
__BSS_END_head                  = $18E8 ; G 
__BSS_END_tail                  = $18E8 ; G 
__bss_compiler_tail             = $18E8 ; G 
__bss_user_head                 = $18E8 ; G 
__bss_user_tail                 = $18E8 ; G 
__CLIB_OPT_PRINTF_lu            = $2000 ; G z80_crt
__CLIB_OPT_SCANF_lu             = $2000 ; G z80_crt
__CLIB_OPT_PRINTF_lx            = $4000 ; G z80_crt
__CLIB_OPT_SCANF_lx             = $4000 ; G z80_crt
__CLIB_OPT_PRINTF_lX            = $8000 ; G z80_crt
__CLIB_OPT_SCANF_lX             = $8000 ; G z80_crt
IOCTL_ITERM_CAPS                = $C009 ; G z80_crt
IOCTL_ITERM_COOK                = $C011 ; G z80_crt
IOCTL_OTERM_CRLF                = $C012 ; G z80_crt
IOCTL_OCHAR_CRLF                = $C014 ; G z80_crt
IOCTL_ITERM_LINE                = $C021 ; G z80_crt
IOCTL_OTERM_COOK                = $C022 ; G z80_crt
IOCTL_ITERM_PASS                = $C041 ; G z80_crt
IOCTL_OTERM_PAUSE               = $C042 ; G z80_crt
IOCTL_ITERM_ECHO                = $C081 ; G z80_crt
IOCTL_OTERM_PAGE                = $C082 ; G z80_crt
IOCTL_ITERM_CRLF                = $C101 ; G z80_crt
IOCTL_OTERM_BELL                = $C102 ; G z80_crt
IOCTL_ICHAR_CRLF                = $C103 ; G z80_crt
IOCTL_ITERM_CURS                = $C201 ; G z80_crt
IOCTL_OTERM_SIGNAL              = $C202 ; G z80_crt
IOCTL_OTERM_CLEAR               = $E002 ; G z80_crt
__CLIB_OPT_PRINTF_lo            = $10000 ; G z80_crt
__CLIB_OPT_SCANF_lo             = $10000 ; G z80_crt
TAR__crt_on_exit                = $10001 ; L z80_crt
__crt_on_exit                   = $10001 ; L z80_crt
__CLIB_OPT_PRINTF_ln            = $20000 ; G z80_crt
__CLIB_OPT_SCANF_ln             = $20000 ; G z80_crt
__CLIB_OPT_PRINTF_li            = $40000 ; G z80_crt
__CLIB_OPT_SCANF_li             = $40000 ; G z80_crt
__CLIB_OPT_PRINTF_lp            = $80000 ; G z80_crt
__CLIB_OPT_SCANF_lp             = $80000 ; G z80_crt
__CLIB_OPT_PRINTF_lB            = $100000 ; G z80_crt
__CLIB_OPT_SCANF_lB             = $100000 ; G z80_crt
__CLIB_OPT_SCANF_BRACKET        = $200000 ; G z80_crt
__CLIB_OPT_PRINTF               = $2FF6FF ; G z80_crt
__CLIB_OPT_SCANF                = $2FF6FF ; G z80_crt
__CPU_CLOCK                     = $3D0900 ; G z80_crt
__CLIB_OPT_PRINTF_a             = $400000 ; G z80_crt
__CLIB_OPT_SCANF_a              = $400000 ; G z80_crt
__CLIB_OPT_PRINTF_A             = $800000 ; G z80_crt
__CLIB_OPT_SCANF_A              = $800000 ; G z80_crt
__CLIB_OPT_PRINTF_e             = $1000000 ; G z80_crt
__CLIB_OPT_SCANF_e              = $1000000 ; G z80_crt
__CLIB_OPT_PRINTF_E             = $2000000 ; G z80_crt
__CLIB_OPT_SCANF_E              = $2000000 ; G z80_crt
__CLIB_OPT_PRINTF_f             = $4000000 ; G z80_crt
__CLIB_OPT_SCANF_f              = $4000000 ; G z80_crt
__CLIB_OPT_PRINTF_F             = $8000000 ; G z80_crt
__CLIB_OPT_SCANF_F              = $8000000 ; G z80_crt
__CLIB_OPT_PRINTF_g             = $10000000 ; G z80_crt
__CLIB_OPT_SCANF_g              = $10000000 ; G z80_crt
__CLIB_OPT_PRINTF_G             = $20000000 ; G z80_crt
__CLIB_OPT_SCANF_G              = $20000000 ; G z80_crt
