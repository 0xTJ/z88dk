TAR__clib_malloc_heap_size      = $FFFFFFFF ; L z80_crt
TAR__crt_interrupt_mode         = $FFFFFFFF ; L z80_crt
__crt_interrupt_mode            = $FFFFFFFF ; L z80_crt
CLIB_MALLOC_HEAP_SIZE           = $0000 ; L z80_crt
CLIB_OPT_PRINTF_2               = $0000 ; L z80_crt
CLIB_STDIO_HEAP_SIZE            = $0000 ; L z80_crt
DEF__crt_enable_trap            = $0000 ; L z80_crt
IOCTL_RESET                     = $0000 ; G z80_crt
STDIO_SEEK_SET                  = $0000 ; G z80_crt
TAR__clib_balloc_table_size     = $0000 ; L z80_crt
TAR__clib_exit_stack_size       = $0000 ; L z80_crt
TAR__clib_fopen_max             = $0000 ; L z80_crt
TAR__clib_open_max              = $0000 ; L z80_crt
TAR__clib_quickexit_stack_size  = $0000 ; L z80_crt
TAR__crt_enable_commandline     = $0000 ; L z80_crt
TAR__crt_enable_nmi             = $0000 ; L z80_crt
TAR__crt_enable_restart         = $0000 ; L z80_crt
TAR__crt_enable_rst             = $0000 ; L z80_crt
TAR__crt_enable_streams         = $0000 ; L z80_crt
TAR__crt_include_preamble       = $0000 ; L z80_crt
TAR__crt_initialize_bss         = $0000 ; L z80_crt
TAR__crt_model                  = $0000 ; L z80_crt
TAR__crt_org_bss                = $0000 ; L z80_crt
TAR__crt_org_code               = $0000 ; L z80_crt
TAR__crt_org_data               = $0000 ; L z80_crt
TAR__crt_org_vector_table       = $0000 ; L z80_crt
TAR__register_sp                = $0000 ; L z80_crt
__BSS_END_size                  = $0000 ; G 
__BSS_UNINITIALIZED_size        = $0000 ; G 
__CLIB_OPT_ERROR                = $0000 ; L error_eacces_mc
__CLIB_OPT_ERROR                = $0000 ; L error_edom_mc
__CLIB_OPT_ERROR                = $0000 ; L error_einval_zc
__CLIB_OPT_ERROR                = $0000 ; L error_erange_zc
__CLIB_OPT_ERROR                = $0000 ; G z80_crt
__CLIB_OPT_FASTCOPY             = $0000 ; G z80_crt
__CLIB_OPT_IMATH                = $0000 ; L l_divu_16_16x8
__CLIB_OPT_IMATH                = $0000 ; L l_divu_32_32x32
__CLIB_OPT_IMATH                = $0000 ; L l_mulu_32_32x32
__CLIB_OPT_IMATH                = $0000 ; G z80_crt
__CLIB_OPT_IMATH_SELECT         = $0000 ; G z80_crt
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm__fflushall_unlocked
__CLIB_OPT_MULTITHREAD          = $0000 ; G z80_crt
__CLIB_OPT_NUM2TXT              = $0000 ; L asm_utoa
__CLIB_OPT_NUM2TXT              = $0000 ; G z80_crt
__CLIB_OPT_NUM2TXT_SELECT       = $0000 ; G z80_crt
__CLIB_OPT_PRINTF_2             = $0000 ; G z80_crt
__CLIB_OPT_SCANF_2              = $0000 ; G z80_crt
__CLIB_OPT_SORT_INSERTION       = $0000 ; G z80_crt
__CLIB_OPT_SORT_QSORT_PIVOT_MID = $0000 ; G z80_crt
__CLIB_OPT_STDIO                = $0000 ; L asm_fflush_unlocked
__CLIB_OPT_STDIO                = $0000 ; G z80_crt
__CLIB_OPT_STRTOD               = $0000 ; G z80_crt
__CLIB_OPT_TXT2NUM_SELECT       = $0000 ; L l_atou
__CLIB_OPT_TXT2NUM_SELECT       = $0000 ; G z80_crt
__CODE_END_size                 = $0000 ; G 
__CODE_head                     = $0000 ; G 
__CPU_INFO                      = $0000 ; G z80_crt
__CRTCFG                        = $0000 ; L z80_crt
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G z80_crt
__MAX_FOPEN                     = $0000 ; G z80_crt
__MAX_OPEN                      = $0000 ; G z80_crt
__MMAP                          = $0000 ; L z80_crt
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L z80_crt
__clib_exit_stack_size          = $0000 ; L z80_crt
__clib_fopen_max                = $0000 ; G z80_crt
__clib_malloc_heap_size         = $0000 ; L z80_crt
__clib_open_max                 = $0000 ; G z80_crt
__clib_quickexit_stack_size     = $0000 ; L z80_crt
__clib_stdio_heap_size          = $0000 ; L z80_crt
__code_adt_b_array_size         = $0000 ; G 
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_malloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_arch_size                = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_common_size          = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_crt_init_size            = $0000 ; G 
__code_driver_character_input_size = $0000 ; G 
__code_driver_character_output_size = $0000 ; G 
__code_driver_general_size      = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_terminal_input_size = $0000 ; G 
__code_driver_terminal_output_size = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_fcntl_size               = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_fp_math48_size           = $0000 ; G 
__code_input_size               = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sdcc_size              = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_sound_bit_size           = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_mutex_size       = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_user_size                = $0000 ; G 
__code_vector_head              = $0000 ; G 
__code_vector_size              = $0000 ; G 
__code_vector_tail              = $0000 ; G 
__code_z80_size                 = $0000 ; G 
__crt_enable_commandline        = $0000 ; L z80_crt
__crt_enable_nmi                = $0000 ; L z80_crt
__crt_enable_restart            = $0000 ; L z80_crt
__crt_enable_rst                = $0000 ; L z80_crt
__crt_include_preamble          = $0000 ; L z80_crt
__crt_initialize_bss            = $0000 ; L z80_crt
__crt_model                     = $0000 ; L z80_crt
__crt_org_bss                   = $0000 ; L z80_crt
__crt_org_code                  = $0000 ; L z80_crt
__crt_org_data                  = $0000 ; L z80_crt
__crt_org_vector_table          = $0000 ; L z80_crt
__data_alloc_balloc_size        = $0000 ; G 
__data_alloc_malloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_compiler_size            = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_fcntl_fdtable_body_size  = $0000 ; G 
__data_fcntl_size               = $0000 ; G 
__data_fcntl_stdio_heap_body_size = $0000 ; G 
__data_fcntl_stdio_heap_head_size = $0000 ; G 
__data_fcntl_stdio_heap_tail_size = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_sound_bit_size           = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__exit_stack_size               = $0000 ; G z80_crt
__fcntl_fdtbl                   = $0000 ; G z80_crt
__fcntl_fdtbl_size              = $0000 ; G z80_crt
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G z80_crt
__register_sp                   = $0000 ; L z80_crt
__rodata_clib_size              = $0000 ; G 
__rodata_compiler_size          = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_error_strings_size     = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_4x8_size          = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_input_size             = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_stdlib_size            = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__size                          = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
__tail                          = $0000 ; G 
startup                         = $0000 ; L z80_crt
thrd_success                    = $0000 ; G z80_crt
CLIB_OPT_PRINTF                 = $0001 ; L z80_crt
DEFINED_CLIB_MALLOC_HEAP_SIZE   = $0001 ; L z80_crt
DEFINED_CLIB_OPT_PRINTF         = $0001 ; L z80_crt
DEFINED_CLIB_STDIO_HEAP_SIZE    = $0001 ; L z80_crt
DEFINED_startup                 = $0001 ; L z80_crt
NEED_floatpack                  = $0001 ; L z80_crt
STDIO_MSG_PUTC                  = $0001 ; G z80_crt
STDIO_SEEK_CUR                  = $0001 ; L asm_fflush_unlocked
STDIO_SEEK_CUR                  = $0001 ; G z80_crt
TAR__crt_enable_close           = $0001 ; L z80_crt
__BSS_size                      = $0001 ; G 
__CLIB_OPT_ERROR_ENABLED        = $0001 ; G z80_crt
__CLIB_OPT_FASTCOPY_MEMCPY      = $0001 ; G z80_crt
__CLIB_OPT_IMATH_FAST_DIV_UNROLL = $0001 ; G z80_crt
__CLIB_OPT_IMATH_SELECT_FAST_ASR = $0001 ; G z80_crt
__CLIB_OPT_MULTITHREAD_LOCK_HEAPS = $0001 ; G z80_crt
__CLIB_OPT_NUM2TXT_INT_BIN      = $0001 ; G z80_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_BIN = $0001 ; G z80_crt
__CLIB_OPT_PRINTF_2_lld         = $0001 ; G z80_crt
__CLIB_OPT_PRINTF_d             = $0001 ; G z80_crt
__CLIB_OPT_SCANF_2_lld          = $0001 ; G z80_crt
__CLIB_OPT_SCANF_d              = $0001 ; G z80_crt
__CLIB_OPT_SORT                 = $0001 ; G z80_crt
__CLIB_OPT_SORT_QSORT_PIVOT_RAN = $0001 ; G z80_crt
__CLIB_OPT_SORT_SHELL           = $0001 ; G z80_crt
__CLIB_OPT_STDIO_VALID          = $0001 ; G z80_crt
__CLIB_OPT_STRTOD_INF           = $0001 ; G z80_crt
__CLIB_OPT_STRTOD_NAN           = $0001 ; G z80_crt
__CLIB_OPT_TXT2NUM_INT_BIN      = $0001 ; G z80_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_BIN = $0001 ; G z80_crt
__CPU_INFO_ENABLE_SLL           = $0001 ; G z80_crt
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G z80_crt
__EMBEDDED_Z80                  = $0001 ; G z80_crt
__SCCZ80                        = $0001 ; L z80_crt
__Z80                           = $0001 ; G z80_crt
__Z80_NMOS                      = $0001 ; G z80_crt
__crt_enable_close              = $0001 ; L z80_crt
__data_threads_size             = $0001 ; G 
__page_zero_present             = $0001 ; L z80_crt
__rodata_error_string_end_size  = $0001 ; G 
mtx_plain                       = $0001 ; G z80_crt
thrd_error                      = $0001 ; G z80_crt
STDIO_MSG_WRIT                  = $0002 ; G z80_crt
STDIO_SEEK_END                  = $0002 ; G z80_crt
__CLIB_OPT_ERROR_VERBOSE        = $0002 ; G z80_crt
__CLIB_OPT_FASTCOPY_MEMSET      = $0002 ; G z80_crt
__CLIB_OPT_IMATH_FAST_DIV_LZEROS = $0002 ; G z80_crt
__CLIB_OPT_IMATH_SELECT_FAST_LSR = $0002 ; G z80_crt
__CLIB_OPT_MULTITHREAD_LOCK_FILES = $0002 ; G z80_crt
__CLIB_OPT_NUM2TXT_INT_OCT      = $0002 ; G z80_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_OCT = $0002 ; G z80_crt
__CLIB_OPT_PRINTF_2_llu         = $0002 ; G z80_crt
__CLIB_OPT_PRINTF_u             = $0002 ; G z80_crt
__CLIB_OPT_SCANF_2_llu          = $0002 ; G z80_crt
__CLIB_OPT_SCANF_u              = $0002 ; G z80_crt
__CLIB_OPT_SORT_QUICK           = $0002 ; G z80_crt
__CLIB_OPT_STRTOD_HEX           = $0002 ; G z80_crt
__CLIB_OPT_TXT2NUM_INT_OCT      = $0002 ; G z80_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_OCT = $0002 ; G z80_crt
__EBADF                         = $0002 ; G z80_crt
__Z80_CMOS                      = $0002 ; G z80_crt
__bss_error_size                = $0002 ; G 
__bss_stdio_size                = $0002 ; G 
__bss_stdlib_size               = $0002 ; G 
mtx_recursive                   = $0002 ; G z80_crt
thrd_nomem                      = $0002 ; G z80_crt
CHAR_CTRL_C                     = $0003 ; G z80_crt
DEF__crt_enforce_snames         = $0003 ; L z80_crt
STDIO_MSG_GETC                  = $0003 ; G z80_crt
__CLIB_OPT_SORT_QSORT_PIVOT     = $0003 ; G z80_crt
__EBDFD                         = $0003 ; G z80_crt
__crt_enforce_snames            = $0003 ; L z80_crt
CHAR_CTRL_D                     = $0004 ; G z80_crt
STDIO_MSG_EATC                  = $0004 ; G z80_crt
__CLIB_OPT_IMATH_FAST_MUL_UNROLL = $0004 ; G z80_crt
__CLIB_OPT_IMATH_SELECT_FAST_LSL = $0004 ; G z80_crt
__CLIB_OPT_MULTITHREAD_LOCK_FLIST = $0004 ; G z80_crt
__CLIB_OPT_NUM2TXT_INT_DEC      = $0004 ; G z80_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_DEC = $0004 ; G z80_crt
__CLIB_OPT_PRINTF_2_llx         = $0004 ; G z80_crt
__CLIB_OPT_PRINTF_x             = $0004 ; G z80_crt
__CLIB_OPT_SCANF_2_llx          = $0004 ; G z80_crt
__CLIB_OPT_SCANF_x              = $0004 ; G z80_crt
__CLIB_OPT_SORT_QSORT_ENABLE_INSERTION = $0004 ; G z80_crt
__CLIB_OPT_TXT2NUM              = $0004 ; G z80_crt
__CLIB_OPT_TXT2NUM_INT_DEC      = $0004 ; G z80_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_DEC = $0004 ; G z80_crt
__EDOM                          = $0004 ; G z80_crt
__data_stdio_size               = $0004 ; G 
mtx_timed                       = $0004 ; G z80_crt
thrd_busy                       = $0004 ; G z80_crt
STDIO_MSG_READ                  = $0005 ; G z80_crt
__EFBIG                         = $0005 ; G z80_crt
__code_crt_main_size            = $0005 ; G 
__code_crt_return_size          = $0005 ; G 
CHAR_CAPS                       = $0006 ; G z80_crt
STDIO_MSG_SEEK                  = $0006 ; L asm_fflush_unlocked
STDIO_MSG_SEEK                  = $0006 ; G z80_crt
__EINVAL                        = $0006 ; G z80_crt
__code_adt_p_forward_list_size  = $0006 ; G 
CHAR_BELL                       = $0007 ; G z80_crt
STDIO_MSG_ICTL                  = $0007 ; G z80_crt
__EMFILE                        = $0007 ; G z80_crt
STDIO_MSG_FLSH                  = $0008 ; L asm_fflush_unlocked
STDIO_MSG_FLSH                  = $0008 ; G z80_crt
__CLIB_OPT_IMATH_FAST_MUL_LZEROS = $0008 ; G z80_crt
__CLIB_OPT_MULTITHREAD_LOCK_FDTBL = $0008 ; G z80_crt
__CLIB_OPT_NUM2TXT_INT_HEX      = $0008 ; G z80_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_HEX = $0008 ; G z80_crt
__CLIB_OPT_PRINTF_2_llX         = $0008 ; G z80_crt
__CLIB_OPT_PRINTF_X             = $0008 ; G z80_crt
__CLIB_OPT_SCANF_2_llX          = $0008 ; G z80_crt
__CLIB_OPT_SCANF_X              = $0008 ; G z80_crt
__CLIB_OPT_SORT_QSORT_ENABLE_EQUAL = $0008 ; G z80_crt
__CLIB_OPT_TXT2NUM_INT_HEX      = $0008 ; G z80_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_HEX = $0008 ; G z80_crt
__ENFILE                        = $0008 ; G z80_crt
thrd_timedout                   = $0008 ; G z80_crt
STDIO_MSG_CLOS                  = $0009 ; G z80_crt
__ENOLCK                        = $0009 ; G z80_crt
__code_ctype_size               = $0009 ; G 
CHAR_LF                         = $000A ; G z80_crt
__ENOMEM                        = $000A ; G z80_crt
__ENOTSUP                       = $000B ; G z80_crt
CHAR_BS                         = $000C ; G z80_crt
__CLIB_OPT_SORT_QSORT           = $000C ; G z80_crt
__EOVERFLOW                     = $000C ; G z80_crt
CHAR_CR                         = $000D ; G z80_crt
__ERANGE                        = $000D ; G z80_crt
__ESTAT                         = $000E ; G z80_crt
ICHAR_MSG_GETC                  = $000F ; G z80_crt
ITERM_MSG_GETC                  = $000F ; G z80_crt
__CLIB_OPT_IMATH_FAST           = $000F ; G z80_crt
__EAGAIN                        = $000F ; G z80_crt
__EWOULDBLOCK                   = $000F ; G z80_crt
ITERM_MSG_INTERRUPT             = $0010 ; G z80_crt
__CLIB_OPT_MULTITHREAD_LOCK_FDSTR = $0010 ; G z80_crt
__CLIB_OPT_NUM2TXT_LONG_BIN     = $0010 ; G z80_crt
__CLIB_OPT_PRINTF_2_llo         = $0010 ; G z80_crt
__CLIB_OPT_PRINTF_o             = $0010 ; G z80_crt
__CLIB_OPT_SCANF_2_llo          = $0010 ; G z80_crt
__CLIB_OPT_SCANF_o              = $0010 ; G z80_crt
__CLIB_OPT_TXT2NUM_LONG_BIN     = $0010 ; G z80_crt
ITERM_MSG_PUTC                  = $0011 ; G z80_crt
ITERM_MSG_PRINT_CURSOR          = $0012 ; G z80_crt
ITERM_MSG_ERASE_CURSOR          = $0013 ; G z80_crt
TAR__crt_enable_eidi            = $0013 ; L z80_crt
__crt_enable_eidi               = $0013 ; L z80_crt
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G z80_crt
ITERM_MSG_BS                    = $0015 ; G z80_crt
ITERM_MSG_BS_PWD                = $0016 ; G z80_crt
ITERM_MSG_READLINE_BEGIN        = $0017 ; G z80_crt
ITERM_MSG_READLINE_END          = $0018 ; G z80_crt
ITERM_MSG_BELL                  = $0019 ; G z80_crt
CHAR_CTRL_Z                     = $001A ; G z80_crt
__MESSAGE_ITERM_NEXT__          = $001A ; G z80_crt
__code_string_size              = $001A ; G 
CHAR_ESC                        = $001B ; G z80_crt
l_dec_de                        = $001C ; G z80_crt
OCHAR_MSG_PUTC_BIN              = $001E ; G z80_crt
OTERM_MSG_PUTC                  = $001E ; G z80_crt
OTERM_MSG_TTY                   = $001F ; G z80_crt
OCHAR_MSG_PUTC                  = $0020 ; G z80_crt
OTERM_MSG_PRINTC                = $0020 ; G z80_crt
__CLIB_OPT_FASTCOPY_LDIR        = $0020 ; G z80_crt
__CLIB_OPT_NUM2TXT_LONG_OCT     = $0020 ; G z80_crt
__CLIB_OPT_PRINTF_n             = $0020 ; G z80_crt
__CLIB_OPT_SCANF_n              = $0020 ; G z80_crt
__CLIB_OPT_TXT2NUM_LONG_OCT     = $0020 ; G z80_crt
OTERM_MSG_SCROLL                = $0021 ; G z80_crt
OTERM_MSG_CLS                   = $0022 ; G z80_crt
OTERM_MSG_PAUSE                 = $0023 ; G z80_crt
OTERM_MSG_BELL                  = $0024 ; G z80_crt
l_dec_bc                        = $0024 ; G z80_crt
OTERM_MSG_PSCROLL               = $0025 ; G z80_crt
__MESSAGE_OTERM_NEXT__          = $0026 ; G z80_crt
CHAR_PASSWORD                   = $002A ; G z80_crt
__code_stdlib_size              = $002B ; G 
__thread_block_timeout          = $002C ; G z80_crt
__thread_context_switch         = $002C ; G z80_crt
__thread_unblock                = $002C ; G z80_crt
l_ret                           = $002C ; G z80_crt
CHAR_CURSOR_UC                  = $002D ; G z80_crt
__MESSAGE_NEXT__                = $002D ; G z80_crt
__code_l_sccz80_size            = $0031 ; G 
l_jpix                          = $0031 ; G z80_crt
__ERROR_NEXT                    = $0032 ; G z80_crt
l_jphl                          = $0032 ; G z80_crt
l_jpiy                          = $0033 ; G z80_crt
__code_error_size               = $0034 ; G 
__CLIB_OPT_FASTCOPY_LDIR_SMC    = $0040 ; G z80_crt
__CLIB_OPT_NUM2TXT_LONG_DEC     = $0040 ; G z80_crt
__CLIB_OPT_PRINTF_2_lli         = $0040 ; G z80_crt
__CLIB_OPT_PRINTF_i             = $0040 ; G z80_crt
__CLIB_OPT_SCANF_2_lli          = $0040 ; G z80_crt
__CLIB_OPT_SCANF_i              = $0040 ; G z80_crt
__CLIB_OPT_TXT2NUM_LONG_DEC     = $0040 ; G z80_crt
l_setmem_hl                     = $005B ; G z80_crt
CHAR_CURSOR_LC                  = $005F ; G z80_crt
l_inc_hl                        = $0064 ; G z80_crt
__Start                         = $0068 ; G z80_crt
__Restart                       = $0069 ; L z80_crt
__CODE_size                     = $006C ; G 
__CODE_tail                     = $006C ; G 
__Restart_2                     = $006C ; L z80_crt
__code_crt_init_head            = $006C ; G 
__code_crt_init_tail            = $006C ; G 
__code_crt_main_head            = $006C ; G 
__Exit                          = $0070 ; G z80_crt
__code_l_size                   = $0070 ; G 
__code_crt_exit_head            = $0071 ; G 
__code_crt_exit_tail            = $0071 ; G 
__code_crt_main_tail            = $0071 ; G 
__code_crt_return_head          = $0071 ; G 
__code_adt_b_array_head         = $0076 ; G 
__code_adt_b_array_tail         = $0076 ; G 
__code_adt_b_vector_head        = $0076 ; G 
__code_adt_b_vector_tail        = $0076 ; G 
__code_adt_ba_priority_queue_head = $0076 ; G 
__code_adt_ba_priority_queue_tail = $0076 ; G 
__code_adt_ba_stack_head        = $0076 ; G 
__code_adt_ba_stack_tail        = $0076 ; G 
__code_adt_bv_priority_queue_head = $0076 ; G 
__code_adt_bv_priority_queue_tail = $0076 ; G 
__code_adt_bv_stack_head        = $0076 ; G 
__code_adt_bv_stack_tail        = $0076 ; G 
__code_adt_p_forward_list_head  = $0076 ; G 
__code_clib_head                = $0076 ; G 
__code_clib_tail                = $0076 ; G 
__code_crt_common_head          = $0076 ; G 
__code_crt_common_tail          = $0076 ; G 
__code_crt_return_tail          = $0076 ; G 
__code_driver_head              = $0076 ; G 
__code_driver_tail              = $0076 ; G 
__code_font_head                = $0076 ; G 
__code_font_tail                = $0076 ; G 
asm_p_forward_list_front        = $0076 ; G asm_p_forward_list_front
asm_p_forward_list_next         = $0076 ; G asm_p_forward_list_next
__code_adt_p_forward_list_alt_head = $007C ; G 
__code_adt_p_forward_list_alt_tail = $007C ; G 
__code_adt_p_forward_list_tail  = $007C ; G 
__code_adt_p_list_head          = $007C ; G 
__code_adt_p_list_tail          = $007C ; G 
__code_adt_p_queue_head         = $007C ; G 
__code_adt_p_queue_tail         = $007C ; G 
__code_adt_p_stack_head         = $007C ; G 
__code_adt_p_stack_tail         = $007C ; G 
__code_adt_w_array_head         = $007C ; G 
__code_adt_w_array_tail         = $007C ; G 
__code_adt_w_vector_head        = $007C ; G 
__code_adt_w_vector_tail        = $007C ; G 
__code_adt_wa_priority_queue_head = $007C ; G 
__code_adt_wa_priority_queue_tail = $007C ; G 
__code_adt_wa_stack_head        = $007C ; G 
__code_adt_wa_stack_tail        = $007C ; G 
__code_adt_wv_priority_queue_head = $007C ; G 
__code_adt_wv_priority_queue_tail = $007C ; G 
__code_adt_wv_stack_head        = $007C ; G 
__code_adt_wv_stack_tail        = $007C ; G 
__code_alloc_balloc_head        = $007C ; G 
__code_alloc_balloc_tail        = $007C ; G 
__code_alloc_malloc_head        = $007C ; G 
__code_alloc_malloc_tail        = $007C ; G 
__code_alloc_obstack_head       = $007C ; G 
__code_alloc_obstack_tail       = $007C ; G 
__code_arch_head                = $007C ; G 
__code_arch_tail                = $007C ; G 
__code_bifrost2_head            = $007C ; G 
__code_bifrost2_tail            = $007C ; G 
__code_bifrost_h_head           = $007C ; G 
__code_bifrost_h_tail           = $007C ; G 
__code_bifrost_l_head           = $007C ; G 
__code_bifrost_l_tail           = $007C ; G 
__code_compress_aplib_head      = $007C ; G 
__code_compress_aplib_tail      = $007C ; G 
__code_compress_zx7_head        = $007C ; G 
__code_compress_zx7_tail        = $007C ; G 
__code_ctype_head               = $007C ; G 
asm_tolower                     = $007C ; G asm_tolower
TAR__clib_stdio_heap_size       = $0080 ; L z80_crt
__CLIB_OPT_FASTCOPY_MEMCPY_SMC  = $0080 ; G z80_crt
__CLIB_OPT_IMATH_FAST_LIA       = $0080 ; G z80_crt
__CLIB_OPT_NUM2TXT_LONG_HEX     = $0080 ; G z80_crt
__CLIB_OPT_PRINTF_p             = $0080 ; G z80_crt
__CLIB_OPT_SCANF_p              = $0080 ; G z80_crt
__CLIB_OPT_TXT2NUM_LONG_HEX     = $0080 ; G z80_crt
__code_ctype_tail               = $0085 ; G 
__code_driver_character_input_head = $0085 ; G 
__code_driver_character_input_tail = $0085 ; G 
__code_driver_character_output_head = $0085 ; G 
__code_driver_character_output_tail = $0085 ; G 
__code_driver_general_head      = $0085 ; G 
__code_driver_general_tail      = $0085 ; G 
__code_driver_memstream_head    = $0085 ; G 
__code_driver_memstream_tail    = $0085 ; G 
__code_driver_terminal_input_head = $0085 ; G 
__code_driver_terminal_input_tail = $0085 ; G 
__code_driver_terminal_output_head = $0085 ; G 
__code_driver_terminal_output_tail = $0085 ; G 
__code_driver_tty_head          = $0085 ; G 
__code_driver_tty_tail          = $0085 ; G 
__code_error_head               = $0085 ; G 
error_einval_zc                 = $0088 ; G error_einval_zc
error_erange_zc                 = $0088 ; G error_erange_zc
errno_zc                        = $008A ; G errno_zc
__ch_system                     = $0096 ; G z80_crt
error_zc                        = $0096 ; G error_zc
error_divide_by_zero_mc         = $009E ; G error_divide_by_zero_mc
error_eacces_mc                 = $009E ; G error_eacces_mc
error_edom_mc                   = $009E ; G error_edom_mc
errno_mc                        = $00A0 ; G errno_mc
error_mc                        = $00AB ; G error_mc
error_znc                       = $00B3 ; G error_znc
__code_math_size                = $00B8 ; G 
__code_error_tail               = $00B9 ; G 
__code_fcntl_head               = $00B9 ; G 
__code_fcntl_tail               = $00B9 ; G 
__code_font_fzx_head            = $00B9 ; G 
__code_font_fzx_tail            = $00B9 ; G 
__code_fp_genmath_head          = $00B9 ; G 
__code_fp_genmath_tail          = $00B9 ; G 
__code_fp_math48_head           = $00B9 ; G 
__code_fp_math48_tail           = $00B9 ; G 
__code_input_head               = $00B9 ; G 
__code_input_tail               = $00B9 ; G 
__code_inttypes_head            = $00B9 ; G 
__code_inttypes_tail            = $00B9 ; G 
__code_l_head                   = $00B9 ; G 
l_atou                          = $00B9 ; G l_atou
l_small_atou                    = $00B9 ; G l_small_atou
loop                            = $00BE ; L l_small_atou
overflow                        = $00DE ; L l_small_atou
l_neg_hl                        = $00E1 ; G l_neg_hl
l_utod_hl                       = $00E9 ; G l_utod_hl
l_long_add                      = $00F0 ; G l_long_add
l_long_add_stack                = $00F0 ; G l_long_add_stack
l_addu_hl_de                    = $00FB ; G l_addu_hl_de
__CLIB_OPT_PRINTF_B             = $0100 ; G z80_crt
__CLIB_OPT_SCANF_B              = $0100 ; G z80_crt
l_maxu_bc_hl                    = $0101 ; G l_maxu_bc_hl
IOCTL_OTERM_CLS                 = $0102 ; G z80_crt
bc_larger                       = $0109 ; L l_maxu_bc_hl
l_addu_hl_bc                    = $010C ; G l_addu_hl_bc
l_num2char                      = $0112 ; G l_num2char
alpha                           = $0119 ; L l_num2char
l_valid_base                    = $011C ; G l_valid_base
__code_l_sccz80_head            = $0129 ; G 
__code_l_tail                   = $0129 ; G 
l_gintsp                        = $0129 ; G l_gintsp
l_gint                          = $012C ; G l_gint
l_gintsp_gint                   = $012C ; G l_gintsp
l_pint_pop                      = $0131 ; G l_pint_pop
__code_compiler_size            = $0132 ; G 
l_pint                          = $0134 ; G l_pint
l_pint_pop_pint                 = $0134 ; G l_pint_pop
l_ult                           = $013A ; G l_ult
l_compare_result                = $0144 ; G l_compare_result
l_long_div_u                    = $014A ; G l_long_div_u
l_long_mult                     = $0152 ; G l_long_mult
__code_l_sccz80_tail            = $015A ; G 
__code_l_sdcc_head              = $015A ; G 
__code_l_sdcc_tail              = $015A ; G 
__code_locale_head              = $015A ; G 
__code_locale_tail              = $015A ; G 
__code_math_head                = $015A ; G 
l_divu_32_32x32                 = $015B ; G l_divu_32_32x32
l_small_divu_32_32x32           = $015B ; G l_small_divu_32_32x32
l0_divu_32_32x32                = $0161 ; G l_divu_32_32x32
l0_small_divu_32_32x32          = $0161 ; G l_small_divu_32_32x32
l1_small_divu_32_32x32          = $016F ; G l_small_divu_32_32x32
loop_0                          = $0172 ; L l_small_divu_32_32x32
loop_1                          = $018E ; L l_small_divu_32_32x32
divide_zero                     = $01A3 ; L l_small_divu_32_32x32
l_mulu_32_32x32                 = $01A7 ; G l_mulu_32_32x32
l_small_mul_32_32x32            = $01A7 ; G l_small_mul_32_32x32
l0_small_mul_32_32x32           = $01B5 ; G l_small_mul_32_32x32
loop_0                          = $01B8 ; L l_small_mul_32_32x32
loop_1                          = $01C7 ; L l_small_mul_32_32x32
l_small_divu_16_16x16           = $01D8 ; G l_small_divu_16_16x16
l0_small_divu_16_16x16          = $01DC ; G l_small_divu_16_16x16
divisor_sixteen_bit             = $01E0 ; L l_small_divu_16_16x16
loop_16_0                       = $01E6 ; L l_small_divu_16_16x16
loop_16_1                       = $01EE ; L l_small_divu_16_16x16
l_divu_16_16x8                  = $01F8 ; G l_divu_16_16x8
l_small_divu_16_16x8            = $01F8 ; G l_small_divu_16_16x16
l0_divu_16_16x8                 = $01FC ; G l_divu_16_16x8
l0_small_divu_16_16x8           = $01FC ; G l_small_divu_16_16x16
TAR__crt_stack_size             = $0200 ; L z80_crt
__CLIB_OPT_PRINTF_s             = $0200 ; G z80_crt
__CLIB_OPT_SCANF_s              = $0200 ; G z80_crt
loop_8_0                        = $0200 ; L l_small_divu_16_16x16
IOCTL_ITERM_TIE                 = $0201 ; G z80_crt
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G z80_crt
loop_8_2                        = $0207 ; L l_small_divu_16_16x16
loop_8_1                        = $0209 ; L l_small_divu_16_16x16
divide_zero                     = $020E ; L l_small_divu_16_16x16
__code_math_tail                = $0212 ; G 
__code_network_head             = $0212 ; G 
__code_network_tail             = $0212 ; G 
__code_nirvanam_head            = $0212 ; G 
__code_nirvanam_tail            = $0212 ; G 
__code_nirvanap_head            = $0212 ; G 
__code_nirvanap_tail            = $0212 ; G 
__code_setjmp_head              = $0212 ; G 
__code_setjmp_tail              = $0212 ; G 
__code_sound_bit_head           = $0212 ; G 
__code_sound_bit_tail           = $0212 ; G 
__code_stdio_head               = $0212 ; G 
asm1_vfprintf_unlocked          = $0212 ; G z80_crt
asm_vfprintf_unlocked           = $0212 ; G z80_crt
asm0_vfprintf_unlocked          = $0216 ; G z80_crt
format_loop_printf              = $0221 ; L z80_crt
__format_loop_printf            = $0223 ; L z80_crt
format_end_printf               = $0245 ; L z80_crt
flag_chars_printf               = $0252 ; L z80_crt
interpret_printf                = $025C ; L z80_crt
flags_printf                    = $025F ; L z80_crt
flags_id_printf                 = $0266 ; L z80_crt
width_printf                    = $0270 ; L z80_crt
width_positive_printf           = $0286 ; L z80_crt
flag_found_printf               = $028B ; L z80_crt
width_from_format_printf        = $0290 ; L z80_crt
precision_printf                = $029D ; L z80_crt
precision_positive_printf       = $02C1 ; L z80_crt
precision_from_format_printf    = $02C6 ; L z80_crt
end_precision_printf            = $02D1 ; L z80_crt
length_modifier_printf          = $02D3 ; L z80_crt
converter_specifier_printf      = $02D6 ; L z80_crt
common_spec_printf              = $02E8 ; L z80_crt
unrecognized_printf             = $02E8 ; L z80_crt
long_spec_printf                = $02F1 ; L z80_crt
printf_return_is_2              = $02F5 ; L z80_crt
printf_invoke_flags             = $02F8 ; L z80_crt
skip_00_printf                  = $0300 ; L z80_crt
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G z80_crt
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G z80_crt
skip_11_printf                  = $0308 ; L z80_crt
printf_invoke                   = $030D ; L z80_crt
match_con_printf                = $032D ; L z80_crt
match_ret_printf                = $0339 ; L z80_crt
rcon_tbl_printf                 = $0341 ; L z80_crt
printf_return_4                 = $0346 ; L z80_crt
__code_stdio_size               = $0347 ; G 
_return_join_4_printf           = $0347 ; L z80_crt
printf_return_2                 = $034B ; L z80_crt
_return_join_2_printf           = $034C ; L z80_crt
error_format_precision_printf   = $035A ; L z80_crt
error_format_width_printf       = $035B ; L z80_crt
error_stream_printf             = $035E ; L z80_crt
__error_stream_printf           = $0361 ; L z80_crt
error_printf_converter_printf   = $036F ; L z80_crt
__stdio_length_modifier         = $0374 ; G __stdio_length_modifier
lm_loop                         = $037A ; L __stdio_length_modifier
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G z80_crt
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G z80_crt
lm_found                        = $0384 ; L __stdio_length_modifier
lm_double                       = $038D ; L __stdio_length_modifier
lm_chars                        = $0396 ; L __stdio_length_modifier
__stdio_nextarg_de              = $03A2 ; G __stdio_nextarg_de
__stdio_verify_output           = $03A7 ; G __stdio_verify_output
errors                          = $03C4 ; L __stdio_verify_output
asm_fflush_unlocked             = $03CC ; G asm_fflush_unlocked
asm0_fflush_unlocked            = $03D3 ; G asm_fflush_unlocked
asm1_fflush_unlocked            = $03D3 ; G asm_fflush_unlocked
last_was_read                   = $03E0 ; L asm_fflush_unlocked
forward_flush                   = $03FD ; L asm_fflush_unlocked
last_was_write                  = $03FD ; L asm_fflush_unlocked
__CLIB_OPT_PRINTF_c             = $0400 ; G z80_crt
__CLIB_OPT_SCANF_c              = $0400 ; G z80_crt
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G z80_crt
asm__fflushall_unlocked         = $0408 ; G asm__fflushall_unlocked
file_loop                       = $040B ; L asm__fflushall_unlocked
__stdio_printf_d                = $0419 ; G __stdio_printf_d
__stdio_printf_number_tail_int  = $041F ; G __stdio_printf_number_tail_int
__stdio_printf_number_tail_uint = $0433 ; G __stdio_printf_number_tail_int
signed_join                     = $043A ; L __stdio_printf_number_tail_int
__stdio_nextarg_hl              = $0447 ; G __stdio_nextarg_hl
__stdio_printf_number_tail_zero = $044D ; G __stdio_printf_number_tail
__stdio_printf_number_tail      = $045A ; G __stdio_printf_number_tail
internal_required               = $046E ; L __stdio_printf_number_tail
no_sign                         = $0476 ; L __stdio_printf_number_tail
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G z80_crt
no_base_indicator               = $0484 ; L __stdio_printf_number_tail
external_required               = $048C ; L __stdio_printf_number_tail
number_zero                     = $048D ; L __stdio_printf_number_tail
spacing_ok                      = $049D ; L __stdio_printf_number_tail
right_justify                   = $04A4 ; L __stdio_printf_number_tail
out_internal                    = $04AC ; L __stdio_printf_number_tail
hex_base                        = $04CC ; L __stdio_printf_number_tail
octal_base                      = $04D7 ; L __stdio_printf_number_tail
no_base_indicator_2             = $04D8 ; L __stdio_printf_number_tail
no_prefix_chars                 = $04E5 ; L __stdio_printf_number_tail
stream_error                    = $04EA ; L __stdio_printf_number_tail
num_is_zero                     = $04FF ; L __stdio_printf_number_tail
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G z80_crt
left_justify                    = $0503 ; L __stdio_printf_number_tail
__stdio_printf_sign             = $050D ; G __stdio_printf_sign
__stdio_printf_sign_0           = $0510 ; G __stdio_printf_sign
not_negative                    = $0517 ; L __stdio_printf_sign
not_plus                        = $051E ; L __stdio_printf_sign
__stdio_printf_padding_precision_hl = $0524 ; G __stdio_send_output
__stdio_printf_padding_precision = $0526 ; G __stdio_send_output
__stdio_printf_padding_precision_bc = $0526 ; G __stdio_send_output
__stdio_printf_padding_width_hl = $052A ; G __stdio_send_output
__stdio_printf_padding_width    = $052C ; G __stdio_send_output
__stdio_printf_padding_width_bc = $052C ; G __stdio_send_output
__stdio_send_output_chars       = $052E ; G __stdio_send_output
__stdio_send_output_buffer      = $0535 ; G __stdio_send_output
__stdio_send_output             = $053A ; G __stdio_send_output
exit                            = $054A ; L __stdio_send_output
error_detected                  = $054F ; L __stdio_send_output
__code_stdio_tail               = $0559 ; G 
__code_stdlib_head              = $0559 ; G 
asm_utoa                        = $0559 ; G asm_utoa
asm0_utoa                       = $055E ; G asm_utoa
asm1_utoa                       = $0564 ; G asm_utoa
compute_lp                      = $056B ; L asm_utoa
write_lp                        = $057D ; L asm_utoa
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G z80_crt
__code_stdlib_tail              = $0584 ; G 
__code_string_head              = $0584 ; G 
asm_strchrnul                   = $0584 ; G asm_strchrnul
loop                            = $0584 ; L asm_strchrnul
asm__memlwr                     = $058E ; G asm__memlwr
loop                            = $0592 ; L asm__memlwr
TIMER_START                     = $059E ; L pi
__code_compiler_head            = $059E ; G 
__code_lib_head                 = $059E ; G 
__code_lib_tail                 = $059E ; G 
__code_string_tail              = $059E ; G 
__code_temp_sp1_head            = $059E ; G 
__code_temp_sp1_tail            = $059E ; G 
__code_threads_head             = $059E ; G 
__code_threads_mutex_head       = $059E ; G 
__code_threads_mutex_tail       = $059E ; G 
__code_threads_tail             = $059E ; G 
__code_z80_head                 = $059E ; G 
__code_z80_tail                 = $059E ; G 
_main                           = $059E ; G pi
i_3                             = $05AA ; L pi
i_5                             = $05B1 ; L pi
i_4                             = $05D2 ; L pi
i_6                             = $05DB ; L pi
i_8                             = $05E5 ; L pi
i_9                             = $05FF ; L pi
IOCTL_OTERM_GET_OTERM           = $0602 ; G z80_crt
i_11                            = $067C ; L pi
i_10                            = $0698 ; L pi
TIMER_STOP                      = $06CC ; L pi
i_7                             = $06CC ; L pi
__code_compiler_tail            = $06D0 ; G 
__code_user_head                = $06D0 ; G 
__code_user_tail                = $06D0 ; G 
__rodata_clib_head              = $06D0 ; G 
__rodata_clib_tail              = $06D0 ; G 
__rodata_driver_head            = $06D0 ; G 
__rodata_driver_tail            = $06D0 ; G 
__rodata_error_string_end_head  = $06D0 ; G 
__rodata_error_strings_head     = $06D0 ; G 
__rodata_error_strings_tail     = $06D0 ; G 
__rodata_font_head              = $06D0 ; G 
__rodata_font_tail              = $06D0 ; G 
__CODE_END_head                 = $06D1 ; G 
__CODE_END_tail                 = $06D1 ; G 
__DATA_head                     = $06D1 ; G 
__rodata_compiler_head          = $06D1 ; G 
__rodata_compiler_tail          = $06D1 ; G 
__rodata_error_string_end_tail  = $06D1 ; G 
__rodata_fcntl_head             = $06D1 ; G 
__rodata_fcntl_tail             = $06D1 ; G 
__rodata_font_4x8_head          = $06D1 ; G 
__rodata_font_4x8_tail          = $06D1 ; G 
__rodata_font_8x8_head          = $06D1 ; G 
__rodata_font_8x8_tail          = $06D1 ; G 
__rodata_font_fzx_head          = $06D1 ; G 
__rodata_font_fzx_tail          = $06D1 ; G 
__rodata_input_head             = $06D1 ; G 
__rodata_input_tail             = $06D1 ; G 
__rodata_lib_head               = $06D1 ; G 
__rodata_lib_tail               = $06D1 ; G 
__rodata_sound_bit_head         = $06D1 ; G 
__rodata_sound_bit_tail         = $06D1 ; G 
__rodata_stdio_head             = $06D1 ; G 
__rodata_stdio_tail             = $06D1 ; G 
__rodata_stdlib_head            = $06D1 ; G 
__rodata_stdlib_tail            = $06D1 ; G 
__rodata_user_head              = $06D1 ; G 
__rodata_user_tail              = $06D1 ; G 
__DATA_tail                     = $06D2 ; G 
__data_alloc_balloc_head        = $06D2 ; G 
__data_alloc_balloc_tail        = $06D2 ; G 
__data_alloc_malloc_head        = $06D2 ; G 
__data_alloc_malloc_tail        = $06D2 ; G 
__data_clib_head                = $06D2 ; G 
__data_clib_tail                = $06D2 ; G 
__data_driver_head              = $06D2 ; G 
__data_driver_tail              = $06D2 ; G 
__data_fcntl_fdtable_body_head  = $06D2 ; G 
__data_fcntl_fdtable_body_tail  = $06D2 ; G 
__data_fcntl_head               = $06D2 ; G 
__data_fcntl_stdio_heap_body_head = $06D2 ; G 
__data_fcntl_stdio_heap_body_tail = $06D2 ; G 
__data_fcntl_stdio_heap_head_head = $06D2 ; G 
__data_fcntl_stdio_heap_head_tail = $06D2 ; G 
__data_fcntl_stdio_heap_tail_head = $06D2 ; G 
__data_fcntl_stdio_heap_tail_tail = $06D2 ; G 
__data_fcntl_tail               = $06D2 ; G 
__data_font_head                = $06D2 ; G 
__data_font_tail                = $06D2 ; G 
__data_sound_bit_head           = $06D2 ; G 
__data_sound_bit_tail           = $06D2 ; G 
__data_stdio_head               = $06D2 ; G 
__smc_clib_head                 = $06D2 ; G 
__smc_clib_tail                 = $06D2 ; G 
__smc_compiler_head             = $06D2 ; G 
__smc_compiler_tail             = $06D2 ; G 
__smc_driver_head               = $06D2 ; G 
__smc_driver_tail               = $06D2 ; G 
__smc_fcntl_head                = $06D2 ; G 
__smc_fcntl_tail                = $06D2 ; G 
__smc_font_head                 = $06D2 ; G 
__smc_font_tail                 = $06D2 ; G 
__smc_l_head                    = $06D2 ; G 
__smc_l_tail                    = $06D2 ; G 
__smc_lib_head                  = $06D2 ; G 
__smc_lib_tail                  = $06D2 ; G 
__smc_sound_bit_head            = $06D2 ; G 
__smc_sound_bit_tail            = $06D2 ; G 
__smc_user_head                 = $06D2 ; G 
__smc_user_tail                 = $06D2 ; G 
__stdio_closed_file_list        = $06D2 ; G z80_crt
__data_stdio_tail               = $06D6 ; G 
__data_stdlib_head              = $06D6 ; G 
__data_stdlib_tail              = $06D6 ; G 
__data_threads_head             = $06D6 ; G 
__thrd_id                       = $06D6 ; G z80_crt
__BSS_head                      = $06D7 ; G 
__DATA_END_head                 = $06D7 ; G 
__DATA_END_tail                 = $06D7 ; G 
__data_compiler_head            = $06D7 ; G 
__data_compiler_tail            = $06D7 ; G 
__data_lib_head                 = $06D7 ; G 
__data_lib_tail                 = $06D7 ; G 
__data_threads_tail             = $06D7 ; G 
__data_user_head                = $06D7 ; G 
__data_user_tail                = $06D7 ; G 
__BSS_UNINITIALIZED_head        = $06D8 ; G 
__BSS_UNINITIALIZED_tail        = $06D8 ; G 
__BSS_tail                      = $06D8 ; G 
__bss_alloc_balloc_head         = $06D8 ; G 
__bss_alloc_balloc_tail         = $06D8 ; G 
__bss_alloc_malloc_head         = $06D8 ; G 
__bss_alloc_malloc_tail         = $06D8 ; G 
__bss_arch_head                 = $06D8 ; G 
__bss_arch_tail                 = $06D8 ; G 
__bss_clib_head                 = $06D8 ; G 
__bss_clib_tail                 = $06D8 ; G 
__bss_compress_aplib_head       = $06D8 ; G 
__bss_compress_aplib_tail       = $06D8 ; G 
__bss_driver_head               = $06D8 ; G 
__bss_driver_tail               = $06D8 ; G 
__bss_error_head                = $06D8 ; G 
__bss_font_head                 = $06D8 ; G 
__bss_font_tail                 = $06D8 ; G 
_errno                          = $06D8 ; G _errno
__bss_error_tail                = $06DA ; G 
__bss_fcntl_head                = $06DA ; G 
__bss_fcntl_tail                = $06DA ; G 
__bss_input_head                = $06DA ; G 
__bss_input_tail                = $06DA ; G 
__bss_sound_bit_head            = $06DA ; G 
__bss_sound_bit_tail            = $06DA ; G 
__bss_stdio_head                = $06DA ; G 
__stdio_open_file_list          = $06DA ; G z80_crt
__bss_stdio_tail                = $06DC ; G 
__bss_stdlib_head               = $06DC ; G 
__exit_stack                    = $06DC ; G z80_crt
__quickexit_stack               = $06DD ; G z80_crt
__bss_compiler_head             = $06DE ; G 
__bss_lib_head                  = $06DE ; G 
__bss_lib_tail                  = $06DE ; G 
__bss_stdlib_tail               = $06DE ; G 
__bss_string_head               = $06DE ; G 
__bss_string_tail               = $06DE ; G 
_dummy                          = $06DE ; L pi
_st_main_r                      = $06E0 ; L pi
IOCTL_OTERM_SCROLL              = $0702 ; G z80_crt
__Z88DK                         = $07C8 ; G z80_crt
__CLIB_OPT_PRINTF_I             = $0800 ; G z80_crt
__CLIB_OPT_SCANF_I              = $0800 ; G z80_crt
IOCTL_OTERM_FONT                = $0802 ; G z80_crt
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G z80_crt
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G z80_crt
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G z80_crt
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G z80_crt
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G z80_crt
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G z80_crt
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G z80_crt
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G z80_crt
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G z80_crt
__CLIB_OPT_PRINTF_ld            = $1000 ; G z80_crt
__CLIB_OPT_SCANF_ld             = $1000 ; G z80_crt
__bss_compiler_size             = $15F0 ; G 
_st_main_i                      = $1CC2 ; L pi
_st_main_k                      = $1CC4 ; L pi
_st_main_b                      = $1CC6 ; L pi
_st_main_d                      = $1CC8 ; L pi
_st_main_c                      = $1CCC ; L pi
__BSS_END_head                  = $1CCE ; G 
__BSS_END_tail                  = $1CCE ; G 
__bss_compiler_tail             = $1CCE ; G 
__bss_user_head                 = $1CCE ; G 
__bss_user_tail                 = $1CCE ; G 
__CLIB_OPT_PRINTF_lu            = $2000 ; G z80_crt
__CLIB_OPT_SCANF_lu             = $2000 ; G z80_crt
__CLIB_OPT_PRINTF_lx            = $4000 ; G z80_crt
__CLIB_OPT_SCANF_lx             = $4000 ; G z80_crt
__CLIB_OPT_PRINTF_lX            = $8000 ; G z80_crt
__CLIB_OPT_SCANF_lX             = $8000 ; G z80_crt
IOCTL_ITERM_CAPS                = $C009 ; G z80_crt
IOCTL_ITERM_COOK                = $C011 ; G z80_crt
IOCTL_OTERM_CRLF                = $C012 ; G z80_crt
IOCTL_OCHAR_CRLF                = $C014 ; G z80_crt
IOCTL_ITERM_LINE                = $C021 ; G z80_crt
IOCTL_OTERM_COOK                = $C022 ; G z80_crt
IOCTL_ITERM_PASS                = $C041 ; G z80_crt
IOCTL_OTERM_PAUSE               = $C042 ; G z80_crt
IOCTL_ITERM_ECHO                = $C081 ; G z80_crt
IOCTL_OTERM_PAGE                = $C082 ; G z80_crt
IOCTL_ITERM_CRLF                = $C101 ; G z80_crt
IOCTL_OTERM_BELL                = $C102 ; G z80_crt
IOCTL_ICHAR_CRLF                = $C103 ; G z80_crt
IOCTL_ITERM_CURS                = $C201 ; G z80_crt
IOCTL_OTERM_SIGNAL              = $C202 ; G z80_crt
IOCTL_OTERM_CLEAR               = $E002 ; G z80_crt
__CLIB_OPT_PRINTF_lo            = $10000 ; G z80_crt
__CLIB_OPT_SCANF_lo             = $10000 ; G z80_crt
TAR__crt_on_exit                = $10001 ; L z80_crt
__crt_on_exit                   = $10001 ; L z80_crt
__CLIB_OPT_PRINTF_ln            = $20000 ; G z80_crt
__CLIB_OPT_SCANF_ln             = $20000 ; G z80_crt
__CLIB_OPT_PRINTF_li            = $40000 ; G z80_crt
__CLIB_OPT_SCANF_li             = $40000 ; G z80_crt
__CLIB_OPT_PRINTF_lp            = $80000 ; G z80_crt
__CLIB_OPT_SCANF_lp             = $80000 ; G z80_crt
__CLIB_OPT_PRINTF_lB            = $100000 ; G z80_crt
__CLIB_OPT_SCANF_lB             = $100000 ; G z80_crt
__CLIB_OPT_SCANF_BRACKET        = $200000 ; G z80_crt
__CLIB_OPT_PRINTF               = $2FF6FF ; G z80_crt
__CLIB_OPT_SCANF                = $2FF6FF ; G z80_crt
__CPU_CLOCK                     = $3D0900 ; G z80_crt
__CLIB_OPT_PRINTF_a             = $400000 ; G z80_crt
__CLIB_OPT_SCANF_a              = $400000 ; G z80_crt
__CLIB_OPT_PRINTF_A             = $800000 ; G z80_crt
__CLIB_OPT_SCANF_A              = $800000 ; G z80_crt
__CLIB_OPT_PRINTF_e             = $1000000 ; G z80_crt
__CLIB_OPT_SCANF_e              = $1000000 ; G z80_crt
__CLIB_OPT_PRINTF_E             = $2000000 ; G z80_crt
__CLIB_OPT_SCANF_E              = $2000000 ; G z80_crt
__CLIB_OPT_PRINTF_f             = $4000000 ; G z80_crt
__CLIB_OPT_SCANF_f              = $4000000 ; G z80_crt
__CLIB_OPT_PRINTF_F             = $8000000 ; G z80_crt
__CLIB_OPT_SCANF_F              = $8000000 ; G z80_crt
__CLIB_OPT_PRINTF_g             = $10000000 ; G z80_crt
__CLIB_OPT_SCANF_g              = $10000000 ; G z80_crt
__CLIB_OPT_PRINTF_G             = $20000000 ; G z80_crt
__CLIB_OPT_SCANF_G              = $20000000 ; G z80_crt
