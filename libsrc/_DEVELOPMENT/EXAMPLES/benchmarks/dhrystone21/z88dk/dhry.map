TAR__clib_malloc_heap_size      = $FFFFFFFF ; L zx_crt
TAR__crt_interrupt_mode         = $FFFFFFFF ; L zx_crt
__clib_malloc_heap_size         = $FFFFFFFF ; L zx_crt
__crt_interrupt_mode            = $FFFFFFFF ; L zx_crt
CLIB_OPT_PRINTF_2               = $0000 ; L zx_crt
CLIB_OPT_SCANF_2                = $0000 ; L zx_crt
DEF__crt_enable_trap            = $0000 ; L zx_crt
IOCTL_RESET                     = $0000 ; G zx_crt
SP1V_DISPORIGX                  = $0000 ; G zx_crt
SP1V_DISPORIGY                  = $0000 ; G zx_crt
STDIO_SEEK_SET                  = $0000 ; G zx_crt
TAR__clib_balloc_table_size     = $0000 ; L zx_crt
TAR__clib_exit_stack_size       = $0000 ; L zx_crt
TAR__clib_fopen_max             = $0000 ; L zx_crt
TAR__clib_open_max              = $0000 ; L zx_crt
TAR__clib_quickexit_stack_size  = $0000 ; L zx_crt
TAR__crt_enable_commandline     = $0000 ; L zx_crt
TAR__crt_enable_nmi             = $0000 ; L zx_crt
TAR__crt_enable_restart         = $0000 ; L zx_crt
TAR__crt_enable_rst             = $0000 ; L zx_crt
TAR__crt_include_preamble       = $0000 ; L zx_crt
TAR__crt_initialize_bss         = $0000 ; L zx_crt
TAR__crt_model                  = $0000 ; L zx_crt
TAR__crt_org_bss                = $0000 ; L zx_crt
TAR__crt_org_data               = $0000 ; L zx_crt
TAR__crt_org_vector_table       = $0000 ; L zx_crt
__BIFROST2_HOLE_SIZE            = $0000 ; G zx_crt
__BIFROSTH_SHIFT_COLUMNS        = $0000 ; G zx_crt
__BIFROSTH_SPRITE_MODE          = $0000 ; G zx_crt
__BSS_END_size                  = $0000 ; G 
__CLIB_OPT_ERROR                = $0000 ; L error_eacces_mc
__CLIB_OPT_ERROR                = $0000 ; L error_ebdfd_zc
__CLIB_OPT_ERROR                = $0000 ; L error_edom_mc
__CLIB_OPT_ERROR                = $0000 ; L error_edom_zc
__CLIB_OPT_ERROR                = $0000 ; L error_einval_zc
__CLIB_OPT_ERROR                = $0000 ; L error_enolck_zc
__CLIB_OPT_ERROR                = $0000 ; L error_enotsup_mc
__CLIB_OPT_ERROR                = $0000 ; L error_enotsup_zc
__CLIB_OPT_ERROR                = $0000 ; L error_erange_mc
__CLIB_OPT_ERROR                = $0000 ; L error_erange_zc
__CLIB_OPT_ERROR                = $0000 ; G zx_crt
__CLIB_OPT_FASTCOPY             = $0000 ; L asm_memset
__CLIB_OPT_FASTCOPY             = $0000 ; G zx_crt
__CLIB_OPT_IMATH                = $0000 ; L l_divs_16_16x16
__CLIB_OPT_IMATH                = $0000 ; L l_divu_16_16x8
__CLIB_OPT_IMATH                = $0000 ; L l_mulu_16_16x16
__CLIB_OPT_IMATH                = $0000 ; L l_mulu_24_16x8
__CLIB_OPT_IMATH                = $0000 ; G zx_crt
__CLIB_OPT_IMATH_SELECT         = $0000 ; G zx_crt
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm__fflushall_unlocked
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm_vioctl
__CLIB_OPT_MULTITHREAD          = $0000 ; L printf
__CLIB_OPT_MULTITHREAD          = $0000 ; L scanf
__CLIB_OPT_MULTITHREAD          = $0000 ; G zx_crt
__CLIB_OPT_NUM2TXT              = $0000 ; L asm_utoa
__CLIB_OPT_NUM2TXT              = $0000 ; G zx_crt
__CLIB_OPT_NUM2TXT_SELECT       = $0000 ; G zx_crt
__CLIB_OPT_PRINTF_2             = $0000 ; G zx_crt
__CLIB_OPT_SCANF_2              = $0000 ; G zx_crt
__CLIB_OPT_SORT_INSERTION       = $0000 ; G zx_crt
__CLIB_OPT_SORT_QSORT_PIVOT_MID = $0000 ; G zx_crt
__CLIB_OPT_STDIO                = $0000 ; L asm_fflush_unlocked
__CLIB_OPT_STDIO                = $0000 ; G zx_crt
__CLIB_OPT_STRTOD               = $0000 ; G zx_crt
__CLIB_OPT_TXT2NUM_SELECT       = $0000 ; L l_atou
__CLIB_OPT_TXT2NUM_SELECT       = $0000 ; G zx_crt
__CODE_END_size                 = $0000 ; G 
__CPU_INFO                      = $0000 ; G zx_crt
__CRTCFG                        = $0000 ; L zx_crt
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G zx_crt
__IGNORE_head                   = $0000 ; G 
__IGNORE_size                   = $0000 ; G 
__IGNORE_tail                   = $0000 ; G 
__MMAP                          = $0000 ; L zx_crt
__NIRVANAM_HOLE_SIZE            = $0000 ; G zx_crt
__NIRVANAM_OPTIONS              = $0000 ; G zx_crt
__NIRVANAP_HOLE_SIZE            = $0000 ; G zx_crt
__NIRVANAP_OPTIONS              = $0000 ; G zx_crt
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_stdio_size                = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L zx_crt
__clib_exit_stack_size          = $0000 ; L zx_crt
__clib_fopen_max                = $0000 ; G zx_crt
__clib_open_max                 = $0000 ; G zx_crt
__clib_quickexit_stack_size     = $0000 ; L zx_crt
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_common_size          = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_driver_character_output_size = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sccz80_size            = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_user_size                = $0000 ; G 
__code_vector_head              = $0000 ; G 
__code_vector_size              = $0000 ; G 
__code_vector_tail              = $0000 ; G 
__crt_enable_commandline        = $0000 ; L zx_crt
__crt_enable_restart            = $0000 ; L zx_crt
__crt_include_preamble          = $0000 ; L zx_crt
__crt_initialize_bss            = $0000 ; L zx_crt
__crt_model                     = $0000 ; L zx_crt
__crt_org_bss                   = $0000 ; L zx_crt
__crt_org_data                  = $0000 ; L zx_crt
__crt_org_vector_table          = $0000 ; L zx_crt
__data_alloc_balloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__exit_stack_size               = $0000 ; G zx_crt
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G zx_crt
__rodata_clib_size              = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_error_strings_size     = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__size                          = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
__tail                          = $0000 ; G 
thrd_success                    = $0000 ; G zx_crt
CLIB_OPT_SCANF                  = $0001 ; L zx_crt
DEFINED_CLIB_OPT_PRINTF         = $0001 ; L zx_crt
DEFINED_CLIB_OPT_SCANF          = $0001 ; L zx_crt
DEFINED_Z88DK_USES_SDCC         = $0001 ; L zx_crt
DEFINED_startup                 = $0001 ; L zx_crt
STDIO_MSG_PUTC                  = $0001 ; G zx_crt
STDIO_SEEK_CUR                  = $0001 ; L asm_fflush_unlocked
STDIO_SEEK_CUR                  = $0001 ; G zx_crt
TAR__crt_enable_close           = $0001 ; L zx_crt
TAR__crt_enable_eidi            = $0001 ; L zx_crt
Z88DK_USES_SDCC                 = $0001 ; L zx_crt
__BSS_size                      = $0001 ; G 
__CLIB_OPT_ERROR_ENABLED        = $0001 ; G zx_crt
__CLIB_OPT_FASTCOPY_MEMCPY      = $0001 ; G zx_crt
__CLIB_OPT_IMATH_FAST_DIV_UNROLL = $0001 ; G zx_crt
__CLIB_OPT_IMATH_SELECT_FAST_ASR = $0001 ; G zx_crt
__CLIB_OPT_MULTITHREAD_LOCK_HEAPS = $0001 ; G zx_crt
__CLIB_OPT_NUM2TXT_INT_BIN      = $0001 ; G zx_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_BIN = $0001 ; G zx_crt
__CLIB_OPT_PRINTF_2_lld         = $0001 ; G zx_crt
__CLIB_OPT_PRINTF_d             = $0001 ; G zx_crt
__CLIB_OPT_SCANF_2_lld          = $0001 ; G zx_crt
__CLIB_OPT_SCANF_d              = $0001 ; G zx_crt
__CLIB_OPT_SORT                 = $0001 ; G zx_crt
__CLIB_OPT_SORT_QSORT_PIVOT_RAN = $0001 ; G zx_crt
__CLIB_OPT_SORT_SHELL           = $0001 ; G zx_crt
__CLIB_OPT_STDIO_VALID          = $0001 ; G zx_crt
__CLIB_OPT_STRTOD_INF           = $0001 ; G zx_crt
__CLIB_OPT_STRTOD_NAN           = $0001 ; G zx_crt
__CLIB_OPT_TXT2NUM_INT_BIN      = $0001 ; G zx_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_BIN = $0001 ; G zx_crt
__CPU_INFO_ENABLE_SLL           = $0001 ; G zx_crt
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G zx_crt
__NIRVANAM_OPTIONS_WIDE_DRAW    = $0001 ; G zx_crt
__NIRVANAP_OPTIONS_WIDE_DRAW    = $0001 ; G zx_crt
__SDCC                          = $0001 ; L __stdio_nextarg_bc
__SDCC                          = $0001 ; L __stdio_nextarg_de
__SDCC                          = $0001 ; L __stdio_nextarg_hl
__SDCC                          = $0001 ; L __stdio_printf_f
__SDCC                          = $0001 ; L __stdio_varg
__SDCC                          = $0001 ; L zx_crt
__SDCC_IY                       = $0001 ; L __stdio_nextarg_bc
__SDCC_IY                       = $0001 ; L __stdio_nextarg_de
__SDCC_IY                       = $0001 ; L __stdio_nextarg_hl
__SDCC_IY                       = $0001 ; L __stdio_varg
__SDCC_IY                       = $0001 ; L zx_crt
__SOUND_BIT_METHOD              = $0001 ; L asm_bit_beep_raw
__SOUND_BIT_METHOD              = $0001 ; G zx_crt
__SPECTRUM                      = $0001 ; G zx_crt
__SPECTRUM_48                   = $0001 ; G zx_crt
__Z80                           = $0001 ; G zx_crt
__Z80_NMOS                      = $0001 ; G zx_crt
__crt_enable_close              = $0001 ; L zx_crt
__crt_enable_eidi               = $0001 ; L zx_crt
__data_sound_bit_size           = $0001 ; G 
__data_threads_size             = $0001 ; G 
__rodata_error_string_end_size  = $0001 ; G 
mtx_plain                       = $0001 ; G zx_crt
thrd_error                      = $0001 ; G zx_crt
STDIO_MSG_WRIT                  = $0002 ; G zx_crt
STDIO_SEEK_END                  = $0002 ; G zx_crt
__BSS_UNINITIALIZED_size        = $0002 ; G 
__CLIB_OPT_ERROR_VERBOSE        = $0002 ; G zx_crt
__CLIB_OPT_FASTCOPY_MEMSET      = $0002 ; G zx_crt
__CLIB_OPT_IMATH_FAST_DIV_LZEROS = $0002 ; G zx_crt
__CLIB_OPT_IMATH_SELECT_FAST_LSR = $0002 ; G zx_crt
__CLIB_OPT_MULTITHREAD_LOCK_FILES = $0002 ; G zx_crt
__CLIB_OPT_NUM2TXT_INT_OCT      = $0002 ; G zx_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_OCT = $0002 ; G zx_crt
__CLIB_OPT_PRINTF_2_llu         = $0002 ; G zx_crt
__CLIB_OPT_PRINTF_u             = $0002 ; G zx_crt
__CLIB_OPT_SCANF_2_llu          = $0002 ; G zx_crt
__CLIB_OPT_SCANF_u              = $0002 ; G zx_crt
__CLIB_OPT_SORT_QUICK           = $0002 ; G zx_crt
__CLIB_OPT_STRTOD_HEX           = $0002 ; G zx_crt
__CLIB_OPT_TXT2NUM_INT_OCT      = $0002 ; G zx_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_OCT = $0002 ; G zx_crt
__EBADF                         = $0002 ; G zx_crt
__NIRVANAM_OPTIONS_WIDE_SPRITES = $0002 ; G zx_crt
__NIRVANAP_OPTIONS_WIDE_SPRITES = $0002 ; G zx_crt
__SPECTRUM_128                  = $0002 ; G zx_crt
__Z80_CMOS                      = $0002 ; G zx_crt
__bss_error_size                = $0002 ; G 
__bss_stdlib_size               = $0002 ; G 
__data_alloc_malloc_size        = $0002 ; G 
__data_compiler_size            = $0002 ; G 
__data_fcntl_size               = $0002 ; G 
__data_fcntl_stdio_heap_tail_size = $0002 ; G 
mtx_recursive                   = $0002 ; G zx_crt
thrd_nomem                      = $0002 ; G zx_crt
CHAR_CTRL_C                     = $0003 ; G zx_crt
DEF__crt_enforce_snames         = $0003 ; L zx_crt
STDIO_MSG_GETC                  = $0003 ; L character_00_input_stdio_msg_read
STDIO_MSG_GETC                  = $0003 ; G zx_crt
__CLIB_OPT_SORT_QSORT_PIVOT     = $0003 ; G zx_crt
__EBDFD                         = $0003 ; G zx_crt
__MAX_FOPEN                     = $0003 ; G zx_crt
__MAX_OPEN                      = $0003 ; G zx_crt
__crt_enforce_snames            = $0003 ; L zx_crt
__fcntl_fdtbl_size              = $0003 ; G zx_crt
CHAR_CTRL_D                     = $0004 ; L zx_01_input_inkey_iterm_msg_getc
CHAR_CTRL_D                     = $0004 ; G zx_crt
STDIO_MSG_EATC                  = $0004 ; G zx_crt
__BIFROST2_ANIM_GROUP           = $0004 ; G zx_crt
__BIFROSTH_ANIM_GROUP           = $0004 ; G zx_crt
__BIFROSTH_ANIM_SPEED           = $0004 ; G zx_crt
__BIFROSTL_ANIM_GROUP           = $0004 ; G zx_crt
__BIFROSTL_ANIM_SPEED           = $0004 ; G zx_crt
__CLIB_OPT_IMATH_FAST_MUL_UNROLL = $0004 ; G zx_crt
__CLIB_OPT_IMATH_SELECT_FAST_LSL = $0004 ; G zx_crt
__CLIB_OPT_MULTITHREAD_LOCK_FLIST = $0004 ; G zx_crt
__CLIB_OPT_NUM2TXT_INT_DEC      = $0004 ; G zx_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_DEC = $0004 ; G zx_crt
__CLIB_OPT_PRINTF_2_llx         = $0004 ; G zx_crt
__CLIB_OPT_PRINTF_x             = $0004 ; G zx_crt
__CLIB_OPT_SCANF_2_llx          = $0004 ; G zx_crt
__CLIB_OPT_SCANF_x              = $0004 ; G zx_crt
__CLIB_OPT_SORT_QSORT_ENABLE_INSERTION = $0004 ; G zx_crt
__CLIB_OPT_TXT2NUM              = $0004 ; L __strtou__
__CLIB_OPT_TXT2NUM              = $0004 ; G zx_crt
__CLIB_OPT_TXT2NUM_INT_DEC      = $0004 ; G zx_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_DEC = $0004 ; G zx_crt
__EDOM                          = $0004 ; G zx_crt
__SOUND_BIT_TOGGLE_POS          = $0004 ; L asm_bit_beep_raw
__SOUND_BIT_TOGGLE_POS          = $0004 ; G zx_crt
__SPECTRUM_128_P2               = $0004 ; G zx_crt
__code_crt_main_size            = $0004 ; G 
mtx_timed                       = $0004 ; G zx_crt
startup                         = $0004 ; L zx_crt
thrd_busy                       = $0004 ; G zx_crt
STDIO_MSG_READ                  = $0005 ; G zx_crt
__EFBIG                         = $0005 ; G zx_crt
CHAR_CAPS                       = $0006 ; L console_01_input_proc_getc
CHAR_CAPS                       = $0006 ; G zx_crt
STDIO_MSG_SEEK                  = $0006 ; L asm_fflush_unlocked
STDIO_MSG_SEEK                  = $0006 ; G zx_crt
__EINVAL                        = $0006 ; G zx_crt
__code_adt_p_forward_list_size  = $0006 ; G 
__data_fcntl_fdtable_body_size  = $0006 ; G 
__data_fcntl_stdio_heap_head_size = $0006 ; G 
CHAR_BELL                       = $0007 ; L console_01_output_char_oterm_msg_putc
CHAR_BELL                       = $0007 ; G zx_crt
STDIO_MSG_ICTL                  = $0007 ; L asm_vioctl
STDIO_MSG_ICTL                  = $0007 ; G zx_crt
TAR__crt_enable_streams         = $0007 ; L zx_crt
__BIFROST2_TILE_ORDER           = $0007 ; G zx_crt
__BIFROSTH_TILE_ORDER           = $0007 ; G zx_crt
__BIFROSTL_TILE_ORDER           = $0007 ; G zx_crt
__EMFILE                        = $0007 ; G zx_crt
STDIO_MSG_FLSH                  = $0008 ; L asm_fflush_unlocked
STDIO_MSG_FLSH                  = $0008 ; G zx_crt
__CLIB_OPT_IMATH_FAST_MUL_LZEROS = $0008 ; G zx_crt
__CLIB_OPT_MULTITHREAD_LOCK_FDTBL = $0008 ; G zx_crt
__CLIB_OPT_NUM2TXT_INT_HEX      = $0008 ; G zx_crt
__CLIB_OPT_NUM2TXT_SELECT_FAST_HEX = $0008 ; G zx_crt
__CLIB_OPT_PRINTF_2_llX         = $0008 ; G zx_crt
__CLIB_OPT_PRINTF_X             = $0008 ; G zx_crt
__CLIB_OPT_SCANF_2_llX          = $0008 ; G zx_crt
__CLIB_OPT_SCANF_X              = $0008 ; G zx_crt
__CLIB_OPT_SORT_QSORT_ENABLE_EQUAL = $0008 ; G zx_crt
__CLIB_OPT_TXT2NUM_INT_HEX      = $0008 ; G zx_crt
__CLIB_OPT_TXT2NUM_SELECT_FAST_HEX = $0008 ; G zx_crt
__ENFILE                        = $0008 ; G zx_crt
__SPECTRUM_128_P2A              = $0008 ; G zx_crt
__rodata_stdlib_size            = $0008 ; G 
thrd_timedout                   = $0008 ; G zx_crt
STDIO_MSG_CLOS                  = $0009 ; G zx_crt
__ENOLCK                        = $0009 ; G zx_crt
CHAR_LF                         = $000A ; L character_00_input_stdio_msg_read
CHAR_LF                         = $000A ; L console_01_input_proc_getc
CHAR_LF                         = $000A ; L console_01_output_char_iterm_msg_putc
CHAR_LF                         = $000A ; L console_01_output_char_oterm_msg_putc
CHAR_LF                         = $000A ; L zx_01_input_inkey_iterm_msg_getc
CHAR_LF                         = $000A ; G zx_crt
__ENOMEM                        = $000A ; G zx_crt
__ENOTSUP                       = $000B ; G zx_crt
CHAR_BS                         = $000C ; L console_01_input_proc_getc
CHAR_BS                         = $000C ; G zx_crt
__CLIB_OPT_SORT_QSORT           = $000C ; G zx_crt
__CODE_size                     = $000C ; G 
__EOVERFLOW                     = $000C ; G zx_crt
CHAR_CR                         = $000D ; L console_01_input_proc_getc
CHAR_CR                         = $000D ; L console_01_output_char_oterm_msg_putc
CHAR_CR                         = $000D ; L zx_01_input_inkey_iterm_msg_getc
CHAR_CR                         = $000D ; G zx_crt
__ERANGE                        = $000D ; G zx_crt
__ESTAT                         = $000E ; G zx_crt
__code_crt_return_size          = $000E ; G 
__code_l_sdcc_size              = $000E ; G 
ICHAR_MSG_GETC                  = $000F ; G zx_crt
ITERM_MSG_GETC                  = $000F ; L console_01_input_proc_getc
ITERM_MSG_GETC                  = $000F ; G zx_crt
__CLIB_OPT_IMATH_FAST           = $000F ; G zx_crt
__EAGAIN                        = $000F ; G zx_crt
__EWOULDBLOCK                   = $000F ; G zx_crt
ITERM_MSG_INTERRUPT             = $0010 ; L console_01_input_proc_getc
ITERM_MSG_INTERRUPT             = $0010 ; G zx_crt
__CLIB_OPT_MULTITHREAD_LOCK_FDSTR = $0010 ; G zx_crt
__CLIB_OPT_NUM2TXT_LONG_BIN     = $0010 ; G zx_crt
__CLIB_OPT_PRINTF_2_llo         = $0010 ; G zx_crt
__CLIB_OPT_PRINTF_o             = $0010 ; G zx_crt
__CLIB_OPT_SCANF_2_llo          = $0010 ; G zx_crt
__CLIB_OPT_SCANF_o              = $0010 ; G zx_crt
__CLIB_OPT_TXT2NUM_LONG_BIN     = $0010 ; G zx_crt
__SOUND_BIT_TOGGLE              = $0010 ; L asm_bit_beep_raw
__SOUND_BIT_TOGGLE              = $0010 ; G zx_crt
__SPECTRUM_128_P3               = $0010 ; G zx_crt
ITERM_MSG_PUTC                  = $0011 ; L console_01_input_proc_echo
ITERM_MSG_PUTC                  = $0011 ; G zx_crt
ITERM_MSG_PRINT_CURSOR          = $0012 ; L console_01_input_proc_getc
ITERM_MSG_PRINT_CURSOR          = $0012 ; G zx_crt
ITERM_MSG_ERASE_CURSOR          = $0013 ; L console_01_input_proc_getc
ITERM_MSG_ERASE_CURSOR          = $0013 ; G zx_crt
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; L console_01_input_proc_getc
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G zx_crt
ITERM_MSG_BS                    = $0015 ; L console_01_input_proc_getc
ITERM_MSG_BS                    = $0015 ; G zx_crt
ITERM_MSG_BS_PWD                = $0016 ; L console_01_input_proc_getc
ITERM_MSG_BS_PWD                = $0016 ; G zx_crt
__BIFROST2_TOTAL_ROWS           = $0016 ; G zx_crt
__NIRVANAM_TOTAL_ROWS           = $0016 ; G zx_crt
ITERM_MSG_READLINE_BEGIN        = $0017 ; L console_01_input_proc_getc
ITERM_MSG_READLINE_BEGIN        = $0017 ; G zx_crt
__NIRVANAP_TOTAL_ROWS           = $0017 ; G zx_crt
__SOUND_BIT_READ_MASK           = $0017 ; L asm_bit_open
__SOUND_BIT_READ_MASK           = $0017 ; G zx_crt
ITERM_MSG_READLINE_END          = $0018 ; L console_01_input_proc_getc
ITERM_MSG_READLINE_END          = $0018 ; G zx_crt
SP1V_DISPHEIGHT                 = $0018 ; G zx_crt
ITERM_MSG_BELL                  = $0019 ; L console_01_input_proc_getc
ITERM_MSG_BELL                  = $0019 ; G zx_crt
CHAR_CTRL_Z                     = $001A ; G zx_crt
__MESSAGE_ITERM_NEXT__          = $001A ; G zx_crt
CHAR_ESC                        = $001B ; L console_01_input_proc_getc
CHAR_ESC                        = $001B ; G zx_crt
OCHAR_MSG_PUTC_BIN              = $001E ; G zx_crt
OTERM_MSG_PUTC                  = $001E ; G zx_crt
OTERM_MSG_TTY                   = $001F ; L console_01_output_char_oterm_msg_putc
OTERM_MSG_TTY                   = $001F ; G zx_crt
__code_threads_mutex_size       = $001F ; G 
OCHAR_MSG_PUTC                  = $0020 ; G zx_crt
OTERM_MSG_PRINTC                = $0020 ; L console_01_output_char_oterm_msg_putc
OTERM_MSG_PRINTC                = $0020 ; G zx_crt
SP1V_DISPWIDTH                  = $0020 ; G zx_crt
__CLIB_OPT_FASTCOPY_LDIR        = $0020 ; G zx_crt
__CLIB_OPT_NUM2TXT_LONG_OCT     = $0020 ; G zx_crt
__CLIB_OPT_PRINTF_n             = $0020 ; G zx_crt
__CLIB_OPT_SCANF_n              = $0020 ; G zx_crt
__CLIB_OPT_TXT2NUM_LONG_OCT     = $0020 ; G zx_crt
__SPECTRUM_PENTAGON             = $0020 ; G zx_crt
OTERM_MSG_SCROLL                = $0021 ; G zx_crt
OTERM_MSG_CLS                   = $0022 ; G zx_crt
__code_alloc_malloc_size        = $0022 ; G 
OTERM_MSG_PAUSE                 = $0023 ; G zx_crt
OTERM_MSG_BELL                  = $0024 ; L console_01_output_char_oterm_msg_putc
OTERM_MSG_BELL                  = $0024 ; G zx_crt
__code_crt_init_size            = $0024 ; G 
OTERM_MSG_PSCROLL               = $0025 ; G zx_crt
__code_driver_general_size      = $0025 ; G 
__MESSAGE_OTERM_NEXT__          = $0026 ; G zx_crt
CHAR_PASSWORD                   = $002A ; L console_01_input_proc_echo
CHAR_PASSWORD                   = $002A ; L console_01_input_proc_getc
CHAR_PASSWORD                   = $002A ; G zx_crt
CHAR_CURSOR_UC                  = $002D ; L console_01_input_proc_getc
CHAR_CURSOR_UC                  = $002D ; G zx_crt
__MESSAGE_NEXT__                = $002D ; G zx_crt
__code_ctype_size               = $0031 ; G 
__ERROR_NEXT                    = $0032 ; G zx_crt
__data_stdio_size               = $0039 ; G 
__code_adt_b_array_size         = $003B ; G 
__SPECTRUM_128_MASK             = $003E ; G zx_crt
__CLIB_OPT_FASTCOPY_LDIR_SMC    = $0040 ; G zx_crt
__CLIB_OPT_NUM2TXT_LONG_DEC     = $0040 ; G zx_crt
__CLIB_OPT_PRINTF_2_lli         = $0040 ; G zx_crt
__CLIB_OPT_PRINTF_i             = $0040 ; G zx_crt
__CLIB_OPT_SCANF_2_lli          = $0040 ; G zx_crt
__CLIB_OPT_SCANF_i              = $0040 ; G zx_crt
__CLIB_OPT_TXT2NUM_LONG_DEC     = $0040 ; G zx_crt
__code_error_size               = $0042 ; G 
__code_z80_size                 = $004F ; G 
__code_sound_bit_size           = $005A ; G 
CHAR_CURSOR_LC                  = $005F ; L console_01_input_proc_getc
CHAR_CURSOR_LC                  = $005F ; G zx_crt
__code_driver_character_input_size = $006E ; G 
__code_string_size              = $0077 ; G 
__BIFROST2_STATIC_MIN           = $0080 ; G zx_crt
__BIFROST2_STATIC_OVERLAP       = $0080 ; G zx_crt
__BIFROSTH_STATIC_MIN           = $0080 ; G zx_crt
__BIFROSTH_STATIC_OVERLAP       = $0080 ; G zx_crt
__BIFROSTL_STATIC_MIN           = $0080 ; G zx_crt
__BIFROSTL_STATIC_OVERLAP       = $0080 ; G zx_crt
__CLIB_OPT_FASTCOPY_MEMCPY_SMC  = $0080 ; G zx_crt
__CLIB_OPT_IMATH_FAST_LIA       = $0080 ; G zx_crt
__CLIB_OPT_NUM2TXT_LONG_HEX     = $0080 ; G zx_crt
__CLIB_OPT_PRINTF_p             = $0080 ; G zx_crt
__CLIB_OPT_SCANF_p              = $0080 ; G zx_crt
__CLIB_OPT_TXT2NUM_LONG_HEX     = $0080 ; G zx_crt
__code_input_size               = $009B ; G 
__code_fcntl_size               = $009C ; G 
__rodata_input_size             = $00A0 ; G 
__code_math_size                = $00D1 ; G 
__SOUND_BIT_WRITE_MASK          = $00E8 ; L asm_bit_close
__SOUND_BIT_WRITE_MASK          = $00E8 ; G zx_crt
__data_fcntl_stdio_heap_body_size = $00F8 ; G 
__SOUND_BIT_PORT                = $00FE ; L asm_bit_beep_raw
__SOUND_BIT_PORT                = $00FE ; G zx_crt
TAR__clib_stdio_heap_size       = $0100 ; L zx_crt
__CLIB_OPT_PRINTF_B             = $0100 ; G zx_crt
__CLIB_OPT_SCANF_B              = $0100 ; G zx_crt
__clib_stdio_heap_size          = $0100 ; L zx_crt
IOCTL_OTERM_CLS                 = $0102 ; G zx_crt
__code_arch_size                = $0109 ; G 
__code_l_size                   = $0120 ; G 
TAR__crt_stack_size             = $0200 ; L zx_crt
__CLIB_OPT_PRINTF_s             = $0200 ; G zx_crt
__CLIB_OPT_SCANF_s              = $0200 ; G zx_crt
__crt_stack_size                = $0200 ; L zx_crt
IOCTL_ITERM_TIE                 = $0201 ; G zx_crt
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G zx_crt
__code_stdlib_size              = $0243 ; G 
__rodata_font_4x8_size          = $0300 ; G 
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G zx_crt
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G zx_crt
__code_fp_math48_size           = $0321 ; G 
__code_driver_terminal_input_size = $0344 ; G 
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G zx_crt
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G zx_crt
__code_driver_terminal_output_size = $039E ; G 
__CLIB_OPT_PRINTF_c             = $0400 ; G zx_crt
__CLIB_OPT_SCANF_c              = $0400 ; G zx_crt
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G zx_crt
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G zx_crt
__rodata_compiler_size          = $04C2 ; G 
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G zx_crt
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G zx_crt
IOCTL_OTERM_GET_OTERM           = $0602 ; G zx_crt
__code_stdio_size               = $06E1 ; G 
IOCTL_OTERM_SCROLL              = $0702 ; G zx_crt
__Z88DK                         = $07C8 ; G zx_crt
__CLIB_OPT_PRINTF_I             = $0800 ; G zx_crt
__CLIB_OPT_SCANF_I              = $0800 ; G zx_crt
IOCTL_OTERM_FONT                = $0802 ; G zx_crt
__code_compiler_size            = $08C1 ; G 
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G zx_crt
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G zx_crt
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G zx_crt
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G zx_crt
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G zx_crt
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G zx_crt
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G zx_crt
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G zx_crt
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G zx_crt
__CLIB_OPT_PRINTF_ld            = $1000 ; G zx_crt
__CLIB_OPT_SCANF_ld             = $1000 ; G zx_crt
IOCTL_ITERM_SET_DELAY           = $1001 ; G zx_crt
IOCTL_OTERM_FCOLOR              = $1002 ; G zx_crt
IOCTL_ITERM_GET_DELAY           = $1081 ; G zx_crt
IOCTL_ITERM_LASTK               = $1101 ; G zx_crt
IOCTL_OTERM_FMASK               = $1102 ; G zx_crt
IOCTL_OTERM_BCOLOR              = $1202 ; G zx_crt
__bss_compiler_size             = $1454 ; G 
__CLIB_OPT_PRINTF_lu            = $2000 ; G zx_crt
__CLIB_OPT_SCANF_lu             = $2000 ; G zx_crt
__NIRVANAM_CHAR_TABLE           = $3C00 ; G zx_crt
__NIRVANAP_CHAR_TABLE           = $3C00 ; G zx_crt
__CLIB_OPT_PRINTF_lx            = $4000 ; G zx_crt
__CLIB_OPT_SCANF_lx             = $4000 ; G zx_crt
TAR__crt_org_code               = $8000 ; L zx_crt
__CLIB_OPT_PRINTF_lX            = $8000 ; G zx_crt
__CLIB_OPT_SCANF_lX             = $8000 ; G zx_crt
__CODE_head                     = $8000 ; G 
__Start                         = $8000 ; G zx_crt
__crt_org_code                  = $8000 ; L zx_crt
__Restart                       = $8009 ; L zx_crt
__CODE_tail                     = $800C ; G 
__Restart_2                     = $800C ; L zx_crt
__code_crt_init_head            = $800C ; G 
__code_crt_init_tail            = $8030 ; G 
__code_crt_main_head            = $8030 ; G 
__Exit                          = $8033 ; G zx_crt
__code_crt_exit_head            = $8034 ; G 
__code_crt_exit_tail            = $8034 ; G 
__code_crt_main_tail            = $8034 ; G 
__code_crt_return_head          = $8034 ; G 
__code_adt_b_array_head         = $8042 ; G 
__code_clib_head                = $8042 ; G 
__code_clib_tail                = $8042 ; G 
__code_crt_common_head          = $8042 ; G 
__code_crt_common_tail          = $8042 ; G 
__code_crt_return_tail          = $8042 ; G 
__code_driver_head              = $8042 ; G 
__code_driver_tail              = $8042 ; G 
__code_font_head                = $8042 ; G 
__code_font_tail                = $8042 ; G 
asm_b_array_at                  = $8042 ; G asm_b_array_at
asm_b_array_append              = $804D ; G asm_b_array_append
asm_b_array_push_back           = $804D ; G asm_b_array_push_back
asm0_b_array_append             = $804F ; G asm_b_array_append
room_available                  = $805D ; L asm_b_array_append
__array_at                      = $806D ; G __array_at
__code_adt_b_array_tail         = $807D ; G 
__code_adt_b_vector_head        = $807D ; G 
__code_adt_b_vector_tail        = $807D ; G 
__code_adt_ba_priority_queue_head = $807D ; G 
__code_adt_ba_priority_queue_tail = $807D ; G 
__code_adt_ba_stack_head        = $807D ; G 
__code_adt_ba_stack_tail        = $807D ; G 
__code_adt_bv_priority_queue_head = $807D ; G 
__code_adt_bv_priority_queue_tail = $807D ; G 
__code_adt_bv_stack_head        = $807D ; G 
__code_adt_bv_stack_tail        = $807D ; G 
__code_adt_p_forward_list_head  = $807D ; G 
asm_p_forward_list_front        = $807D ; G asm_p_forward_list_front
asm_p_forward_list_next         = $807D ; G asm_p_forward_list_next
__code_adt_p_forward_list_alt_head = $8083 ; G 
__code_adt_p_forward_list_alt_tail = $8083 ; G 
__code_adt_p_forward_list_tail  = $8083 ; G 
__code_adt_p_list_head          = $8083 ; G 
__code_adt_p_list_tail          = $8083 ; G 
__code_adt_p_queue_head         = $8083 ; G 
__code_adt_p_queue_tail         = $8083 ; G 
__code_adt_p_stack_head         = $8083 ; G 
__code_adt_p_stack_tail         = $8083 ; G 
__code_adt_w_array_head         = $8083 ; G 
__code_adt_w_array_tail         = $8083 ; G 
__code_adt_w_vector_head        = $8083 ; G 
__code_adt_w_vector_tail        = $8083 ; G 
__code_adt_wa_priority_queue_head = $8083 ; G 
__code_adt_wa_priority_queue_tail = $8083 ; G 
__code_adt_wa_stack_head        = $8083 ; G 
__code_adt_wa_stack_tail        = $8083 ; G 
__code_adt_wv_priority_queue_head = $8083 ; G 
__code_adt_wv_priority_queue_tail = $8083 ; G 
__code_adt_wv_stack_head        = $8083 ; G 
__code_adt_wv_stack_tail        = $8083 ; G 
__code_alloc_balloc_head        = $8083 ; G 
__code_alloc_balloc_tail        = $8083 ; G 
__code_alloc_malloc_head        = $8083 ; G 
asm_heap_init                   = $8083 ; G asm_heap_init
__code_alloc_malloc_tail        = $80A5 ; G 
__code_alloc_obstack_head       = $80A5 ; G 
__code_alloc_obstack_tail       = $80A5 ; G 
__code_arch_head                = $80A5 ; G 
asm_zx_cls_wc                   = $80A5 ; G asm_zx_cls_wc
pixel_loop_0                    = $80B3 ; L asm_zx_cls_wc
pixel_loop_1                    = $80B5 ; L asm_zx_cls_wc
attr_loop                       = $80D0 ; L asm_zx_cls_wc
asm_zx_cyx2saddr                = $80E2 ; G asm_zx_cyx2saddr
asm_zx_saddr2aaddr              = $80F1 ; G asm_zx_saddr2aaddr
asm_zx_saddrpdown               = $80FB ; G asm_zx_saddrpdown
asm0_zx_saddrpdown              = $80FC ; G asm_zx_saddrpdown
asm_zx_scroll_wc_up_noexx       = $8111 ; G asm_zx_scroll_wc_up_noexx
asm_zx_scroll_wc_up             = $811E ; G asm_zx_scroll_wc_up
copy_up_loop_0                  = $8156 ; L asm_zx_scroll_wc_up
copy_up_loop_1                  = $816A ; L asm_zx_scroll_wc_up
vacate_loop_0                   = $8189 ; L asm_zx_scroll_wc_up
vacate_loop_1                   = $8198 ; L asm_zx_scroll_wc_up
__code_arch_tail                = $81AE ; G 
__code_bifrost2_head            = $81AE ; G 
__code_bifrost2_tail            = $81AE ; G 
__code_bifrost_h_head           = $81AE ; G 
__code_bifrost_h_tail           = $81AE ; G 
__code_bifrost_l_head           = $81AE ; G 
__code_bifrost_l_tail           = $81AE ; G 
__code_compress_aplib_head      = $81AE ; G 
__code_compress_aplib_tail      = $81AE ; G 
__code_compress_zx7_head        = $81AE ; G 
__code_compress_zx7_tail        = $81AE ; G 
__code_ctype_head               = $81AE ; G 
asm_isspace                     = $81AE ; G asm_isspace
asm_isdigit                     = $81B8 ; G asm_isdigit
asm_isalpha                     = $81BF ; G asm_isalpha
asm_tolower                     = $81CD ; G asm_tolower
asm_toupper                     = $81D6 ; G asm_toupper
__code_ctype_tail               = $81DF ; G 
__code_driver_general_head      = $81DF ; G 
console_01_input_terminal_fdriver = $81DF ; G console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = $81DF ; G console_01_output_terminal_fdriver
device_return_error             = $81E7 ; G device_return_error
device_set_error                = $81EE ; G device_set_error
console_01_input_proc_reset     = $81FB ; G console_01_input_proc_reset
device_reset_error              = $81FB ; G device_reset_error
__code_driver_character_input_head = $8204 ; G 
__code_driver_general_tail      = $8204 ; G 
character_00_input_stdio_msg_eatc = $8204 ; G character_00_input_stdio_msg_eatc
console_01_input_stdio_msg_eatc = $8204 ; G console_01_input_stdio_msg_eatc
eatc_loop                       = $8209 ; L character_00_input_stdio_msg_eatc
eatc_exit                       = $8223 ; L character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_read = $8226 ; G character_00_input_stdio_msg_read
console_01_input_stdio_msg_read = $8226 ; G console_01_input_stdio_msg_read
read_loop                       = $8227 ; L character_00_input_stdio_msg_read
read_exit                       = $823D ; L character_00_input_stdio_msg_read
read_exit_error                 = $8245 ; L character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = $8250 ; G character_00_input_stdio_msg_seek
console_01_input_stdio_msg_seek = $8250 ; G console_01_input_stdio_msg_seek
seek_loop                       = $825C ; L character_00_input_stdio_msg_seek
__code_driver_character_input_tail = $8272 ; G 
__code_driver_character_output_head = $8272 ; G 
__code_driver_character_output_tail = $8272 ; G 
__code_driver_memstream_head    = $8272 ; G 
__code_driver_memstream_tail    = $8272 ; G 
__code_driver_terminal_input_head = $8272 ; G 
zx_01_input_kbd_inkey           = $8272 ; G zx_01_input_kbd_inkey
console_01_input_terminal       = $8284 ; G console_01_input_terminal
console_01_input_stdio_msg_flsh = $82AF ; G console_01_input_stdio_msg_flsh
zx_01_input_inkey_stdio_msg_flsh = $82AF ; G zx_01_input_inkey_stdio_msg_flsh
console_01_input_proc_getc      = $82C2 ; G console_01_input_proc_getc
console_01_input_stdio_msg_getc = $82C2 ; G console_01_input_stdio_msg_getc
getc                            = $82CE ; L console_01_input_proc_getc
char_mode                       = $82D4 ; L console_01_input_proc_getc
line_mode                       = $82DE ; L console_01_input_proc_getc
line_mode_readline              = $82F8 ; L console_01_input_proc_getc
push_loop                       = $8318 ; L console_01_input_proc_getc
put_raw_0                       = $8323 ; L console_01_input_proc_getc
line_mode_readline_1            = $832E ; L console_01_input_proc_getc
readline_loop                   = $8331 ; L console_01_input_proc_getc
cursor_print                    = $8347 ; L console_01_input_proc_getc
cursor_print_end                = $834C ; L console_01_input_proc_getc
cursor_not_pwd                  = $836D ; L console_01_input_proc_getc
cursor_erase_end                = $8371 ; L console_01_input_proc_getc
bell                            = $838A ; L console_01_input_proc_getc
not_empty                       = $8391 ; L console_01_input_proc_getc
not_password_mode               = $83A4 ; L console_01_input_proc_getc
skip_bs                         = $83A8 ; L console_01_input_proc_getc
escaped_char                    = $83B3 ; L console_01_input_proc_getc
put_raw                         = $83C8 ; L console_01_input_proc_getc
readline_done                   = $83DD ; L console_01_input_proc_getc
readline_error                  = $83DD ; L console_01_input_proc_getc
interrupt_received              = $83F0 ; L console_01_input_proc_getc
edit_buff_params                = $83F6 ; L console_01_input_proc_getc
line_mode_editbuf_1             = $83FE ; L console_01_input_proc_getc
state_machine_0                 = $840B ; L console_01_input_proc_getc
state_machine_1                 = $841B ; L console_01_input_proc_getc
state_machine_2                 = $842B ; L console_01_input_proc_getc
not_cr                          = $8436 ; L console_01_input_proc_getc
sm_cook                         = $843C ; L console_01_input_proc_getc
sm_capslock                     = $844D ; L console_01_input_proc_getc
sm_escape                       = $845C ; L console_01_input_proc_getc
sm_esc_exit                     = $8466 ; L console_01_input_proc_getc
sm_exit                         = $8468 ; L console_01_input_proc_getc
console_01_input_proc_echo      = $846C ; G console_01_input_proc_echo
console_01_input_proc_oterm     = $847C ; G console_01_input_proc_echo
cont                            = $8489 ; L console_01_input_proc_echo
console_01_input_stdio_msg_ictl = $8492 ; G console_01_input_stdio_msg_ictl
_ictl_messages                  = $84A9 ; L console_01_input_stdio_msg_ictl
console_01_input_stdio_msg_ictl_0 = $84B6 ; G console_01_input_stdio_msg_ictl
_ioctl_getset_editbuf           = $84BF ; L console_01_input_stdio_msg_ictl
_ioctl_set_editbuf              = $84CB ; L console_01_input_stdio_msg_ictl
_ioctl_get_editbuf              = $84D6 ; L console_01_input_stdio_msg_ictl
_ioctl_editbuf_copy             = $84D9 ; L console_01_input_stdio_msg_ictl
_ioctl_tie                      = $84E0 ; L console_01_input_stdio_msg_ictl
_ioctl_tie_exit                 = $84F4 ; L console_01_input_stdio_msg_ictl
zx_01_input_inkey_iterm_msg_getc = $84F6 ; G zx_01_input_inkey_iterm_msg_getc
state_1                         = $8500 ; L zx_01_input_inkey_iterm_msg_getc
state_1t_join                   = $8503 ; L zx_01_input_inkey_iterm_msg_getc
state_2                         = $8511 ; L zx_01_input_inkey_iterm_msg_getc
state_unknown                   = $8516 ; L zx_01_input_inkey_iterm_msg_getc
state_3                         = $8519 ; L zx_01_input_inkey_iterm_msg_getc
getk_0                          = $851D ; L zx_01_input_inkey_iterm_msg_getc
getk_1                          = $8523 ; L zx_01_input_inkey_iterm_msg_getc
getk_loop                       = $8525 ; L zx_01_input_inkey_iterm_msg_getc
debounce                        = $852E ; L zx_01_input_inkey_iterm_msg_getc
state_1t                        = $853D ; L zx_01_input_inkey_iterm_msg_getc
key_pressed                     = $8540 ; L zx_01_input_inkey_iterm_msg_getc
exit                            = $8553 ; L zx_01_input_inkey_iterm_msg_getc
key_cr                          = $8558 ; L zx_01_input_inkey_iterm_msg_getc
key_lf                          = $855C ; L zx_01_input_inkey_iterm_msg_getc
zx_01_input_inkey_proc_getk_address = $8560 ; G zx_01_input_inkey_proc_getk_address
zx_01_input_inkey_stdio_msg_ictl = $8566 ; G zx_01_input_inkey_stdio_msg_ictl
_ioctl_getset_delay             = $857E ; L zx_01_input_inkey_stdio_msg_ictl
_ioctl_set_delay                = $8588 ; L zx_01_input_inkey_stdio_msg_ictl
_ioctl_get_delay                = $859D ; L zx_01_input_inkey_stdio_msg_ictl
__code_driver_terminal_input_tail = $85B6 ; G 
__code_driver_terminal_output_head = $85B6 ; G 
zx_01_output_char_64            = $85B6 ; G zx_01_output_char_64
console_01_output_terminal_char = $85DF ; G console_01_output_terminal_char
console_01_output_terminal      = $8626 ; G console_01_output_terminal
console_01_output_stdio_msg_putc = $8642 ; G console_01_output_stdio_msg_putc
putc_loop                       = $8646 ; L console_01_output_stdio_msg_putc
console_01_output_stdio_msg_writ = $8656 ; G console_01_output_stdio_msg_writ
writ_loop                       = $8658 ; L console_01_output_stdio_msg_writ
writ_end                        = $8666 ; L console_01_output_stdio_msg_writ
console_01_output_char_iterm_msg_bs = $866A ; G console_01_output_char_iterm_msg_bs
console_01_output_char_iterm_msg_putc = $868D ; G console_01_output_char_iterm_msg_putc
console_01_output_char_iterm_msg_readline_begin = $869F ; G console_01_output_char_iterm_msg_readline_begin
console_01_output_char_iterm_msg_readline_end = $86A4 ; G console_01_output_char_iterm_msg_readline_end
console_01_output_char_oterm_msg_putc = $86B0 ; G console_01_output_char_oterm_msg_putc
putchar_bell                    = $86C1 ; L console_01_output_char_oterm_msg_putc
cooked                          = $86C5 ; L console_01_output_char_oterm_msg_putc
console_01_output_char_oterm_msg_putc_raw = $86D1 ; G console_01_output_char_oterm_msg_putc
crlf_done                       = $86D1 ; L console_01_output_char_oterm_msg_putc
putchar_ok                      = $86D7 ; L console_01_output_char_oterm_msg_putc
x_ok                            = $86E6 ; L console_01_output_char_oterm_msg_putc
y_ok                            = $86FC ; L console_01_output_char_oterm_msg_putc
console_01_output_char_proc_linefeed = $870F ; G console_01_output_char_proc_linefeed
y_ok_2                          = $8725 ; L console_01_output_char_proc_linefeed
console_01_output_char_proc_move_left = $872D ; G console_01_output_char_proc_move_left
x_is_zero                       = $873A ; L console_01_output_char_proc_move_left
check_y                         = $8740 ; L console_01_output_char_proc_move_left
console_01_output_char_proc_move_down = $8744 ; G console_01_output_char_proc_move_down
console_01_output_char_proc_move_down_check_y = $8749 ; G console_01_output_char_proc_move_down
set_max_y                       = $874B ; L console_01_output_char_proc_move_down
console_01_output_char_proc_putchar_scroll = $874E ; G console_01_output_char_proc_putchar_scroll
pause_scroll                    = $8766 ; L console_01_output_char_proc_putchar_scroll
scroll_immediate_0              = $877A ; L console_01_output_char_proc_putchar_scroll
scroll_immediate                = $877D ; L console_01_output_char_proc_putchar_scroll
scroll_it                       = $8783 ; L console_01_output_char_proc_putchar_scroll
page_it                         = $878A ; L console_01_output_char_proc_putchar_scroll
no_cls                          = $8795 ; L console_01_output_char_proc_putchar_scroll
console_01_output_char_proc_reset_scroll_limit = $879B ; G console_01_output_char_proc_reset_scroll_limit
console_01_output_char_stdio_msg_ictl = $87A2 ; G console_01_output_char_stdio_msg_ictl
console_01_output_char_stdio_msg_ictl_0 = $87AF ; G console_01_output_char_stdio_msg_ictl
_ioctl_scroll                   = $87C7 ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_oterm                = $87CB ; L console_01_output_char_stdio_msg_ictl
_ioctl_getset_cursor_coord      = $87D2 ; L console_01_output_char_stdio_msg_ictl
_ioctl_set_cursor_coord         = $87D6 ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_cursor_coord         = $87E2 ; L console_01_output_char_stdio_msg_ictl
_ioctl_cls                      = $87F6 ; L console_01_output_char_stdio_msg_ictl
_ioctl_getset_window_coord      = $8808 ; L console_01_output_char_stdio_msg_ictl
_ioctl_set_window_coord         = $880F ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_window_coord         = $8818 ; L console_01_output_char_stdio_msg_ictl
_ioctl_getset_window_rect       = $8827 ; L console_01_output_char_stdio_msg_ictl
_ioctl_set_window_rect          = $8836 ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_window_rect          = $8837 ; L console_01_output_char_stdio_msg_ictl
console_01_output_char_proc_putchar_scroll_adjust = $883B ; G console_01_output_char_proc_putchar_scroll_adjust
screen_cleared                  = $8848 ; L console_01_output_char_proc_putchar_scroll_adjust
store_y                         = $8849 ; L console_01_output_char_proc_putchar_scroll_adjust
zx_01_output_char_32_iterm_msg_bell = $884D ; G zx_01_output_char_32_iterm_msg_bell
zx_01_output_char_32_oterm_msg_bell = $8860 ; G zx_01_output_char_32_oterm_msg_bell
zx_01_output_char_32_stdio_msg_ictl = $8873 ; G zx_01_output_char_32_stdio_msg_ictl
zx_01_output_char_32_stdio_msg_ictl_0 = $8880 ; G zx_01_output_char_32_stdio_msg_ictl
_ioctl_bcolor                   = $8893 ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_font                     = $889F ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_font_ret                 = $88B0 ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_fcolor                   = $88B2 ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_fmask                    = $88BE ; L zx_01_output_char_32_stdio_msg_ictl
zx_01_output_char_64_oterm_msg_cls = $88CA ; G zx_01_output_char_64_oterm_msg_cls
zx_01_output_char_64_oterm_msg_printc = $88E0 ; G zx_01_output_char_64_oterm_msg_printc
code_ok                         = $88E7 ; L zx_01_output_char_64_oterm_msg_printc
__screen_address                = $88EF ; L zx_01_output_char_64_oterm_msg_printc
__print_loop                    = $8905 ; L zx_01_output_char_64_oterm_msg_printc
zx_01_output_char_64_oterm_msg_scroll = $8924 ; G zx_01_output_char_64_oterm_msg_scroll
zx_01_output_char_64_proc_stack_window_32 = $893E ; G zx_01_output_char_64_proc_stack_window_32
__code_driver_terminal_output_tail = $8954 ; G 
__code_driver_tty_head          = $8954 ; G 
__code_driver_tty_tail          = $8954 ; G 
__code_error_head               = $8954 ; G 
error_ebdfd_zc                  = $8957 ; G error_ebdfd_zc
error_edom_zc                   = $8957 ; G error_edom_zc
error_einval_zc                 = $8957 ; G error_einval_zc
error_enolck_zc                 = $8957 ; G error_enolck_zc
error_enotsup_zc                = $8957 ; G error_enotsup_zc
error_erange_zc                 = $8957 ; G error_erange_zc
errno_zc                        = $8959 ; G errno_zc
__ch_system                     = $8965 ; G zx_crt
error_zc                        = $8965 ; G error_zc
error_divide_by_zero_mc         = $896D ; G error_divide_by_zero_mc
error_eacces_mc                 = $896D ; G error_eacces_mc
error_edom_mc                   = $896D ; G error_edom_mc
error_enotsup_mc                = $896D ; G error_enotsup_mc
error_erange_mc                 = $896D ; G error_erange_mc
errno_mc                        = $896F ; G errno_mc
error_mc                        = $897A ; G error_mc
error_znc                       = $8982 ; G error_znc
error_lzc                       = $8989 ; G error_lzc
error_lznc                      = $8990 ; G error_lznc
__code_error_tail               = $8996 ; G 
__code_fcntl_head               = $8996 ; G 
asm_vioctl                      = $8996 ; G asm_vioctl
critical_section                = $8996 ; L asm_vioctl
find_driver_loop                = $89A4 ; L asm_vioctl
deliver_message                 = $89B4 ; L asm_vioctl
__bool                          = $89C8 ; L asm_vioctl
__setf                          = $89CF ; L asm_vioctl
forward_ioctl                   = $89DA ; L asm_vioctl
__getf                          = $89E3 ; L asm_vioctl
asm_vioctl_driver               = $89EE ; G asm_vioctl
__fcntl_fdchain_descend         = $8A0A ; G __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_2      = $8A11 ; G __fcntl_fdstruct_from_fd_2
__fcntl_fdstruct_from_fd_1      = $8A1C ; G __fcntl_fdstruct_from_fd_1
__code_fcntl_tail               = $8A32 ; G 
__code_font_fzx_head            = $8A32 ; G 
__code_font_fzx_tail            = $8A32 ; G 
__code_fp_genmath_head          = $8A32 ; G 
__code_fp_genmath_tail          = $8A32 ; G 
__code_fp_math48_head           = $8A32 ; G 
cm48_sdcciyp_dload              = $8A32 ; G cm48_sdcciyp_dload
dload                           = $8A32 ; G dload
cm48_sdcciyp_dx2m48             = $8A3D ; G cm48_sdcciyp_d2m48
cm48_sdcciyp_d2m48              = $8A3E ; G cm48_sdcciyp_d2m48
zero                            = $8A49 ; L cm48_sdcciyp_d2m48
am48_fpclassify                 = $8A52 ; G am48_fpclassify
asm_fpclassify                  = $8A52 ; G asm_fpclassify
zero                            = $8A5A ; L am48_fpclassify
__dtoa_base10                   = $8A5C ; G __dtoa_base10
am48__dtoa_base10               = $8A5C ; G am48__dtoa_base10
no_correction                   = $8A7D ; L am48__dtoa_base10
align_digit                     = $8A90 ; L am48__dtoa_base10
digit_loop                      = $8A99 ; L am48__dtoa_base10
rotation_done                   = $8AA1 ; L am48__dtoa_base10
__dtoa_digits                   = $8AA5 ; G __dtoa_digits
am48__dtoa_digits               = $8AA5 ; G am48__dtoa_digits
am48_dmul10a                    = $8AE1 ; G am48_dmul10a
mm48_mul10                      = $8AE1 ; G mm48_mul10
mm48__m10a                      = $8B07 ; L mm48_mul10
am48_derror_erange_pinfc        = $8B10 ; G am48_derror_erange_infc
am48_derror_erange_infc         = $8B14 ; G am48_derror_erange_infc
am48_derror_erange_minfc        = $8B1D ; G am48_derror_erange_infc
am48_derror_erange_infxc        = $8B24 ; G am48_derror_erange_infc
am48_dconst_inf                 = $8B2B ; G am48_dconst_inf
am48_dconst_pinf                = $8B2F ; G am48_dconst_inf
join                            = $8B32 ; L am48_dconst_inf
am48_dconst_minf                = $8B37 ; G am48_dconst_inf
am48_dmulpow10                  = $8B3C ; G am48_dmulpow10
mm48_tenf                       = $8B3C ; G mm48_tenf
mm48__tf1                       = $8B43 ; L mm48_tenf
mm48__tf2                       = $8B53 ; L mm48_tenf
mm48__tf3                       = $8B6A ; L mm48_tenf
mm48__tf4                       = $8B77 ; L mm48_tenf
mm48__tenf_range                = $8B7F ; L mm48_tenf
con10                           = $8B88 ; L mm48_tenf
mm48_fpdiv                      = $8BC4 ; G mm48_fpdiv
mm48__divi1                     = $8BDF ; L mm48_fpdiv
mm48__divi2                     = $8BE8 ; L mm48_fpdiv
mm48__divi3                     = $8BFB ; L mm48_fpdiv
mm48__divi4                     = $8C07 ; L mm48_fpdiv
mm48__divi5                     = $8C10 ; L mm48_fpdiv
mm48__divi6                     = $8C1D ; L mm48_fpdiv
am48_derror_edom_pinfc          = $8C26 ; G am48_derror_edom_infc
am48_derror_edom_infc           = $8C2A ; G am48_derror_edom_infc
am48_derror_edom_minfc          = $8C33 ; G am48_derror_edom_infc
mm48_fpmul                      = $8C39 ; G mm48_fpmul
mm48__mul1                      = $8C54 ; L mm48_fpmul
mm48__mul2                      = $8C5B ; L mm48_fpmul
mm48__mul3                      = $8C63 ; L mm48_fpmul
mm48__mul4                      = $8C7F ; L mm48_fpmul
mm48__mul5                      = $8C82 ; G mm48_fpmul
mm48__mul5a                     = $8C83 ; G mm48_fpmul
mm48__addac                     = $8C9A ; G mm48__addac
mm48__aac1                      = $8C9D ; L mm48__addac
mm48__cmpac                     = $8CB4 ; G mm48__cmpac
mm48__expsgn                    = $8CCD ; G mm48__expsgn
mm48__exps3                     = $8CD3 ; L mm48__expsgn
mm48__retzero                   = $8CD7 ; G mm48__expsgn
mm48__exps1                     = $8CDC ; L mm48__expsgn
mm48__exps2                     = $8CE0 ; L mm48__expsgn
mm48__getncix                   = $8CF7 ; G mm48__getncix
mm48__getcix                    = $8CFC ; G mm48__getncix
mm48__sleft                     = $8D0F ; G mm48__sleft
mm48__left                      = $8D10 ; G mm48__sleft
mm48__sright                    = $8D1B ; G mm48__sright
mm48__right                     = $8D1C ; G mm48__sright
mm48__subac                     = $8D27 ; G mm48__subac
mm48__sac1                      = $8D2A ; L mm48__subac
mm48__zero                      = $8D41 ; G mm48__zero
mm48__zero_no                   = $8D42 ; G mm48__zero
__dtoa_sgnabs                   = $8D4A ; G __dtoa_sgnabs
am48__dtoa_sgnabs               = $8D4A ; G am48__dtoa_sgnabs
__code_fp_math48_tail           = $8D53 ; G 
__code_input_head               = $8D53 ; G 
asm_in_inkey                    = $8D53 ; G asm_in_inkey
row_loop                        = $8D66 ; L asm_in_inkey
keyhit_0                        = $8D7F ; L asm_in_inkey
keyhit_1                        = $8D95 ; L asm_in_inkey
check_caps                      = $8DA7 ; L asm_in_inkey
check_sym                       = $8DB2 ; L asm_in_inkey
ascii                           = $8DBD ; L asm_in_inkey
rowtable                        = $8DC0 ; L asm_in_inkey
asm_in_wait_key                 = $8DE0 ; G asm_in_wait_key
zx_01_output_char_32_oterm_msg_pause = $8DE0 ; G zx_01_output_char_32_oterm_msg_pause
asm_in_test_key                 = $8DE6 ; G asm_in_test_key
__code_input_tail               = $8DEE ; G 
__code_inttypes_head            = $8DEE ; G 
__code_inttypes_tail            = $8DEE ; G 
__code_l_head                   = $8DEE ; G 
l_jpix                          = $8DEE ; G l_jpix
__thread_block_timeout          = $8DF1 ; G zx_crt
__thread_context_switch         = $8DF1 ; G zx_crt
__thread_unblock                = $8DF1 ; G zx_crt
l_ret                           = $8DF1 ; G l_ret
l_setmem_hl                     = $8E12 ; G l_setmem_hl
l_atou                          = $8E13 ; G l_atou
l_small_atou                    = $8E13 ; G l_small_atou
loop                            = $8E18 ; L l_small_atou
overflow                        = $8E38 ; L l_small_atou
l_neg_hl                        = $8E3B ; G l_neg_hl
l_utod_hl                       = $8E43 ; G l_utod_hl
l_neg_de                        = $8E4A ; G l_neg_de
l_jphl                          = $8E52 ; G l_jphl
l_addu_hl_bc                    = $8E53 ; G l_addu_hl_bc
l_inc_sp                        = $8E61 ; G l_inc_sp
l_addu_hl_de                    = $8E62 ; G l_addu_hl_de
l_maxu_bc_hl                    = $8E68 ; G l_maxu_bc_hl
bc_larger                       = $8E70 ; L l_maxu_bc_hl
l_num2char                      = $8E73 ; G l_num2char
alpha                           = $8E7A ; L l_num2char
l_valid_base                    = $8E7D ; G l_valid_base
l_char2num                      = $8E8A ; G l_char2num
l_eat_base_prefix               = $8E9C ; G l_eat_base_prefix
hex_2                           = $8EB2 ; L l_eat_base_prefix
hex_0                           = $8EB3 ; L l_eat_base_prefix
determine_base                  = $8EB6 ; L l_eat_base_prefix
l_eat_digits                    = $8EC9 ; G l_eat_digits
l_eat_sign                      = $8ED3 ; G l_eat_sign
l_eat_ws                        = $8EDF ; G l_eat_ws
l_offset_ix_de                  = $8EE7 ; G l_offset_ix_de
asm_b_array_clear               = $8EEE ; G asm_b_array_clear
l_zeroword_hl                   = $8EF0 ; G l_zeroword_hl
l_ltu_bc_hl                     = $8EF7 ; G l_ltu_bc_hl
l_decu_dehl                     = $8EFD ; G l_decu_dehl
msw                             = $8F03 ; L l_decu_dehl
limit                           = $8F09 ; L l_decu_dehl
__code_l_sccz80_head            = $8F0E ; G 
__code_l_sccz80_tail            = $8F0E ; G 
__code_l_sdcc_head              = $8F0E ; G 
__code_l_tail                   = $8F0E ; G 
__divsint_callee                = $8F0E ; G __divsint_callee
__mulint_callee                 = $8F15 ; G __mulint_callee
__code_l_sdcc_tail              = $8F1C ; G 
__code_locale_head              = $8F1C ; G 
__code_locale_tail              = $8F1C ; G 
__code_math_head                = $8F1C ; G 
l_divs_16_16x16                 = $8F1D ; G l_divs_16_16x16
l_small_divs_16_16x16           = $8F1D ; G l_small_divs_16_16x16
l0_divs_16_16x16                = $8F21 ; G l_divs_16_16x16
l0_small_divs_16_16x16          = $8F21 ; G l_small_divs_16_16x16
divide_by_zero                  = $8F3D ; L l_small_divs_16_16x16
l_small_divu_16_16x16           = $8F49 ; G l_small_divu_16_16x16
l0_small_divu_16_16x16          = $8F4D ; G l_small_divu_16_16x16
divisor_sixteen_bit             = $8F51 ; L l_small_divu_16_16x16
loop_16_0                       = $8F57 ; L l_small_divu_16_16x16
loop_16_1                       = $8F5F ; L l_small_divu_16_16x16
l_divu_16_16x8                  = $8F69 ; G l_divu_16_16x8
l_small_divu_16_16x8            = $8F69 ; G l_small_divu_16_16x16
l0_divu_16_16x8                 = $8F6D ; G l_divu_16_16x8
l0_small_divu_16_16x8           = $8F6D ; G l_small_divu_16_16x16
loop_8_0                        = $8F71 ; L l_small_divu_16_16x16
loop_8_2                        = $8F78 ; L l_small_divu_16_16x16
loop_8_1                        = $8F7A ; L l_small_divu_16_16x16
divide_zero                     = $8F7F ; L l_small_divu_16_16x16
l_mulu_16_16x16                 = $8F83 ; G l_mulu_16_16x16
l_small_mul_16_16x16            = $8F83 ; G l_small_mul_16_16x16
eight_bit_0                     = $8F91 ; L l_small_mul_16_16x16
eight_bit_1                     = $8F92 ; L l_small_mul_16_16x16
l_small_mul_16_16x8             = $8F92 ; G l_small_mul_16_16x16
rejoin                          = $8F95 ; L l_small_mul_16_16x16
loop_0                          = $8F98 ; L l_small_mul_16_16x16
loop_1                          = $8F9F ; L l_small_mul_16_16x16
l_mulu_24_16x8                  = $8FA3 ; G l_mulu_24_16x8
l_small_mul_32_32x32            = $8FBD ; G l_small_mul_32_32x32
l0_small_mul_32_32x32           = $8FCB ; G l_small_mul_32_32x32
loop_0                          = $8FCE ; L l_small_mul_32_32x32
loop_1                          = $8FDD ; L l_small_mul_32_32x32
__code_math_tail                = $8FED ; G 
__code_network_head             = $8FED ; G 
__code_network_tail             = $8FED ; G 
__code_nirvanam_head            = $8FED ; G 
__code_nirvanam_tail            = $8FED ; G 
__code_nirvanap_head            = $8FED ; G 
__code_nirvanap_tail            = $8FED ; G 
__code_setjmp_head              = $8FED ; G 
__code_setjmp_tail              = $8FED ; G 
__code_sound_bit_head           = $8FED ; G 
asm_bit_beep_raw_di             = $8FED ; G asm_bit_beep_raw_di
asm_bit_beep_raw                = $8FF6 ; G asm_bit_beep_raw
beeper                          = $8FFA ; L asm_bit_beep_raw
beixp3                          = $900E ; L asm_bit_beep_raw
behllp                          = $9013 ; L asm_bit_beep_raw
be_again                        = $902F ; L asm_bit_beep_raw
be_end                          = $9033 ; L asm_bit_beep_raw
asm_bit_close                   = $9036 ; G asm_bit_close
asm_bit_open                    = $9041 ; G asm_bit_open
__code_sound_bit_tail           = $9047 ; G 
__code_stdio_head               = $9047 ; G 
asm1_vfprintf_unlocked          = $9047 ; G zx_crt
asm_vfprintf_unlocked           = $9047 ; G zx_crt
asm0_vfprintf_unlocked          = $904B ; G zx_crt
format_loop_printf              = $9056 ; L zx_crt
__format_loop_printf            = $9058 ; L zx_crt
format_end_printf               = $907A ; L zx_crt
flag_chars_printf               = $9087 ; L zx_crt
interpret_printf                = $9091 ; L zx_crt
flags_printf                    = $9094 ; L zx_crt
flags_id_printf                 = $909B ; L zx_crt
width_printf                    = $90A5 ; L zx_crt
width_positive_printf           = $90BB ; L zx_crt
flag_found_printf               = $90C0 ; L zx_crt
width_from_format_printf        = $90C5 ; L zx_crt
precision_printf                = $90D2 ; L zx_crt
precision_positive_printf       = $90F6 ; L zx_crt
precision_from_format_printf    = $90FB ; L zx_crt
end_precision_printf            = $9106 ; L zx_crt
length_modifier_printf          = $9108 ; L zx_crt
converter_specifier_printf      = $910B ; L zx_crt
common_spec_printf              = $911D ; L zx_crt
unrecognized_printf             = $912D ; L zx_crt
long_spec_printf                = $9136 ; L zx_crt
printf_return_is_4              = $913A ; L zx_crt
printf_return_is_2              = $913F ; L zx_crt
printf_invoke_flags             = $9142 ; L zx_crt
skip_00_printf                  = $914A ; L zx_crt
skip_11_printf                  = $9152 ; L zx_crt
printf_invoke                   = $9157 ; L zx_crt
match_con_printf                = $9177 ; L zx_crt
match_ret_printf                = $9183 ; L zx_crt
acon_tbl_printf                 = $918B ; L zx_crt
rcon_tbl_printf                 = $9194 ; L zx_crt
fcon_tbl_printf                 = $9199 ; L zx_crt
printf_return_4                 = $919E ; L zx_crt
_return_join_4_printf           = $919F ; L zx_crt
printf_return_2                 = $91A3 ; L zx_crt
_return_join_2_printf           = $91A4 ; L zx_crt
error_format_precision_printf   = $91B2 ; L zx_crt
error_format_width_printf       = $91B3 ; L zx_crt
error_stream_printf             = $91B6 ; L zx_crt
__error_stream_printf           = $91B9 ; L zx_crt
error_printf_converter_printf   = $91C7 ; L zx_crt
asm1_vfscanf_unlocked           = $91CC ; G zx_crt
asm_vfscanf_unlocked            = $91CC ; G zx_crt
asm0_vfscanf_unlocked           = $91D0 ; G zx_crt
format_loop_scanf               = $91DD ; L zx_crt
percent_join_scanf              = $91E8 ; L zx_crt
exit_success_scanf              = $91F2 ; L zx_crt
mismatch_error_scanf            = $91FD ; L zx_crt
exit_failure_scanf              = $9200 ; L zx_crt
possible_error_scanf            = $920B ; L zx_crt
possible_conversion_0_scanf     = $9210 ; L zx_crt
stream_consume_pct_scanf        = $9216 ; L zx_crt
error_format_width_scanf        = $9227 ; L zx_crt
assignment_suppressed_scanf     = $922D ; L zx_crt
possible_conversion_1_scanf     = $9233 ; L zx_crt
suppressed_rejoin_scanf         = $923F ; L zx_crt
spec_return_scanf               = $9260 ; L zx_crt
spec_unmodified_scanf           = $9266 ; L zx_crt
spec_constant_scanf             = $926B ; L zx_crt
spec_long_scanf                 = $9271 ; L zx_crt
long_spec_scanf                 = $9273 ; L zx_crt
__spec_long_scanf               = $9278 ; L zx_crt
longlong_spec_scanf             = $927A ; L zx_crt
__spec_longlong_scanf           = $9280 ; L zx_crt
_printf                         = $9282 ; G printf
_printf_unlocked                = $9282 ; G printf_unlocked
asm_printf_unlocked             = $9282 ; G asm_printf_unlocked
_scanf                          = $928A ; G scanf
_scanf_unlocked                 = $928A ; G scanf_unlocked
asm_scanf_unlocked              = $928A ; G asm_scanf_unlocked
asm_vprintf_unlocked            = $9292 ; G asm_vprintf_unlocked
asm_vscanf_unlocked             = $9299 ; G asm_vscanf_unlocked
__stdio_length_modifier         = $92A0 ; G __stdio_length_modifier
lm_loop                         = $92A6 ; L __stdio_length_modifier
lm_found                        = $92B0 ; L __stdio_length_modifier
lm_double                       = $92B9 ; L __stdio_length_modifier
lm_chars                        = $92C2 ; L __stdio_length_modifier
__stdio_nextarg_bc              = $92CE ; G __stdio_nextarg_bc
__stdio_nextarg_de              = $92D3 ; G __stdio_nextarg_de
__stdio_varg_2                  = $92D8 ; G __stdio_varg
__stdio_verify_input            = $92DF ; G __stdio_verify_input
errors                          = $92FC ; L __stdio_verify_input
asm_fflush_unlocked             = $9304 ; G asm_fflush_unlocked
asm0_fflush_unlocked            = $930B ; G asm_fflush_unlocked
asm1_fflush_unlocked            = $930B ; G asm_fflush_unlocked
last_was_read                   = $9318 ; L asm_fflush_unlocked
forward_flush                   = $9335 ; L asm_fflush_unlocked
last_was_write                  = $9335 ; L asm_fflush_unlocked
asm__fflushall_unlocked         = $9340 ; G asm__fflushall_unlocked
file_loop                       = $9343 ; L asm__fflushall_unlocked
__stdio_verify_output           = $9351 ; G __stdio_verify_output
errors                          = $936E ; L __stdio_verify_output
__stdio_recv_input_eatc         = $9376 ; G __stdio_recv_input_eatc
_post_ungetc                    = $939E ; L __stdio_recv_input_eatc
_ungetc_rejected_ec             = $93A1 ; L __stdio_recv_input_eatc
_no_ungetc_ec                   = $93A9 ; L __stdio_recv_input_eatc
error_occurred                  = $93CA ; L __stdio_recv_input_eatc
stream_error                    = $93D8 ; L __stdio_recv_input_eatc
immediate_stream_error          = $93DE ; L __stdio_recv_input_eatc
immediate_eof_error             = $93E1 ; L __stdio_recv_input_eatc
error_exit                      = $93E3 ; L __stdio_recv_input_eatc
__stdio_scanf_d                 = $93E8 ; G __stdio_scanf_d
__stdio_scanf_number_head       = $9402 ; G __stdio_scanf_number_head
width_specified                 = $9414 ; L __stdio_scanf_number_head
__stdio_recv_input_eat_ws_repeat = $941C ; G __stdio_recv_input_eat_ws
__stdio_recv_input_eat_ws       = $9428 ; G __stdio_recv_input_eat_ws
__stdio_scanf_number_tail_int   = $9433 ; G __stdio_scanf_number_tail_int
number_valid                    = $9439 ; L __stdio_scanf_number_tail_int
number_invalid                  = $9444 ; L __stdio_scanf_number_tail_int
__stdio_scanf_sm_decimal        = $9446 ; G __stdio_scanf_sm_decimal
state_1                         = $9451 ; L __stdio_scanf_sm_decimal
state_2                         = $945B ; L __stdio_scanf_sm_decimal
__stdio_scanf_sm_decimal_join   = $945E ; G __stdio_scanf_sm_decimal
state_3t                        = $945E ; L __stdio_scanf_sm_decimal
state_3                         = $9461 ; L __stdio_scanf_sm_decimal
__stdio_scanf_sm_format         = $9468 ; G __stdio_scanf_sm_format
state_1t                        = $947C ; L __stdio_scanf_sm_format
state_1                         = $9486 ; L __stdio_scanf_sm_format
__stdio_scanf_sm_format_pct     = $948E ; G __stdio_scanf_sm_format
__stdio_scanf_sm_write          = $9498 ; G __stdio_scanf_sm_write
w_0                             = $949C ; L __stdio_scanf_sm_write
b_0                             = $94A0 ; L __stdio_scanf_sm_write
__stdio_printf_c                = $94A4 ; G __stdio_printf_c
right_justify                   = $94AE ; L __stdio_printf_c
output_char                     = $94B5 ; L __stdio_printf_c
left_justify                    = $94BB ; L __stdio_printf_c
width_padding                   = $94C2 ; L __stdio_printf_c
__stdio_nextarg_hl              = $94C9 ; G __stdio_nextarg_hl
__stdio_printf_d                = $94CE ; G __stdio_printf_d
__stdio_printf_f                = $94D4 ; G __stdio_printf_f
prec_defined                    = $94F4 ; L __stdio_printf_f
__stdio_printf_float_tail       = $94FA ; G __stdio_printf_float_tail
padding                         = $9511 ; L __stdio_printf_float_tail
print_float                     = $951A ; L __stdio_printf_float_tail
justification                   = $954A ; L __stdio_printf_float_tail
left_justify_zero_pad           = $9558 ; L __stdio_printf_float_tail
prefix_0                        = $955D ; L __stdio_printf_float_tail
prefix_1                        = $9569 ; L __stdio_printf_float_tail
prefix_2                        = $956B ; L __stdio_printf_float_tail
internal_zeroes                 = $9579 ; L __stdio_printf_float_tail
prefix_x                        = $9581 ; L __stdio_printf_float_tail
left_justify                    = $958E ; L __stdio_printf_float_tail
right_justify                   = $9597 ; L __stdio_printf_float_tail
right_justify_join              = $959C ; L __stdio_printf_float_tail
stack_restore                   = $95A1 ; L __stdio_printf_float_tail
float_max_s                     = $95A9 ; L __stdio_printf_float_tail
__stdio_printf_number_tail_int  = $95B1 ; G __stdio_printf_number_tail_int
float_max_s_end                 = $95B1 ; L __stdio_printf_float_tail
__stdio_printf_number_tail_uint = $95C5 ; G __stdio_printf_number_tail_int
signed_join                     = $95CC ; L __stdio_printf_number_tail_int
__stdio_printf_number_tail_zero = $95D9 ; G __stdio_printf_number_tail
__stdio_printf_number_tail      = $95E6 ; G __stdio_printf_number_tail
internal_required               = $95FA ; L __stdio_printf_number_tail
no_sign                         = $9602 ; L __stdio_printf_number_tail
no_base_indicator               = $9610 ; L __stdio_printf_number_tail
external_required               = $9618 ; L __stdio_printf_number_tail
number_zero                     = $9619 ; L __stdio_printf_number_tail
spacing_ok                      = $9629 ; L __stdio_printf_number_tail
right_justify                   = $9630 ; L __stdio_printf_number_tail
out_internal                    = $9638 ; L __stdio_printf_number_tail
hex_base                        = $9658 ; L __stdio_printf_number_tail
octal_base                      = $9663 ; L __stdio_printf_number_tail
no_base_indicator_2             = $9664 ; L __stdio_printf_number_tail
no_prefix_chars                 = $9671 ; L __stdio_printf_number_tail
stream_error                    = $9676 ; L __stdio_printf_number_tail
num_is_zero                     = $968B ; L __stdio_printf_number_tail
left_justify                    = $968F ; L __stdio_printf_number_tail
__stdio_printf_s                = $9699 ; G __stdio_printf_s
string_valid                    = $96A3 ; L __stdio_printf_s
precision_specified             = $96AC ; L __stdio_printf_s
padding_required                = $96B8 ; L __stdio_printf_s
right_justify                   = $96BE ; L __stdio_printf_s
left_justify                    = $96C9 ; L __stdio_printf_s
null_s                          = $96D5 ; L __stdio_printf_s
__stdio_printf_sign             = $96DC ; G __stdio_printf_sign
__stdio_printf_sign_0           = $96DF ; G __stdio_printf_sign
not_negative                    = $96E6 ; L __stdio_printf_sign
not_plus                        = $96ED ; L __stdio_printf_sign
__stdio_printf_padding_precision_hl = $96F3 ; G __stdio_send_output
__stdio_printf_padding_precision = $96F5 ; G __stdio_send_output
__stdio_printf_padding_precision_bc = $96F5 ; G __stdio_send_output
__stdio_printf_padding_width_hl = $96F9 ; G __stdio_send_output
__stdio_printf_padding_width    = $96FB ; G __stdio_send_output
__stdio_printf_padding_width_bc = $96FB ; G __stdio_send_output
__stdio_send_output_chars       = $96FD ; G __stdio_send_output
__stdio_send_output_buffer      = $9704 ; G __stdio_send_output
__stdio_send_output             = $9709 ; G __stdio_send_output
exit                            = $9719 ; L __stdio_send_output
error_detected                  = $971E ; L __stdio_send_output
__code_stdio_tail               = $9728 ; G 
__code_stdlib_head              = $9728 ; G 
asm_utoa                        = $9728 ; G asm_utoa
asm0_utoa                       = $972D ; G asm_utoa
asm1_utoa                       = $9733 ; G asm_utoa
compute_lp                      = $973A ; L asm_utoa
write_lp                        = $974C ; L asm_utoa
asm__strtoi                     = $9753 ; G asm__strtoi
positive_overflow               = $975D ; L asm__strtoi
check_errors                    = $9763 ; L asm__strtoi
__dtoa__                        = $9770 ; G __dtoa__
normal_form                     = $977F ; L __dtoa__
__dtoa_join                     = $9789 ; G __dtoa__
integer_digits                  = $978E ; L __dtoa__
fraction_begin                  = $979C ; L __dtoa__
fraction_digits                 = $979F ; L __dtoa__
round                           = $97AC ; L __dtoa__
__dtoa_prune                    = $97AF ; G __dtoa__
fraction_only                   = $97B5 ; L __dtoa__
precision_less                  = $97CF ; L __dtoa__
__dtoa_adjust_prec              = $97D4 ; G __dtoa_adjust_prec
__dtoa_count                    = $97D9 ; G __dtoa_count
padding                         = $97E3 ; L __dtoa_count
__dtoa_postamble                = $97F3 ; G __dtoa_postamble
length                          = $97FD ; L __dtoa_postamble
__dtoa_preamble                 = $9803 ; G __dtoa_preamble
check_prec                      = $980D ; L __dtoa_preamble
init_buffer                     = $9811 ; L __dtoa_preamble
__dtoa_print                    = $9827 ; G __dtoa_print
integer_part                    = $9832 ; L __dtoa_print
iz_zeroes                       = $9844 ; L __dtoa_print
fz_zeroes                       = $9855 ; L __dtoa_print
fraction_part                   = $985D ; L __dtoa_print
tz_zeroes                       = $986B ; L __dtoa_print
zero_terminate                  = $9873 ; L __dtoa_print
tze_zeroes                      = $987A ; L __dtoa_print
special_form                    = $9883 ; L __dtoa_print
__dtoa_print_zeroes             = $9888 ; G __dtoa_print_zeroes
__dtoa_remove_zeroes            = $9890 ; G __dtoa_remove_zeroes
loop_zeroes                     = $98A7 ; L __dtoa_remove_zeroes
__dtoa_round                    = $98B6 ; G __dtoa_round
loop_round                      = $98BC ; L __dtoa_round
__dtoa_special_form             = $98CC ; G __dtoa_special_form
string                          = $98D8 ; L __dtoa_special_form
zero                            = $98DF ; L __dtoa_special_form
__strtou__                      = $98EB ; G __strtou__
no_endp                         = $98F9 ; L __strtou__
valid_base                      = $9903 ; L __strtou__
positive                        = $9918 ; L __strtou__
loop                            = $9930 ; L __strtou__
unsigned_overflow               = $994E ; L __strtou__
invalid_base                    = $9957 ; L __strtou__
invalid_input                   = $995D ; L __strtou__
number_complete                 = $9962 ; L __strtou__
decimal                         = $9964 ; L __strtou__
__code_stdlib_tail              = $996B ; G 
__code_string_head              = $996B ; G 
_strcmp_callee                  = $996B ; G strcmp_callee
asm_strchrnul                   = $9971 ; G asm_strchrnul
loop                            = $9971 ; L asm_strchrnul
asm_strcmp                      = $997B ; G asm_strcmp
loop                            = $997B ; L asm_strcmp
equal                           = $9984 ; L asm_strcmp
different                       = $9988 ; L asm_strcmp
asm_strcpy                      = $998C ; G asm_strcpy
loop                            = $998E ; L asm_strcpy
asm_strnlen                     = $9996 ; G asm_strnlen
notend                          = $99A3 ; L asm_strnlen
asm_strstrip                    = $99A6 ; G asm_strstrip
loop                            = $99A6 ; L asm_strstrip
asm__memlwr                     = $99B1 ; G asm__memlwr
loop                            = $99B5 ; L asm__memlwr
asm__memupr                     = $99C1 ; G asm__memupr
loop                            = $99C5 ; L asm__memupr
asm_memset                      = $99D1 ; G asm_memset
__code_string_tail              = $99E2 ; G 
__code_temp_sp1_head            = $99E2 ; G 
__code_temp_sp1_tail            = $99E2 ; G 
__code_threads_head             = $99E2 ; G 
__code_threads_mutex_head       = $99E2 ; G 
__code_threads_tail             = $99E2 ; G 
asm_mtx_init                    = $99E2 ; G asm_mtx_init
unknown_type                    = $99FC ; L asm_mtx_init
__code_threads_mutex_tail       = $9A01 ; G 
__code_z80_head                 = $9A01 ; G 
asm_z80_delay_ms                = $9A01 ; G asm_z80_delay_ms
ms_loop                         = $9A03 ; L asm_z80_delay_ms
last_ms                         = $9A10 ; L asm_z80_delay_ms
asm_z80_delay_tstate            = $9A16 ; G asm_z80_delay_tstate
loop                            = $9A1D ; L asm_z80_delay_tstate
g0                              = $9A2B ; L asm_z80_delay_tstate
g1                              = $9A2C ; L asm_z80_delay_tstate
b0                              = $9A30 ; L asm_z80_delay_tstate
b1                              = $9A35 ; L asm_z80_delay_tstate
asm_z80_pop_ei                  = $9A38 ; G asm_z80_pop_ei
asm0_z80_pop_ei                 = $9A3D ; G asm_z80_pop_ei
ei_state                        = $9A41 ; L asm_z80_pop_ei
di_state                        = $9A43 ; L asm_z80_pop_ei
asm_z80_push_di                 = $9A45 ; G asm_z80_push_di
continue                        = $9A49 ; L asm_z80_push_di
__code_compiler_head            = $9A50 ; G 
__code_lib_head                 = $9A50 ; G 
__code_lib_tail                 = $9A50 ; G 
__code_z80_tail                 = $9A50 ; G 
_main                           = $9A50 ; G dhry_1_c
l_main_00154                    = $9A8B ; L dhry_1_c
l_main_00155                    = $9A9F ; L dhry_1_c
l_main_00102                    = $9AD8 ; L dhry_1_c
l_main_00103                    = $9AE7 ; L dhry_1_c
TIMER_START                     = $9B10 ; L dhry_1_c
l_main_00115                    = $9B40 ; L dhry_1_c
l_main_00156                    = $9B51 ; L dhry_1_c
l_main_00157                    = $9B74 ; L dhry_1_c
l_main_00104                    = $9BA0 ; L dhry_1_c
l_main_00127                    = $9BD7 ; L dhry_1_c
l_main_00112                    = $9BFF ; L dhry_1_c
l_main_00160                    = $9C33 ; L dhry_1_c
l_main_00113                    = $9C4E ; L dhry_1_c
l_main_00109                    = $9C51 ; L dhry_1_c
TIMER_STOP                      = $9CA7 ; L dhry_1_c
l_main_00110                    = $9CA7 ; L dhry_1_c
_Proc_1                         = $9F38 ; G dhry_1_c
l_Proc_1_00102                  = $9FF1 ; L dhry_1_c
l_Proc_1_00104                  = $A002 ; L dhry_1_c
_Proc_2                         = $A007 ; G dhry_1_c
l_Proc_2_00103                  = $A021 ; L dhry_1_c
l_Proc_2_00104                  = $A046 ; L dhry_1_c
_Proc_3                         = $A051 ; G dhry_1_c
l_Proc_3_00102                  = $A073 ; L dhry_1_c
_Proc_4                         = $A08F ; G dhry_1_c
l_Proc_4_00103                  = $A09A ; L dhry_1_c
l_Proc_4_00104                  = $A09B ; L dhry_1_c
_Proc_5                         = $A0AE ; G dhry_1_c
_Proc_6                         = $A0BA ; G dhry_2_c
l_Proc_6_00102                  = $A0DE ; L dhry_2_c
l_Proc_6_00126                  = $A0F0 ; L dhry_2_c
l_Proc_6_00103                  = $A0FA ; L dhry_2_c
l_Proc_6_00104                  = $A0FE ; L dhry_2_c
l_Proc_6_00127                  = $A10D ; L dhry_2_c
l_Proc_6_00106                  = $A114 ; L dhry_2_c
l_Proc_6_00108                  = $A119 ; L dhry_2_c
l_Proc_6_00110                  = $A11E ; L dhry_2_c
l_Proc_6_00112                  = $A121 ; L dhry_2_c
_Proc_7                         = $A124 ; G dhry_2_c
_Proc_8                         = $A149 ; G dhry_2_c
l_Proc_8_00103                  = $A1CD ; L dhry_2_c
l_Proc_8_00120                  = $A1DA ; L dhry_2_c
l_Proc_8_00101                  = $A1F0 ; L dhry_2_c
_Func_1                         = $A237 ; G dhry_2_c
l_Func_1_00102                  = $A24C ; L dhry_2_c
l_Func_1_00104                  = $A252 ; L dhry_2_c
_Func_2                         = $A255 ; G dhry_2_c
l_Func_2_00103                  = $A262 ; L dhry_2_c
l_Func_2_00145                  = $A26D ; L dhry_2_c
l_Func_2_00105                  = $A2AF ; L dhry_2_c
l_Func_2_00107                  = $A2BB ; L dhry_2_c
l_Func_2_00113                  = $A2C5 ; L dhry_2_c
l_Func_2_00148                  = $A2E0 ; L dhry_2_c
l_Func_2_00110                  = $A2EF ; L dhry_2_c
l_Func_2_00115                  = $A2F2 ; L dhry_2_c
_Func_3                         = $A2F7 ; G dhry_2_c
l_Func_3_00102                  = $A30B ; L dhry_2_c
l_Func_3_00104                  = $A30E ; L dhry_2_c
__code_compiler_tail            = $A311 ; G 
__code_user_head                = $A311 ; G 
__code_user_tail                = $A311 ; G 
__rodata_clib_head              = $A311 ; G 
__rodata_clib_tail              = $A311 ; G 
__rodata_driver_head            = $A311 ; G 
__rodata_driver_tail            = $A311 ; G 
__rodata_error_string_end_head  = $A311 ; G 
__rodata_error_strings_head     = $A311 ; G 
__rodata_error_strings_tail     = $A311 ; G 
__rodata_font_head              = $A311 ; G 
__rodata_font_tail              = $A311 ; G 
CRT_FONT                        = $A312 ; G zx_crt
__rodata_error_string_end_tail  = $A312 ; G 
__rodata_fcntl_head             = $A312 ; G 
__rodata_fcntl_tail             = $A312 ; G 
__rodata_font_4x8_head          = $A312 ; G 
_font_4x8_default               = $A312 ; G _font_4x8_default
__rodata_font_4x8_tail          = $A612 ; G 
__rodata_font_8x8_head          = $A612 ; G 
__rodata_font_8x8_tail          = $A612 ; G 
__rodata_font_fzx_head          = $A612 ; G 
__rodata_font_fzx_tail          = $A612 ; G 
__rodata_input_head             = $A612 ; G 
in_key_translation_table        = $A612 ; G in_key_translation_table
__dtoa_inf_s                    = $A6B2 ; G __dtoa_inf_s
__rodata_input_tail             = $A6B2 ; G 
__rodata_sound_bit_head         = $A6B2 ; G 
__rodata_sound_bit_tail         = $A6B2 ; G 
__rodata_stdio_head             = $A6B2 ; G 
__rodata_stdio_tail             = $A6B2 ; G 
__rodata_stdlib_head            = $A6B2 ; G 
__dtoa_nan_s                    = $A6B6 ; G __dtoa_nan_s
___str_0                        = $A6BA ; L dhry_1_c
__rodata_compiler_head          = $A6BA ; G 
__rodata_lib_head               = $A6BA ; G 
__rodata_lib_tail               = $A6BA ; G 
__rodata_stdlib_tail            = $A6BA ; G 
___str_1                        = $A6D9 ; L dhry_1_c
___str_2                        = $A6F8 ; L dhry_1_c
___str_3                        = $A6FA ; L dhry_1_c
___str_4                        = $A72A ; L dhry_1_c
___str_5                        = $A74E ; L dhry_1_c
___str_6                        = $A789 ; L dhry_1_c
___str_7                        = $A7C0 ; L dhry_1_c
___str_8                        = $A7C3 ; L dhry_1_c
___str_9                        = $A7F0 ; L dhry_1_c
___str_10                       = $A80F ; L dhry_1_c
___str_11                       = $A82E ; L dhry_1_c
___str_12                       = $A83E ; L dhry_1_c
___str_13                       = $A874 ; L dhry_1_c
___str_14                       = $A88D ; L dhry_1_c
___str_15                       = $A8A6 ; L dhry_1_c
___str_16                       = $A8BF ; L dhry_1_c
___str_17                       = $A8D8 ; L dhry_1_c
___str_18                       = $A8F1 ; L dhry_1_c
___str_19                       = $A90A ; L dhry_1_c
___str_20                       = $A923 ; L dhry_1_c
___str_21                       = $A93C ; L dhry_1_c
___str_22                       = $A948 ; L dhry_1_c
___str_23                       = $A961 ; L dhry_1_c
___str_24                       = $A992 ; L dhry_1_c
___str_25                       = $A9AB ; L dhry_1_c
___str_26                       = $A9C4 ; L dhry_1_c
___str_27                       = $A9DD ; L dhry_1_c
___str_28                       = $A9F6 ; L dhry_1_c
___str_29                       = $AA2B ; L dhry_1_c
___str_30                       = $AA3C ; L dhry_1_c
___str_31                       = $AA7C ; L dhry_1_c
___str_32                       = $AA95 ; L dhry_1_c
___str_33                       = $AAAE ; L dhry_1_c
___str_34                       = $AAC7 ; L dhry_1_c
___str_35                       = $AAE0 ; L dhry_1_c
___str_36                       = $AAF9 ; L dhry_1_c
___str_37                       = $AB2E ; L dhry_1_c
___str_38                       = $AB47 ; L dhry_1_c
__CODE_END_head                 = $AB7C ; G 
__CODE_END_tail                 = $AB7C ; G 
__DATA_head                     = $AB7C ; G 
__rodata_compiler_tail          = $AB7C ; G 
__rodata_user_head              = $AB7C ; G 
__rodata_user_tail              = $AB7C ; G 
__DATA_tail                     = $AB7D ; G 
__data_alloc_balloc_head        = $AB7D ; G 
__data_alloc_balloc_tail        = $AB7D ; G 
__data_alloc_malloc_head        = $AB7D ; G 
__data_clib_head                = $AB7D ; G 
__data_clib_tail                = $AB7D ; G 
__data_driver_head              = $AB7D ; G 
__data_driver_tail              = $AB7D ; G 
__data_font_head                = $AB7D ; G 
__data_font_tail                = $AB7D ; G 
__malloc_heap                   = $AB7D ; G zx_crt
__smc_clib_head                 = $AB7D ; G 
__smc_clib_tail                 = $AB7D ; G 
__smc_compiler_head             = $AB7D ; G 
__smc_compiler_tail             = $AB7D ; G 
__smc_driver_head               = $AB7D ; G 
__smc_driver_tail               = $AB7D ; G 
__smc_fcntl_head                = $AB7D ; G 
__smc_fcntl_tail                = $AB7D ; G 
__smc_font_head                 = $AB7D ; G 
__smc_font_tail                 = $AB7D ; G 
__smc_l_head                    = $AB7D ; G 
__smc_l_tail                    = $AB7D ; G 
__smc_lib_head                  = $AB7D ; G 
__smc_lib_tail                  = $AB7D ; G 
__smc_sound_bit_head            = $AB7D ; G 
__smc_sound_bit_tail            = $AB7D ; G 
__smc_user_head                 = $AB7D ; G 
__smc_user_tail                 = $AB7D ; G 
__data_alloc_malloc_tail        = $AB7F ; G 
__data_fcntl_head               = $AB7F ; G 
__stdio_heap                    = $AB7F ; G zx_crt
__data_fcntl_stdio_heap_head_head = $AB81 ; G 
__data_fcntl_tail               = $AB81 ; G 
__stdio_block                   = $AB81 ; L zx_crt
__data_fcntl_stdio_heap_body_head = $AB87 ; G 
__data_fcntl_stdio_heap_head_tail = $AB87 ; G 
__i_fcntl_heap_0                = $AB87 ; L zx_crt
__i_fcntl_fdstruct_0            = $AB8D ; L zx_crt
__edit_buffer_0                 = $ABB0 ; L zx_crt
__i_fcntl_heap_1                = $ABF0 ; L zx_crt
__i_fcntl_fdstruct_1            = $ABF6 ; L zx_crt
__i_fcntl_fdstruct_2            = $ABF6 ; L zx_crt
__i_fcntl_heap_2                = $AC13 ; L zx_crt
__data_fcntl_stdio_heap_body_tail = $AC7F ; G 
__data_fcntl_stdio_heap_tail_head = $AC7F ; G 
__i_fcntl_heap_3                = $AC7F ; L zx_crt
__data_fcntl_fdtable_body_head  = $AC81 ; G 
__data_fcntl_stdio_heap_tail_tail = $AC81 ; G 
__fcntl_fdtbl                   = $AC81 ; G zx_crt
__data_fcntl_fdtable_body_tail  = $AC87 ; G 
__data_sound_bit_head           = $AC87 ; G 
__sound_bit_state               = $AC87 ; G __sound_bit_state
__data_sound_bit_tail           = $AC88 ; G 
__data_stdio_head               = $AC88 ; G 
_stdin                          = $AC88 ; G zx_crt
__i_stdio_file_0                = $AC8A ; L zx_crt
_stdout                         = $AC99 ; G zx_crt
__i_stdio_file_1                = $AC9B ; L zx_crt
_stderr                         = $ACAA ; G zx_crt
__i_stdio_file_2                = $ACAC ; L zx_crt
__stdio_open_file_list          = $ACBB ; G zx_crt
__stdio_closed_file_list        = $ACBD ; G zx_crt
__data_stdio_tail               = $ACC1 ; G 
__data_stdlib_head              = $ACC1 ; G 
__data_stdlib_tail              = $ACC1 ; G 
__data_threads_head             = $ACC1 ; G 
__thrd_id                       = $ACC1 ; G zx_crt
_Regb                           = $ACC2 ; G dhry_1_c
__data_compiler_head            = $ACC2 ; G 
__data_lib_head                 = $ACC2 ; G 
__data_lib_tail                 = $ACC2 ; G 
__data_threads_tail             = $ACC2 ; G 
__BSS_head                      = $ACC4 ; G 
__DATA_END_head                 = $ACC4 ; G 
__DATA_END_tail                 = $ACC4 ; G 
__data_compiler_tail            = $ACC4 ; G 
__data_user_head                = $ACC4 ; G 
__data_user_tail                = $ACC4 ; G 
__BSS_UNINITIALIZED_head        = $ACC5 ; G 
__BSS_tail                      = $ACC5 ; G 
__sp_or_ret                     = $ACC5 ; L zx_crt
__BSS_UNINITIALIZED_tail        = $ACC7 ; G 
__bss_alloc_balloc_head         = $ACC7 ; G 
__bss_alloc_balloc_tail         = $ACC7 ; G 
__bss_alloc_malloc_head         = $ACC7 ; G 
__bss_alloc_malloc_tail         = $ACC7 ; G 
__bss_arch_head                 = $ACC7 ; G 
__bss_arch_tail                 = $ACC7 ; G 
__bss_clib_head                 = $ACC7 ; G 
__bss_clib_tail                 = $ACC7 ; G 
__bss_compress_aplib_head       = $ACC7 ; G 
__bss_compress_aplib_tail       = $ACC7 ; G 
__bss_driver_head               = $ACC7 ; G 
__bss_driver_tail               = $ACC7 ; G 
__bss_error_head                = $ACC7 ; G 
__bss_font_head                 = $ACC7 ; G 
__bss_font_tail                 = $ACC7 ; G 
_errno                          = $ACC7 ; G _errno
__bss_error_tail                = $ACC9 ; G 
__bss_fcntl_head                = $ACC9 ; G 
__bss_fcntl_tail                = $ACC9 ; G 
__bss_input_head                = $ACC9 ; G 
__bss_input_tail                = $ACC9 ; G 
__bss_sound_bit_head            = $ACC9 ; G 
__bss_sound_bit_tail            = $ACC9 ; G 
__bss_stdio_head                = $ACC9 ; G 
__bss_stdio_tail                = $ACC9 ; G 
__bss_stdlib_head               = $ACC9 ; G 
__exit_stack                    = $ACC9 ; G zx_crt
__quickexit_stack               = $ACCA ; G zx_crt
_Ptr_Glob                       = $ACCB ; G dhry_1_c
__bss_compiler_head             = $ACCB ; G 
__bss_lib_head                  = $ACCB ; G 
__bss_lib_tail                  = $ACCB ; G 
__bss_stdlib_tail               = $ACCB ; G 
__bss_string_head               = $ACCB ; G 
__bss_string_tail               = $ACCB ; G 
_Next_Ptr_Glob                  = $ACCD ; G dhry_1_c
_Int_Glob                       = $ACCF ; G dhry_1_c
_Bool_Glob                      = $ACD1 ; G dhry_1_c
_Ch_1_Glob                      = $ACD3 ; G dhry_1_c
_Ch_2_Glob                      = $ACD4 ; G dhry_1_c
_Arr_1_Glob                     = $ACD5 ; G dhry_1_c
_Arr_2_Glob                     = $AD39 ; G dhry_1_c
__NIRVANAM_TILE_IMAGES          = $BB80 ; G zx_crt
__NIRVANAP_TILE_IMAGES          = $BB80 ; G zx_crt
__BIFROSTH_TILE_IMAGES          = $BD74 ; G zx_crt
__BIFROSTL_TILE_IMAGES          = $BD74 ; G zx_crt
__BIFROST2_TILE_IMAGES          = $BF68 ; G zx_crt
IOCTL_ITERM_CAPS                = $C009 ; G zx_crt
IOCTL_ITERM_COOK                = $C011 ; G zx_crt
IOCTL_OTERM_CRLF                = $C012 ; G zx_crt
IOCTL_OCHAR_CRLF                = $C014 ; G zx_crt
IOCTL_ITERM_LINE                = $C021 ; G zx_crt
IOCTL_OTERM_COOK                = $C022 ; G zx_crt
IOCTL_ITERM_PASS                = $C041 ; G zx_crt
IOCTL_OTERM_PAUSE               = $C042 ; G zx_crt
IOCTL_ITERM_ECHO                = $C081 ; G zx_crt
IOCTL_OTERM_PAGE                = $C082 ; G zx_crt
_Begin_Time                     = $C0C1 ; G dhry_1_c
_End_Time                       = $C0C5 ; G dhry_1_c
_User_Time                      = $C0C9 ; G dhry_1_c
_Microseconds                   = $C0CD ; G dhry_1_c
_Dhrystones_Per_Second          = $C0D1 ; G dhry_1_c
_malloc_1                       = $C0D5 ; G dhry_1_c
_malloc_2                       = $C0FA ; G dhry_1_c
IOCTL_ITERM_CRLF                = $C101 ; G zx_crt
IOCTL_OTERM_BELL                = $C102 ; G zx_crt
IOCTL_ICHAR_CRLF                = $C103 ; G zx_crt
__BSS_END_head                  = $C11F ; G 
__BSS_END_tail                  = $C11F ; G 
__bss_compiler_tail             = $C11F ; G 
__bss_user_head                 = $C11F ; G 
__bss_user_tail                 = $C11F ; G 
IOCTL_ITERM_CURS                = $C201 ; G zx_crt
IOCTL_OTERM_SIGNAL              = $C202 ; G zx_crt
SP1V_UPDATELISTH                = $D1ED ; G zx_crt
SP1V_UPDATELISTT                = $D1EF ; G zx_crt
SP1V_PIXELBUFFER                = $D1F7 ; G zx_crt
SP1V_ATTRBUFFER                 = $D1FF ; G zx_crt
SP1V_UPDATEARRAY                = $D200 ; G zx_crt
__NIRVANAM_WIDE_IMAGES          = $D2F0 ; G zx_crt
__NIRVANAP_WIDE_IMAGES          = $D2F0 ; G zx_crt
IOCTL_OTERM_CLEAR               = $E002 ; G zx_crt
SP1V_ROTTBL                     = $F000 ; G zx_crt
SP1V_TILEARRAY                  = $F000 ; G zx_crt
_NIRVANAP_HOLE                  = $FB06 ; G zx_crt
__NIRVANAP_HOLE                 = $FB06 ; G zx_crt
_BIFROST2_HOLE                  = $FD47 ; G zx_crt
__BIFROST2_HOLE                 = $FD47 ; G zx_crt
_NIRVANAM_HOLE                  = $FDE2 ; G zx_crt
__NIRVANAM_HOLE                 = $FDE2 ; G zx_crt
__BIFROST2_TILE_MAP             = $FF01 ; G zx_crt
__BIFROSTH_TILE_MAP             = $FF01 ; G zx_crt
__BIFROSTL_TILE_MAP             = $FF01 ; G zx_crt
TAR__register_sp                = $FF58 ; L zx_crt
__register_sp                   = $FF58 ; L zx_crt
__CLIB_OPT_PRINTF_lo            = $10000 ; G zx_crt
__CLIB_OPT_SCANF_lo             = $10000 ; G zx_crt
__CLIB_OPT_PRINTF_ln            = $20000 ; G zx_crt
__CLIB_OPT_SCANF_ln             = $20000 ; G zx_crt
TAR__crt_on_exit                = $30002 ; L zx_crt
__crt_on_exit                   = $30002 ; L zx_crt
__CLIB_OPT_PRINTF_li            = $40000 ; G zx_crt
__CLIB_OPT_SCANF_li             = $40000 ; G zx_crt
__CLIB_OPT_PRINTF_lp            = $80000 ; G zx_crt
__CLIB_OPT_SCANF_lp             = $80000 ; G zx_crt
__CLIB_OPT_PRINTF_lB            = $100000 ; G zx_crt
__CLIB_OPT_SCANF_lB             = $100000 ; G zx_crt
__CLIB_OPT_SCANF_BRACKET        = $200000 ; G zx_crt
__CLIB_OPT_PRINTF               = $2FF6FF ; G zx_crt
__CLIB_OPT_SCANF                = $2FF6FF ; G zx_crt
__CPU_CLOCK                     = $3567E0 ; L asm_z80_delay_ms
__CPU_CLOCK                     = $3567E0 ; L zx_01_output_char_32_iterm_msg_bell
__CPU_CLOCK                     = $3567E0 ; L zx_01_output_char_32_oterm_msg_bell
__CPU_CLOCK                     = $3567E0 ; G zx_crt
__CLIB_OPT_PRINTF_a             = $400000 ; G zx_crt
__CLIB_OPT_SCANF_a              = $400000 ; G zx_crt
__CLIB_OPT_PRINTF_A             = $800000 ; G zx_crt
__CLIB_OPT_SCANF_A              = $800000 ; G zx_crt
__CLIB_OPT_PRINTF_e             = $1000000 ; G zx_crt
__CLIB_OPT_SCANF_e              = $1000000 ; G zx_crt
__CLIB_OPT_PRINTF_E             = $2000000 ; G zx_crt
__CLIB_OPT_SCANF_E              = $2000000 ; G zx_crt
__CLIB_OPT_PRINTF_f             = $4000000 ; G zx_crt
__CLIB_OPT_SCANF_f              = $4000000 ; G zx_crt
CLIB_OPT_PRINTF                 = $4000601 ; L zx_crt
__CLIB_OPT_PRINTF_F             = $8000000 ; G zx_crt
__CLIB_OPT_SCANF_F              = $8000000 ; G zx_crt
__CLIB_OPT_PRINTF_g             = $10000000 ; G zx_crt
__CLIB_OPT_SCANF_g              = $10000000 ; G zx_crt
__CLIB_OPT_PRINTF_G             = $20000000 ; G zx_crt
__CLIB_OPT_SCANF_G              = $20000000 ; G zx_crt
