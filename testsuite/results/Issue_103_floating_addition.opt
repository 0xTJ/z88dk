


	MODULE	Issue_103_floating_addition


	INCLUDE "z80_crt0.hdr"


	SECTION	code_compiler

._add_int
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,2	;const
	ld	de,0
	call	float
	call	dadd
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._add_int_longform
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,2	;const
	add	hl,sp
	call	dldpsh
	ld	hl,2	;const
	ld	de,0
	call	float
	call	dadd
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._add_int_longform2
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,2	;const
	add	hl,sp
	call	dldpsh
	ld	hl,2	;const
	ld	de,0
	call	float
	call	dadd
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._add_double
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,i_3+0
	call	dload
	call	dadd
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._sub_int
	ld	hl,i_3+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,1	;const
	ld	de,0
	call	float
	call	dsub
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._sub_int_longform
	ld	hl,i_3+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,2	;const
	add	hl,sp
	call	dldpsh
	ld	hl,1	;const
	ld	de,0
	call	float
	call	dsub
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._sub_int_longform2
	ld	hl,i_3+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,2	;const
	add	hl,sp
	call	dldpsh
	ld	hl,1	;const
	ld	de,0
	call	float
	call	dswap
	call	dsub
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._sub_double
	ld	hl,i_3+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,i_2+0
	call	dload
	call	dsub
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._mult_int
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,i_3+0
	call	dload
	call	dmul
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._mult_double
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,i_3+0
	call	dload
	call	dmul
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._mult_double_longform
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,2	;const
	add	hl,sp
	call	dldpsh
	ld	hl,i_3+0
	call	dload
	call	dmul
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._mult_double_longform2
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,2	;const
	add	hl,sp
	call	dldpsh
	ld	hl,2	;const
	ld	de,0
	call	float
	call	dmul
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._div_int
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,i_3+0
	call	dload
	call	ddiv
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._div_double
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,i_3+0
	call	dload
	call	ddiv
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._div_double_longform
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,2	;const
	add	hl,sp
	call	dldpsh
	ld	hl,i_3+0
	call	dload
	call	ddiv
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._div_double_longform2
	ld	hl,i_3+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,2	;const
	add	hl,sp
	call	dldpsh
	ld	hl,1	;const
	ld	de,0
	call	float
	call	dswap
	call	ddiv
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



._main
	ld	hl,i_1+0
	push	hl
	call	_add_int
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+12
	push	hl
	call	_add_int_longform
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+33
	push	hl
	call	_add_int_longform2
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+55
	push	hl
	call	_add_double
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+70
	push	hl
	call	_sub_int
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+82
	push	hl
	call	_sub_int_longform
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+103
	push	hl
	call	_sub_double
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+118
	push	hl
	call	_sub_int_longform2
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+140
	push	hl
	call	_mult_int
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+153
	push	hl
	call	_mult_double
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+169
	push	hl
	call	_mult_double_longform
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+194
	push	hl
	call	_mult_double_longform2
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+220
	push	hl
	call	_div_int
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+232
	push	hl
	call	_div_double
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+247
	push	hl
	call	_div_double_longform
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ld	hl,i_1+271
	push	hl
	call	_div_double_longform2
	call	dpush
	ld	a,4
	call	printf
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ret


	SECTION	rodata_compiler
.i_1
	defm	"add_int %f"
	defb	10

	defm	""
	defb	0

	defm	"add_int_longform %f"
	defb	10

	defm	""
	defb	0

	defm	"add_int_longform2 %f"
	defb	10

	defm	""
	defb	0

	defm	"add_double %f"
	defb	10

	defm	""
	defb	0

	defm	"sub_int %f"
	defb	10

	defm	""
	defb	0

	defm	"sub_int_longform %f"
	defb	10

	defm	""
	defb	0

	defm	"sub_double %f"
	defb	10

	defm	""
	defb	0

	defm	"sub_int_longform2 %f"
	defb	10

	defm	""
	defb	0

	defm	"mult_int %f"
	defb	10

	defm	""
	defb	0

	defm	"mult_double %f"
	defb	10

	defm	""
	defb	0

	defm	"mult_double_longform %f"
	defb	10

	defm	""
	defb	0

	defm	"mult_double_longform2 %f"
	defb	10

	defm	""
	defb	0

	defm	"div_int %f"
	defb	10

	defm	""
	defb	0

	defm	"div_double %f"
	defb	10

	defm	""
	defb	0

	defm	"div_double_longform %f"
	defb	10

	defm	""
	defb	0

	defm	"div_double_longform2 %f"
	defb	10

	defm	""
	defb	0

.i_2
	;1.000000
	defb	0,0,0,0,0,129
.i_3
	;2.000000
	defb	0,0,0,0,0,130


	SECTION	bss_compiler
	SECTION	code_compiler



	GLOBAL	open
	GLOBAL	_open
	GLOBAL	creat
	GLOBAL	_creat
	GLOBAL	close
	GLOBAL	_close
	GLOBAL	read
	GLOBAL	_read
	GLOBAL	write
	GLOBAL	_write
	GLOBAL	lseek
	GLOBAL	_lseek
	GLOBAL	readbyte
	GLOBAL	_readbyte
	GLOBAL	writebyte
	GLOBAL	_writebyte
	GLOBAL	getcwd
	GLOBAL	_getcwd
	GLOBAL	rmdir
	GLOBAL	_rmdir
	GLOBAL	getwd
	GLOBAL	_getwd
	GLOBAL	_RND_BLOCKSIZE
	GLOBAL	rnd_loadblock
	GLOBAL	_rnd_loadblock
	GLOBAL	rnd_saveblock
	GLOBAL	_rnd_saveblock
	GLOBAL	rnd_erase
	GLOBAL	_rnd_erase
	GLOBAL	__FOPEN_MAX
	GLOBAL	__sgoioblk
	GLOBAL	__sgoioblk_end
	GLOBAL	fopen_zsock
	GLOBAL	_fopen_zsock
	GLOBAL	fopen
	GLOBAL	_fopen
	GLOBAL	freopen
	GLOBAL	_freopen
	GLOBAL	fdopen
	GLOBAL	_fdopen
	GLOBAL	fmemopen
	GLOBAL	_fmemopen
	GLOBAL	funopen
	GLOBAL	_funopen
	GLOBAL	fclose
	GLOBAL	_fclose
	GLOBAL	fflush
	GLOBAL	_fflush
	GLOBAL	closeall
	GLOBAL	_closeall
	GLOBAL	fgets
	GLOBAL	_fgets
	GLOBAL	fputs
	GLOBAL	_fputs
	GLOBAL	fputc
	GLOBAL	_fputc
	GLOBAL	fputs_callee
	GLOBAL	_fputs_callee
	GLOBAL	fputc_callee
	GLOBAL	_fputc_callee
	GLOBAL	fgetc
	GLOBAL	_fgetc
	GLOBAL	ungetc
	GLOBAL	_ungetc
	GLOBAL	feof
	GLOBAL	_feof
	GLOBAL	puts
	GLOBAL	_puts
	GLOBAL	ftell
	GLOBAL	_ftell
	GLOBAL	fgetpos
	GLOBAL	_fgetpos
	GLOBAL	fseek
	GLOBAL	_fseek
	GLOBAL	fread
	GLOBAL	_fread
	GLOBAL	fwrite
	GLOBAL	_fwrite
	GLOBAL	gets
	GLOBAL	_gets
	GLOBAL	printf
	GLOBAL	_printf
	GLOBAL	fprintf
	GLOBAL	_fprintf
	GLOBAL	sprintf
	GLOBAL	_sprintf
	GLOBAL	snprintf
	GLOBAL	_snprintf
	GLOBAL	vfprintf
	GLOBAL	_vfprintf
	GLOBAL	vsnprintf
	GLOBAL	_vsnprintf
	GLOBAL	printn
	GLOBAL	_printn
	GLOBAL	scanf
	GLOBAL	_scanf
	GLOBAL	fscanf
	GLOBAL	_fscanf
	GLOBAL	sscanf
	GLOBAL	_sscanf
	GLOBAL	vfscanf
	GLOBAL	_vfscanf
	GLOBAL	vsscanf
	GLOBAL	_vsscanf
	GLOBAL	getarg
	GLOBAL	_getarg
	GLOBAL	fchkstd
	GLOBAL	_fchkstd
	GLOBAL	fgetc_cons
	GLOBAL	_fgetc_cons
	GLOBAL	fputc_cons
	GLOBAL	_fputc_cons
	GLOBAL	fgets_cons
	GLOBAL	_fgets_cons
	GLOBAL	fabandon
	GLOBAL	_fabandon
	GLOBAL	fdtell
	GLOBAL	_fdtell
	GLOBAL	fdgetpos
	GLOBAL	_fdgetpos
	GLOBAL	rename
	GLOBAL	_rename
	GLOBAL	remove
	GLOBAL	_remove
	GLOBAL	getk
	GLOBAL	_getk
	GLOBAL	puts_cons
	GLOBAL	_puts_cons
	GLOBAL	printk
	GLOBAL	_printk
	GLOBAL	_add_int
	GLOBAL	_add_int_longform
	GLOBAL	_add_int_longform2
	GLOBAL	_add_double
	GLOBAL	_sub_int
	GLOBAL	_sub_int_longform
	GLOBAL	_sub_int_longform2
	GLOBAL	_sub_double
	GLOBAL	_mult_int
	GLOBAL	_mult_double
	GLOBAL	_mult_double_longform
	GLOBAL	_mult_double_longform2
	GLOBAL	_div_int
	GLOBAL	_div_double
	GLOBAL	_div_double_longform
	GLOBAL	_div_double_longform2
	GLOBAL	_main




