reset_codearea(); (line 143)

Number of sections = 1, total size = 0
*1. "", size = 0, addr = 0, asmpc = 0, opcode_size = 0
    bytes =
    start =

Number of modules = 0
--------------------------------------------------------------------------------
section_blank = new_section(""); (line 146)

Number of sections = 1, total size = 0
*1. "", size = 0, addr = 0, asmpc = 0, opcode_size = 0
    bytes =
    start =

Number of modules = 0
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 150)

Number of sections = 1, total size = 0
*1. "", size = 0, addr = 0, asmpc = 0, opcode_size = 0
    bytes =
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
p = append_reserve( 0 ); (line 155)

Number of sections = 1, total size = 0
*1. "", size = 0, addr = 0, asmpc = 0, opcode_size = 0
    bytes =
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
append_byte( 1 ); (line 159)

Number of sections = 1, total size = 1
*1. "", size = 1, addr = 0, asmpc = 0, opcode_size = 1
    bytes = $01
    start =   0

Number of modules = 1
*0. "", start = 0, size = 1
    bytes = $01
--------------------------------------------------------------------------------
next_PC(); (line 160)

Number of sections = 1, total size = 1
*1. "", size = 1, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0

Number of modules = 1
*0. "", start = 0, size = 1
    bytes = $01
--------------------------------------------------------------------------------
append_word( 0x0302 ); (line 161)

Number of sections = 1, total size = 3
*1. "", size = 3, addr = 0, asmpc = 1, opcode_size = 2
    bytes = $01 $02 $03
    start =   0

Number of modules = 1
*0. "", start = 0, size = 3
    bytes = $01 $02 $03
--------------------------------------------------------------------------------
next_PC(); (line 162)

Number of sections = 1, total size = 3
*1. "", size = 3, addr = 0, asmpc = 3, opcode_size = 0
    bytes = $01 $02 $03
    start =   0

Number of modules = 1
*0. "", start = 0, size = 3
    bytes = $01 $02 $03
--------------------------------------------------------------------------------
append_long( 0x07060504 ); (line 163)

Number of sections = 1, total size = 7
*1. "", size = 7, addr = 0, asmpc = 3, opcode_size = 4
    bytes = $01 $02 $03 $04 $05 $06 $07
    start =   0

Number of modules = 1
*0. "", start = 0, size = 7
    bytes = $01 $02 $03 $04 $05 $06 $07
--------------------------------------------------------------------------------
next_PC(); (line 164)

Number of sections = 1, total size = 7
*1. "", size = 7, addr = 0, asmpc = 7, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07
    start =   0

Number of modules = 1
*0. "", start = 0, size = 7
    bytes = $01 $02 $03 $04 $05 $06 $07
--------------------------------------------------------------------------------
append_value( 0x0A0908, 3 ); (line 165)

Number of sections = 1, total size = 10
*1. "", size = 10, addr = 0, asmpc = 7, opcode_size = 3
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A
    start =   0

Number of modules = 1
*0. "", start = 0, size = 10
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A
--------------------------------------------------------------------------------
next_PC(); (line 166)

Number of sections = 1, total size = 10
*1. "", size = 10, addr = 0, asmpc = 10, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A
    start =   0

Number of modules = 1
*0. "", start = 0, size = 10
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A
--------------------------------------------------------------------------------
append_2bytes( 11, 12 ); (line 167)

Number of sections = 1, total size = 12
*1. "", size = 12, addr = 0, asmpc = 10, opcode_size = 2
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C
    start =   0

Number of modules = 1
*0. "", start = 0, size = 12
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C
--------------------------------------------------------------------------------
next_PC(); (line 168)

Number of sections = 1, total size = 12
*1. "", size = 12, addr = 0, asmpc = 12, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C
    start =   0

Number of modules = 1
*0. "", start = 0, size = 12
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C
--------------------------------------------------------------------------------
p = append_reserve( 5 ); (line 169)

Number of sections = 1, total size = 17
*1. "", size = 17, addr = 0, asmpc = 12, opcode_size = 5
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $00 $00 $00 $00 $00
    start =   0

Number of modules = 1
*0. "", start = 0, size = 17
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $00 $00 $00 $00 $00
--------------------------------------------------------------------------------
next_PC(); (line 170)

Number of sections = 1, total size = 17
*1. "", size = 17, addr = 0, asmpc = 17, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $00 $00 $00 $00 $00
    start =   0

Number of modules = 1
*0. "", start = 0, size = 17
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $00 $00 $00 $00 $00
--------------------------------------------------------------------------------
memcpy( p, "hello", 5 ); (line 179)

Number of sections = 1, total size = 17
*1. "", size = 17, addr = 0, asmpc = 17, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
    start =   0

Number of modules = 1
*0. "", start = 0, size = 17
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
--------------------------------------------------------------------------------
append_file_contents( file, -1 ); (line 188)

Number of sections = 1, total size = 20
*1. "", size = 20, addr = 0, asmpc = 17, opcode_size = 3
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 20
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
--------------------------------------------------------------------------------
next_PC(); (line 189)

Number of sections = 1, total size = 20
*1. "", size = 20, addr = 0, asmpc = 20, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 20
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
--------------------------------------------------------------------------------
append_file_contents( file, -1 ); (line 192)

Number of sections = 1, total size = 20
*1. "", size = 20, addr = 0, asmpc = 20, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 20
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
--------------------------------------------------------------------------------
next_PC(); (line 193)

Number of sections = 1, total size = 20
*1. "", size = 20, addr = 0, asmpc = 20, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 20
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
--------------------------------------------------------------------------------
append_file_contents( file, 1 ); (line 197)

Number of sections = 1, total size = 21
*1. "", size = 21, addr = 0, asmpc = 20, opcode_size = 1
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1
    start =   0

Number of modules = 1
*0. "", start = 0, size = 21
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1
--------------------------------------------------------------------------------
next_PC(); (line 198)

Number of sections = 1, total size = 21
*1. "", size = 21, addr = 0, asmpc = 21, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1
    start =   0

Number of modules = 1
*0. "", start = 0, size = 21
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1
--------------------------------------------------------------------------------
append_file_contents( file, 1 ); (line 202)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, asmpc = 21, opcode_size = 1
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
next_PC(); (line 203)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, asmpc = 22, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_byte( &addr, 12 ); (line 207)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, asmpc = 22, opcode_size = 0
    bytes = $0C $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_word( &addr, 0x0A0B ); (line 210)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_long( &addr, 0x06070809 ); (line 213)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $09 $08 $07 $06 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_value( &addr, 0x030405, 3 ); (line 216)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_file_contents( file, &addr, -1 ); (line 221)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_file_contents( file, &addr, -1 ); (line 226)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_file_contents( file, &addr, 2 ); (line 231)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_file_contents( file, &addr, -1 ); (line 237)

Number of sections = 1, total size = 24
*1. "", size = 24, addr = 0, asmpc = 22, opcode_size = 2
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
--------------------------------------------------------------------------------
next_PC(); (line 240)

Number of sections = 1, total size = 24
*1. "", size = 24, addr = 0, asmpc = 24, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 246)

Number of sections = 1, total size = 24
*1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
*1. "", start = 24, size = 0
    bytes =
--------------------------------------------------------------------------------
section_code = new_section("code"); (line 251)

Number of sections = 2, total size = 24
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24
*2. "code", size = 0, addr = 0, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
append_long(0x78563412); (line 254)

Number of sections = 2, total size = 28
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24
*2. "code", size = 4, addr = 0, asmpc = 0, opcode_size = 4
    bytes = $12 $34 $56 $78
    start =   0   0

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 4
    bytes = $12 $34 $56 $78
--------------------------------------------------------------------------------
next_PC(); (line 255)

Number of sections = 2, total size = 28
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24
*2. "code", size = 4, addr = 0, asmpc = 4, opcode_size = 0
    bytes = $12 $34 $56 $78
    start =   0   0

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 4
    bytes = $12 $34 $56 $78
--------------------------------------------------------------------------------
append_long(0xF0DEBC9A); (line 257)

Number of sections = 2, total size = 32
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24
*2. "code", size = 8, addr = 0, asmpc = 4, opcode_size = 4
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
--------------------------------------------------------------------------------
next_PC(); (line 258)

Number of sections = 2, total size = 32
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24
*2. "code", size = 8, addr = 0, asmpc = 8, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 261)

Number of sections = 2, total size = 32
*1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24
 2. "code", size = 8, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8

Number of modules = 3
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
*2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
--------------------------------------------------------------------------------
section_data = new_section("data"); (line 265)

Number of sections = 3, total size = 32
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24
 2. "code", size = 8, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8
*3. "data", size = 0, addr = 0, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0

Number of modules = 3
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
*2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
memcpy( append_reserve( 11 ), "hello world", 11 ); (line 268)

Number of sections = 3, total size = 43
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24
 2. "code", size = 8, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8
*3. "data", size = 11, addr = 0, asmpc = 0, opcode_size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
    start =   0   0   0

Number of modules = 3
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
*2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
--------------------------------------------------------------------------------
next_PC(); (line 269)

Number of sections = 3, total size = 43
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24
 2. "code", size = 8, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8
*3. "data", size = 11, addr = 0, asmpc = 11, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
    start =   0   0   0

Number of modules = 3
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
*2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 272)

Number of sections = 3, total size = 43
*1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
 2. "code", size = 8, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8   8
 3. "data", size = 11, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 11, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("data"); (line 276)

Number of sections = 3, total size = 43
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
 2. "code", size = 8, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8   8
*3. "data", size = 11, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 11, size = 0
    bytes =
--------------------------------------------------------------------------------
append_byte(0xAA); (line 278)

Number of sections = 3, total size = 44
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
 2. "code", size = 8, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8   8
*3. "data", size = 12, addr = 0, asmpc = 0, opcode_size = 1
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
next_PC(); (line 279)

Number of sections = 3, total size = 44
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
 2. "code", size = 8, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8   8
*3. "data", size = 12, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
new_section("code"); (line 281)

Number of sections = 3, total size = 44
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
*2. "code", size = 8, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
append_byte(0xAA); (line 283)

Number of sections = 3, total size = 45
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
*2. "code", size = 9, addr = 0, asmpc = 0, opcode_size = 1
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
next_PC(); (line 284)

Number of sections = 3, total size = 45
 1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
*2. "code", size = 9, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
new_section(""); (line 286)

Number of sections = 3, total size = 45
*1. "", size = 24, addr = 0, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
 2. "code", size = 9, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
append_byte(0xAA); (line 288)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 0, asmpc = 0, opcode_size = 1
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
next_PC(); (line 289)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
sections_alloc_addr( -1 ); (line 292)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 0, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 25, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 34, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
sections_alloc_addr( 100 ); (line 293)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 100, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 125, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 134, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
set_cur_module_id( 0 ); (line 303)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 100, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 125, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 134, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
*0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
 3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
Dump file module 0

test.bin = $18 $00 $00 $00 $00 $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1
           $F2 $F3 $F2 $F3 $F1 $F2 $F1 $F2 $F3 $F1 $F1 $F2 $F3 $FF $FF $FF
           $FF
--------------------------------------------------------------------------------
set_cur_module_id( 1 ); (line 304)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 100, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 125, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 134, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
 3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
Dump file module 1

test.bin = $08 $00 $00 $00 $04 $63 $6F $64 $65 $12 $34 $56 $78 $9A $BC $DE
           $F0 $FF $FF $FF $FF
--------------------------------------------------------------------------------
set_cur_module_id( 2 ); (line 305)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 100, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 125, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 134, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
*2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
 3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
Dump file module 2

test.bin = $0B $00 $00 $00 $04 $64 $61 $74 $61 $68 $65 $6C $6C $6F $20 $77
           $6F $72 $6C $64 $FF $FF $FF $FF
--------------------------------------------------------------------------------
set_cur_module_id( 3 ); (line 306)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 100, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 125, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 134, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
Dump file module 3

test.bin = $01 $00 $00 $00 $00 $AA $01 $00 $00 $00 $04 $63 $6F $64 $65 $AA
           $01 $00 $00 $00 $04 $64 $61 $74 $61 $AA $FF $FF $FF $FF
--------------------------------------------------------------------------------
Dump file code area 

test.bin = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1
           $F2 $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA $12 $34 $56 $78 $9A $BC $DE
           $F0 $AA $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
--------------------------------------------------------------------------------
Dump file Chunk from 0 to 7, 8 bytes

test.bin = $0C $0B $0A $09 $08 $07 $06 $05
--------------------------------------------------------------------------------
Dump file Chunk from 8 to 15, 8 bytes

test.bin = $04 $03 $F1 $F2 $F3 $F2 $F3 $F1
--------------------------------------------------------------------------------
Dump file Chunk from 16 to 23, 8 bytes

test.bin = $F2 $F1 $F2 $F3 $F1 $F1 $F2 $F3
--------------------------------------------------------------------------------
Dump file Chunk from 24 to 31, 8 bytes

test.bin = $AA $12 $34 $56 $78 $9A $BC $DE
--------------------------------------------------------------------------------
Dump file Chunk from 32 to 39, 8 bytes

test.bin = $F0 $AA $68 $65 $6C $6C $6F $20
--------------------------------------------------------------------------------
Dump file Chunk from 40 to 45, 6 bytes

test.bin = $77 $6F $72 $6C $64 $AA
--------------------------------------------------------------------------------
