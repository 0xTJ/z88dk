;------------------------------------------------------------------------------
; List of all the CPU opcodes
;------------------------------------------------------------------------------

__END__
[rabbit]	ld (SP+N), hl				=>     D4
[rabbit]	ld (SP+N), ix				=> DD, D4
[rabbit]	ld (SP+N), iy				=> FD, D4

[rabbit]	ld (sp + N), hl				=>     D4, N
[rabbit]	ld (sp + N), ix				=> DD, D4, N
[rabbit]	ld (sp + N), iy				=> FD, D4, N

[rabbit]	ld hl,  (sp + N)				=>     C4, N
[rabbit]	ld hl', (sp + N)				=> 76, C4, N
[rabbit]	ld ix,  (sp + N)				=> DD, C4, N
[rabbit]	ld iy,  (sp + N)				=> FD, C4, N
	
[rabbit]	ld {bc de hl}', {bc de}		=> ED, 49 + $1*10 - $2*8

;------------------------------------------------------------------------------
; 16-Bit Arithmetic Group
;------------------------------------------------------------------------------
                                               
[rabbit]	add sp, D					=>     27, D

[rabbit]	{and or} hl,  de			=>         DC + $1*10
[rabbit]	{and or} hl', de			=> 76,     DC + $1*10

[rabbit]	{and or} ix,  de			=>     DD, DC + $1*10
[rabbit]	{and or} iy,  de			=>     FD, DC + $1*10

[rabbit]	bool hl						=>     CC
[rabbit]	bool hl'					=> 76, CC
[rabbit]	bool ix						=> DD, CC
[rabbit]	bool iy						=> FD, CC

;------------------------------------------------------------------------------
; Rotate and Shift Group
;------------------------------------------------------------------------------
			{rlca rrca rla rra}											=>     07 + $1*8
	
			{rlc rrc rl rr sla sra .   srl} {b c d e h l (hl)   a}		=>     CB,    $1*8 + $2
[zilog]		{.   .   .  .  .   .   sll .  } {b c d e h l (hl)   a}		=>     CB,    $1*8 + $2
	
			{rlc rrc rl rr sla sra .   srl} {. . . . . . (ix+D) .}		=> DD, CB, D, $1*8 + $2
[zilog]		{.   .   .  .  .   .   sll .  } {. . . . . . (ix+D) .}		=> DD, CB, D, $1*8 + $2
	
			{rlc rrc rl rr sla sra .   srl} {. . . . . . (iy+D) .}		=> FD, CB, D, $1*8 + $2
[zilog]		{.   .   .  .  .   .   sll .  } {. . . . . . (iy+D) .}		=> FD, CB, D, $1*8 + $2

[rabbit]	rl de		=>     F3
[rabbit]	rr de		=>     FB
[rabbit]	rr hl		=>     FC

[rabbit]	rl de'		=> 76, F3
[rabbit]	rr de'		=> 76, FB
[rabbit]	rr hl'		=> 76, FC

[rabbit]	rr ix		=> DD, FC
[rabbit]	rr iy		=> FD, FC

;------------------------------------------------------------------------------
; Bit Set, Reset, and Test Group
;------------------------------------------------------------------------------
			{. bit res set} {0 1 2 3 4 5 6 7}, {b c d e h l (hl)   a}		=>     CB,    $1*40 + $2*8 + $3
[rabbit]	{. .   res set} {0 1 2 3 4 5 6 7}, {b c d e h l .      a}'		=> 76, CB,    $1*40 + $2*8 + $3
			{. bit res set} {0 1 2 3 4 5 6 7}, {. . . . . . (ix+D) .}		=> DD, CB, D, $1*40 + $2*8 + $3
			{. bit res set} {0 1 2 3 4 5 6 7}, {. . . . . . (iy+D) .}		=> FD, CB, D, $1*40 + $2*8 + $3
			
; TODO: add all ALTD combinations
[rabbit]	altd				=>     76

; TODO: add all IOE IOI combinations
[rabbit]	ioe				=>     DB
[rabbit]	ioi				=>     D3

